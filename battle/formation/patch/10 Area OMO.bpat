#import GreedyBanditA.bpat


%The Greedy Bandit is a stronger variant of
%the Bandit that appears in Shy Guy's Toybox.
%Bandits are Shy Guys, so they fit right in
%if you ask me. 


%The fun thing about Shy Guy's Toybox
%is all the coloured Shy Guys will have
%slightly different stats and speeds
%to make them more challenging.



%Red Shy Guys are the weakest and
%easiest to take out

@		$ShyGuy_RED
{
	[Level]        18`b
	[MaxHP]         8`b
	[Coins]         2`b
	[Escape]       50`b
	[Item]         70`b
	[AirLift]      65`b
	[Hurricane]    30`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
}


@	$StatusTable_80219224
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear       50`
	.Status:Static     50`
	.Status:Paralyze   40`
	.Status:Shrink     60`
	.Status:Stop       60`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   -1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}


@	$Script_80219A04
{
   [9C]  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  [1DC]  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  [1F0]  		Call  SetAnimation  ( .Actor:Self 00000001 003B0004 )
  [248]  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  [370]  		Wait  5`
  [3BC]  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  [488]  	Wait  2`
  [4E8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  [5C8]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  [6C4]  Wait  3`
  [6D0]  Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
}



@	$Script_8021A12C
{
   [B0]  Wait  10`
   [D4]  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  [1B8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  [268]  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  [29C]  			Wait  3`
  [3B8]  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  [494]  		Wait  4`
  [4F0]  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  [5B4]  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  [5E8]  	Wait  4`
  [658]  Wait  2`
  [664]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  [8F0]  		Wait  6`
  [914]  		Wait  10`
  [9F0]  		Wait  5`
  [A90]  		Wait  8`
  [AD4]  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
}




%Blue Shy Guys have the fastest
%speed and frame data, but have
%low HP and high status suscepibility


@	$ShyGuy_BLU
{
	[Level]        18`b
	[MaxHP]         7`b
	[Coins]         2`b
	[Escape]       50`b
	[AirLift]      55`b
	[Hurricane]    60`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  90`b
}



@	$StatusTable_8021AD24
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      70`
	.Status:Poison     70`
	.Status:Frozen      0`
	.Status:Dizzy      70`
	.Status:Fear       70`
	.Status:Static     70`
	.Status:Paralyze   70`
	.Status:Shrink     80`
	.Status:Stop       80`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}





@	$Script_8021B504
{
   [9C]  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  [1DC]  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  [248]  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  [370]  		Wait  5`
  [3BC]  		Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  [4E8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[18.0] )
  [5C8]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  [65C]  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.8] )
  [6C4]  Wait  2`
  [6D0]  Call  SetActorSpeed     ( .Actor:Self *Fixed[18.0] )
}



@	$Script_8021BC2C
{
   [B0]  Wait  10`
   [D4]  Call  SetActorSpeed     ( .Actor:Self *Fixed[9.0] )
  [1B8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  [268]  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  [29C]  			Wait  4`
  [2C8]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  [3B8]  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  [3CC]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  [494]  		Wait  5`
  [4F0]  		Call  SetActorSpeed ( .Actor:Self *Fixed[24.0] )
  [5B4]  Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  [5E8]  	Wait  3`
  [614]  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  [664]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  [860]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  [8F0]  		Wait  4`
  [914]  		Wait  6`
  [974]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  [9F0]  		Wait  3`
  [A90]  		Wait  10`
  [AD4]  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
}


%Yellow Shy Guys are the slowest,
%but hit harder than all of the others


@	$ShyGuy_YLW
{
	[Level]        19`b
	[MaxHP]         9`b
	[AirLift]      45`b
	[Hurricane]    20`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  40`b
}


@	$StatusTable_8021C824
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear       30`
	.Status:Static     30`
	.Status:Paralyze   30`
	.Status:Shrink     25`
	.Status:Stop       60`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       1`
	.Status:End
}


@	$Script_8021D004
{
   [9C]  Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
  [1DC]  		Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
  [248]  		Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
  [25C]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  [370]  		Wait  10`
  [3BC]  		Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
  [4E8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[9.0] )
  [5C8]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  [6C4]  Wait  6`
  [6D0]  Call  SetActorSpeed     ( .Actor:Self *Fixed[11.0] )
}



@	$Script_8021D72C
{
   [B0]  Wait  12`
   [D4]  Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
  [1B8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[9.0] )
  [268]  		Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  [29C]  			Wait  9`
  [3B8]  		Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  [494]  		Wait  10`
  [4F0]  		Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  [5B4]  Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  [5E8]  	Wait  6`
  [664]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  [8F0]  		Wait  6`
  [914]  		Wait  12`
  [9F0]  		Wait  6`
  [A90]  		Wait  13`
  [AD4]  		Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
}


%Pink Shy Guys have high HP
%and jump lower than all the
%others.


@	$ShyGuy_PNK
{
	[Level]        19`b
	[MaxHP]        10`b
	[Coins]         2`b
}



@	$StatusTable_8021E324
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      60`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear       30`
	.Status:Static     50`
	.Status:Paralyze   40`
	.Status:Shrink     35`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   -1`
	.Status:ShrinkTurnMod     -1`
	.Status:StopTurnMod       -1`
	.Status:End
}




@	$Script_8021EB04
{
   [9C]  Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  [1DC]  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  [248]  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  [25C]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  [370]  		Wait  5`
  [3BC]  		Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  [4E8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  [5C8]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  [65C]  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  [6C4]  Wait  2`
  [6D0]  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
}


@	$Script_8021F22C
{
   [B0]  Wait  8`
   [D4]  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  [1B8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[9.5] )
  [268]  		Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  [29C]  			Wait  4`
  [2C8]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  [3B8]  		Call  SetActorSpeed ( .Actor:Self *Fixed[11.0] )
  [3CC]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  [494]  		Wait  5`
  [4F0]  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.5] )
  [5B4]  Call  SetActorSpeed ( .Actor:Self *Fixed[11.2] )
  [5E8]  	Wait  4`
  [614]  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  [664]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  [860]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  [8F0]  		Wait  6`
  [914]  		Wait  8`
  [974]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  [9F0]  		Wait  3`
  [A90]  		Wait  10`
  [AD4]  		Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
}



%Green Shy Guys are decently fast
%and attack twice in the same
%turn, making them the most unique.


@	$ShyGuy_GRN
{
	[Level]        19`b
	[MaxHP]         8`b
	[Coins]         2`b
	[Escape]       50`b
	[Item]         80`b
	[AirLift]      55`b
	[Hurricane]    20`b % Bow's "Spook" as well
}




@	$StatusTable_8021FE24
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      20`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      20`
	.Status:Fear       80`
	.Status:Static     50`
	.Status:Paralyze   40`
	.Status:Shrink     85`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      -1`
	.Status:PoisonTurnMod     -1`
	.Status:FrozenTurnMod     -1`
	.Status:DizzyTurnMod      -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     -1`
	.Status:ParalyzeTurnMod   -1`
	.Status:ShrinkTurnMod     2`
	.Status:StopTurnMod       -1`
	.Status:End
}


@	$Script_80220604
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0203 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[7.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0204 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0205 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  5`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0204
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0201 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  2`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[13.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0204 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0205 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0201 )
    4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[7.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0204 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0205 )
  5AC:  Wait  2`
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0201 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[13.0] )
  6E4:  ExecWait  $Script_802200C4
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}




@	$Script_80220D2C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0209 )
   B0:  Wait  10`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0203 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0204 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
  294:  		Thread
  29C:  			Wait  6`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B020A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0205 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  5`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0204
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
  5E0:  Thread
  5E8:  	Wait  3`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B020A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
    5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
  5E0:  Thread
  5E8:  	Wait  3`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B020A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  2`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0209 )
  8F0:  		Wait  5`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0207 )
  914:  		Wait  7`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0210 )
  9F0:  		Wait  5`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0211 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0213 )
  A88:  		EndIf
  A90:  		Wait  10`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0204
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0201 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}


%Medi Guys have 1 defense and like to attack
%and heal in the same turn.


@	$MediGuy
{
	[Level]        20`b
	[MaxHP]         7`b
	[Coins]         3`b
	[Escape]       40`b
	[Item]         90`b
	[AirLift]      40`b
	[Hurricane]    25`b % Bow's "Spook" as well
	[UpAndAway]    55`b
	[PowerBounce]  50`b
}



@	$DefenseTable_8022345C
{
	.Element:Normal 00000001
	.Element:Shock  00000002
	.Element:End
}

@	$StatusTable_80223470
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear       50`
	.Status:Static     30`
	.Status:Paralyze   30`
	.Status:Shrink     35`
	.Status:Stop       40`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   -1`
	.Status:ShrinkTurnMod     -1`
	.Status:StopTurnMod       -1`
	.Status:End
}




@	$Script_FlyingAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Thread
   7C:  	SetF  *Var0  *Fixed[0.0]
   8C:  	Loop  0000000F
   98:  		AddF  *Var0  *Fixed[6.0]
   A8:  		Call  SetPartRotation   ( .Actor:Self 00000001 00000000 00000000 *Var0 )
   C8:  		Wait  1`
   D4:  	EndLoop
   DC:  EndThread
   E4:  Call  SetAnimation  ( .Actor:Self 00000001 00400003 )
   FC:  Call  SetGoalToTarget   ( .Actor:Self )
  10C:  Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  128:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  13C:  Call  FlyToGoal     ( .Actor:Self  0`  -4` .Easing:CosIn )
  158:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  17C:  Switch  *VarA
  188:  	CaseOR  ==  .HitResult:Miss % 6
  194:  	CaseOR  ==  .HitResult:Lucky % 5
  1A0:  		Wait  5`
  1AC:  		Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  1C0:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  1D4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1E8:  		Call  SetAnimation      ( .Actor:Self 00000001 00400005 )
  200:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  21C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  238:  		Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  258:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  274:  		Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
  288:  		Thread
  290:  			Wait  15`
  29C:  			Set   *Var0  00000000
  2AC:  			Loop  0000003C
  2B8:  				Call  $Function_802185AC    ( *Var0 *Var1 0000000F 0000003C *Fixed[30.0] )
  2D8:  				Call  SetPartRotation       ( .Actor:Self 00000001 00000000 00000000 *Var1 )
  2F8:  				Add   *Var0  00000001
  308:  				Wait  1`
  314:  			EndLoop
  31C:  		EndThread
  324:  		Call  SetGoalToTarget   ( .Actor:Self )
  334:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Sub   *Var0  00000032
  360:  		Add   *Var2  00000001
  370:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  38C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  3B8:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  3D4:  		If  *VarA  ==  .HitResult:Lucky % 5
  3E4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  408:  		EndIf
  410:  		Wait  20`
  41C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  458:  		Call  SetActorSpeed ( .Actor:Self *Fixed[20.0] )
  46C:  		ExecWait  $Script_8022371C
  478:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  490:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  4A4:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  4B8:  		Return
  4C0:  	EndCaseGroup
  4C8:  EndSwitch
  4D0:  Wait  10`
  4DC:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  4F0:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  504:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  518:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  530:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  54C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  568:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
    4DC:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  4F0:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  504:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  518:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  530:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  54C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  568:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
    4DC:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  4F0:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
  504:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  518:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  530:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  54C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  568:  Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  588:  Set   *VarA  *Var0
  598:  Set   *VarB  *Var1
  5A8:  Set   *VarC  *Var2
  5B8:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  5D4:  Call  PlaySoundAtActor  ( .Actor:Self 000002F9 )
  5E8:  Call  SetGoalToTarget   ( .Actor:Self )
  5F8:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  614:  Add   *Var2  00000001
  624:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  640:  Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  654:  Call  SetAnimation  ( .Actor:Self 00000001 00400005 )
  66C:  Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  688:  Wait  2`
  694:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:2:70` 00000003 00000020 )
  6BC:  Switch  *Var0
  6C8:  	CaseOR  ==  .HitResult:Hit % 0
  6D4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6E0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  6F0:  		Call  UseBattleCamPreset    ( 00000002 )
  700:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  71C:  		Add   *Var0  0000001E
  72C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  740:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  75C:  		Call  JumpWithBounce        ( .Actor:Self  10` *Fixed[2.0] )
  774:  		Wait  10`
  780:  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  794:  		ExecWait  $Script_8022371C
  7A0:  	EndCaseGroup
  7A8:  EndSwitch
  7B0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7C4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  7D8:  Return
  7E0:  End
}



@	$Script_HealOneAlly
{
  [170]  Wait  15`
  [194]  Wait  5`
  [1FC]  	Wait  3`
  [208]  	Call  PlaySoundAtActor  ( *VarA 0000206D )
  [21C]  	Call  PlaySoundAtActor  ( *VarA 00000214 )
  [230]  	Wait  15`
}



@	$Script_TakeTurn_8022494C
{
    0:  ExecWait  $Script_8022486C
    C:  If  *Var0  ==  FFFFFFFF
   1C:  	ExecWait  $Script_FlyingAttack
   28:  Else
   30:  	Call  RandInt   ( 000003E8 *VarA )
   44:  	If  *VarA  <  00000258
   54:  		ExecWait  $Script_HealOneAlly
   55:			Wait 60`
   57:          ExecWait  $Script_FlyingAttack
   60:  	Else
   68:  		ExecWait  $Script_FlyingAttack
   74:  	EndIf
   7C:  EndIf
   84:  Return
   8C:  End
}



%Groove Guys have a lot of HP
%but they take extra damage from
%everything, as if they had a
%P-Up P-Down on.


@	$GrooveGuy
{
	[Level]        20`b
	[MaxHP]        12`b
	[Coins]         3`b
}	


@	$DefenseTable_80224A2C
{
	.Element:Normal FFFFFFFF
	.Element:Cosmic FFFFFFFD
	.Element:End
}

@	 $StatusTable_80224A40
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      20`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      10`
	.Status:Fear       50`
	.Status:Static     50`
	.Status:Paralyze   30`
	.Status:Shrink     25`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -2`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   -1`
	.Status:ShrinkTurnMod     -1`
	.Status:StopTurnMod       -1`
	.Status:End
}



@	$Script_BasicAttack
{
   [8C]  Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  [1CC]  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  [220]  		Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  [348]  		Wait  1`
  [394]  		Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  [428]  	Wait  1`
  [488]  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  [534]  Wait  1`
  [540]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  [650]  		Wait  1`
  [65C]  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
}



@	$Script_SleepySpin
{
   [C4]  Call  SetActorSpeed     ( .Actor:Self *Fixed[9.0] )
  [194]  Loop  00000022
  [25C]  		Wait  10`
  [334]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:StatusAlwaysHits 00000000 ~DebuffType:Dizzy:2:50` 00000002 00000020 )
  [3BC]  				Loop  00000022
  [470]  		Loop  00000012
  [52C]  			Loop  00000018
  [5D8]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  [640]  		Wait  10`
  [65C]  		Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
}




%Spy Guys can hit multiple times


@	$SpyGuy
{
	% stats
	[Index]        24b
	[Level]        21`b
	[MaxHP]         9`b
	[Coins]         2`b
	[Escape]       30`b
	[Item]         70`b
	[AirLift]      15`b
	[Hurricane]    10`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce]  75`b
}


@	$DefenseTable_802274A4
{
	.Element:Normal 00000000
	.Element:Shock  00000000
	.Element:End
}

@ $StatusTable_802274B8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      10`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      60`
	.Status:Fear       40`
	.Status:Static      0`
	.Status:Paralyze   50`
	.Status:Shrink     75`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}


@	$Script_SlingshotAttack
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     (  1` )
   7C:  EndIf
   84:  Call  PlaySoundAtActor  ( .Actor:Self 000002E7 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003F0015 )
   B0:  Wait  5`
   BC:  Wait  5`
   C8:  Call  SetAnimation      ( .Actor:Self 00000001 003F0016 )
   E0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   FC:  Add   *Var0  0000000A
  10C:  Add   *Var1  0000000A
  11C:  Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  13C:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  158:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  16C:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  17C:  	Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
  19C:  EndIf
  1A4:  Call  PlaySoundAtActor  ( .Actor:Self 000002E8 )
  1B8:  Call  SetPartSounds     ( .Actor:Self 00000002 .ActorSound:Jump 00000000 00000000 )
  1D8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1FC:  Switch  *Var0
  208:  	CaseOR  ==  .HitResult:Miss % 6
  214:  	CaseOR  ==  .HitResult:Lucky % 5
  220:  		Set   *VarA  *Var0
  230:  		Thread
  238:  			Loop
  244:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  260:  				Call  GetPartOffset ( .Actor:Self 00000002 *Var3 *Var4 *Var5 )
  280:  				If  *Var0  >  *Var3
  290:  					BreakLoop
  298:  				EndIf
  2A0:  				Wait  1`
  2AC:  			EndLoop
  2B4:  			If  *VarA  ==  .HitResult:Lucky % 5
  2C4:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2E8:  			EndIf
  2F0:  		EndThread
  2F8:  		Call  SetGoalToTarget   ( .Actor:Self )
  308:  		Call  AddGoalPos        ( .Actor:Self  -100`  0`  0` )
  324:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  340:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[18.0] )
  358:  		Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
  370:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0` .True )
  398:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  3B4:  		Call  YieldTurn ( )
  3C0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3DC:  		Wait  5`
  3E8:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  400:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  414:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  428:  		Return
  430:  	EndCaseGroup
  438:  EndSwitch
  440:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  454:  Call  SetGoalToTarget   ( .Actor:Self )
  464:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[19.0] )
  498:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
  4B0:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0` .True )
  4D8:  Wait  2`
  4E4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    440:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  454:  Call  SetGoalToTarget   ( .Actor:Self )
  464:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[19.0] )
  498:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
  4B0:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0` .True )
  4D8:  Wait  2`
  4E4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
    440:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  454:  Call  SetGoalToTarget   ( .Actor:Self )
  464:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  480:  Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[19.0] )
  498:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.001953125] )
  4B0:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  0` .True )
  4D8:  Wait  2`
  4E4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000002 00000020 )
  50C:  Switch  *Var0
  518:  	CaseOR  ==  .HitResult:Hit % 0
  524:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  530:  		Call  GetPartOffset     ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  550:  		Sub   *Var0  00000064
  560:  		Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  578:  		Call  JumpPartTo        ( .Actor:Self 00000002 *Var0  0` *Var2  30` .True )
  5A0:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  5BC:  		Call  YieldTurn ( )
  5C8:  	EndCaseGroup
  5D0:  EndSwitch
  5D8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5EC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  600:  Return
  608:  End
}



@	$Script_HammerAttack
{

   [8C]  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  [134]  Call  SetActorSpeed     ( .Actor:Self *Fixed[17.0] )
  [1D0]  Wait  4`
  [1FC]  	Wait  1`
  [294]  		Wait  3`
  [2DC]  		Wait  5`
  [3D8]  Wait  3`
  [3E4]  Wait  1`
  [3F0]  Wait  1`
  [3FC]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000005 00000020 )
}


%Sky Guys come in a nice shade
%of sky blue. They shoot their
%slingshots way faster too.

@	$SkyGuy
{
	[Level]        19`b
	[MaxHP]         9`b
	[Coins]         2`b
}


@	$StatusTable_80229624
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear       30`
	.Status:Static     30`
	.Status:Paralyze   30`
	.Status:Shrink     30`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   -1`
	.Status:ShrinkTurnMod     -1`
	.Status:StopTurnMod       -1`
	.Status:End
}




@	$Script_TakeTurn_8022A9D0
{
   [C0]  Wait  6`
  [140]  Wait  4`
  [238]  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[22.0] )
  [354]  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[25.0] )
  [524]  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[25.0] )
  [58C]  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 00000004 00000020 )
  [614]  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[16.0] )
}


%Scripts for after the Sky Guy turns into
%a Shy Guy, because of course.

@	$Script_8022B7EC
{
   [9C]  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  [1DC]  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  [248]  		Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
  [370]  		Wait  5`
  [4E8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  [5C8]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  [6C4]  Wait  2`
  [6D0]  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
}



@	$Script_8022BF14
{
   [B0]  Wait  10`
   [D4]  Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  [1B8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  [268]  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  [29C]  			Wait  5`
  [3B8]  		Call  SetActorSpeed ( .Actor:Self *Fixed[11.0] )
  [494]  		Wait  5`
  [4F0]  		Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
  [5B4]  Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  [5E8]  	Wait  3`
  [658]  Wait  1`
  [664]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  [8F0]  		Wait  5`
  [914]  		Wait  8`
  [9F0]  		Wait  5`
  [A90]  		Wait  10`
  [AD4]  		Call  SetActorSpeed ( .Actor:Self *Fixed[14.0] )
}



%Pyro Guys are now also weak to
%Hammer attacks in addition to just
%being much faster.
%They also can attack your partner...


@	$PyroGuy
{
	[Level]        20`b
	[MaxHP]        10`b
	[Coins]         2`b
	[Hurricane]    10`b % Bow's "Spook" as well
}



@	$DefenseTable_8022CB4C
{
	.Element:Normal 00000000
	.Element:Water  FFFFFFFE
	.Element:Ice    FFFFFFFE
	.Element:Fire   00000063
	.Element:Shock  00000000
	.Element:Hammer FFFFFFFF
	.Element:Blast  FFFFFFFF
	.Element:Throw  FFFFFFFE
	.Element:End
}

@ $StatusTable_8022CB88
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear       60`
	.Status:Static     50`
	.Status:Paralyze   50`
	.Status:Shrink     40`
	.Status:Stop       75`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   -1`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       -1`
	.Status:End
}





@	$Script_TakeTurn_8022D344
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  UseBattleCamPreset    ( 0000003F )
   38:  Call  BattleCamTargetActor  ( .Actor:Self )
   48:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   60:  Call  SetAnimation  ( .Actor:Self 00000001 003E0003 )
   78:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.0] )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Add   *Var0  00000046
   C8:  Set   *Var1  00000000
   D8:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   F4:  Call  RunToGoal     ( .Actor:Self  0` .False )
  10C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  128:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  144:  Call  SetAnimation  ( .Actor:Self 00000001 003E0004 )
  15C:  Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  170:  Call  SetGoalToTarget   ( .Actor:Self )
  180:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  19C:  Add   *Var0  00000014
  1AC:  Set   *Var1  00000000
  1BC:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1D8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1F0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  214:  Switch  *Var0
  220:  	CaseOR  ==  .HitResult:Miss % 6
  22C:  	CaseOR  ==  .HitResult:Lucky % 5
  238:  		Set   *VarA  *Var0
  248:  		Call  SetActorSounds        ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  264:  		Call  SetAnimation  ( .Actor:Self 00000001 003E0005 )
  27C:  		Call  SetGoalToTarget       ( .Actor:Self )
  28C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  2A4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  2B8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  2CC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Sub   *Var0  0000001E
  2F8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  314:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  334:  		If  *VarA  ==  .HitResult:Lucky % 5
  344:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  368:  		EndIf
  370:  		Call  ResetAllActorSounds   ( .Actor:Self )
  380:  		Sub   *Var0  00000014
  390:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3AC:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  3CC:  		Wait  15`
  3D8:  		Call  UseBattleCamPreset    ( 00000002 )
  3E8:  		Call  YieldTurn ( )
  3F4:  		Call  SetActorYaw       ( .Actor:Self  180` )
  408:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  424:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  438:  		ExecWait  $Script_8022CDDC
  444:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  45C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  470:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  484:  		Return
  48C:  	EndCaseGroup
  494:  EndSwitch
  49C:  Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4B0:  Call  SetAnimation      ( .Actor:Self 00000001 003E0005 )
  4C8:  Call  SetGoalToTarget   ( .Actor:Self )
  4D8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4F4:  Add   *Var0  0000000A
  504:  Set   *Var1  00000000
  514:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  530:  Call  RunToGoal ( .Actor:Self  0` .False )
  548:  Wait  2`
  554:  Call  SetGoalToTarget   ( .Actor:Self )
  564:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Fire 00000000 00000000 00000006 00000020 )
  58C:  Switch  *Var0
  598:  	CaseOR  ==  .HitResult:Hit % 0
  5A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5B0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5C0:  		Call  UseBattleCamPreset    ( 00000002 )
  5D0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5EC:  		Add   *Var0  0000001E
  5FC:  		Set   *Var1  00000000
  60C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  620:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  65C:  		Call  SetAnimation  ( .Actor:Self 00000001 003E0001 )
  674:  		Wait  4`
  68C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  6A0:  		ExecWait  $Script_8022CDDC
  6AC:  	EndCaseGroup
  6B4:  EndSwitch
  468:  				Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  49C:  Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  49D: Call  SetActorSpeed ( .Actor:Self *Fixed[20.0] )
  4B0:  Call  SetAnimation      ( .Actor:Self 00000001 003E0005 )
  4C8:  Call  SetGoalToTarget   ( .Actor:Self )
  4D8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  4F4:  Add   *Var0  0000000A
  504:  Set   *Var1  00000000
  514:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  530:  Call  RunToGoal ( .Actor:Self  0` .False )
  554:  Call  SetGoalToTarget   ( .Actor:Self )
  564:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Fire 00000000 00000000 00000001 00000020 )
  566: Switch  *Var0
  598:  	CaseOR  ==  .HitResult:Hit % 0
  5A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5B0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5C0:  		Call  UseBattleCamPreset    ( 00000002 )
  5D0:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5EC:  		Add   *Var0  0000001E
  5FC:  		Set   *Var1  00000000
  60C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  620:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  65C:  		Call  SetAnimation  ( .Actor:Self 00000001 003E0001 )
  674:  		Wait  4`
  680:  		Call  YieldTurn ( )
  68C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[24.0] )
  6A0:  		ExecWait  $Script_8022CDDC
  6AC:  	EndCaseGroup
  6B4:  EndSwitch
  6BC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6D0:  Return
  6D8:  End
}




%Anti Guy has the funny number for
%his HP and attacks twice, just to
%be an absolute troll.
%OH YEAH and he's immune to statuses
%too, so don't try that.

@	$AntiGuy
{
	[Level]        69`b
	[MaxHP]        69`b
}

@ $StatusTable_8022191C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}


@	$Script_Init_80221A60
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_802233AC )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_80221AAC )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80221C20 )
   29:  Wait 15`
   3C:  Return
   44:  End
}


@	$Script_HandleEvent_80221C20
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   28:  Switch  *Var0
   34:  	CaseOR  ==  .Event:HitCombo % 9
   40:  	CaseOR  ==  .Event:Hit % A
   4C:  		SetConst  *Var0  00000001
   5C:  		SetConst  *Var1  003B050C
   6C:  		ExecWait  DoNormalHit
   78:  	EndCaseGroup
   80:  	Case  ==  .Event:BurnHit % E
   8C:  		SetConst  *Var0  00000001
   9C:  		SetConst  *Var1  003B050D
   AC:  		SetConst  *Var2  003B050E
   BC:  		ExecWait  DoBurnHit
   C8:  	Case  ==  .Event:BurnDeath % 24
   D4:  		SetConst  *Var0  00000001
   E4:  		SetConst  *Var1  003B050D
   F4:  		SetConst  *Var2  003B050E
  104:  		ExecWait  DoBurnHit
  110:  		SetConst  *Var0  00000001
  120:  		SetConst  *Var1  003B050E
  121:			Call  SetMusicTrack ( 00000000 .Song:UnusedFanfare 00000000 00000008 )
  130:  		ExecWait  DoDeath
  13C:  		Return
  144:  	Case  ==  .Event:SpinSmashHit % B
  150:  		SetConst  *Var0  00000001
  160:  		SetConst  *Var1  003B050C
  170:  		ExecWait  DoSpinSmashHit
  17C:  	Case  ==  .Event:SpinSmashDeath % 21
  188:  		SetConst  *Var0  00000001
  198:  		SetConst  *Var1  003B050C
  1A8:  		ExecWait  DoSpinSmashHit
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  003B050C
  121:			Call  SetMusicTrack ( 00000000 .Song:UnusedFanfare 00000000 00000008 )
  1D4:  		ExecWait  DoDeath
  1E0:  		Return
  1E8:  	Case  ==  .Event:ShockHit % 2F
  1F4:  		SetConst  *Var0  00000001
  204:  		SetConst  *Var1  003B050C
  214:  		ExecWait  DoShockHit
  220:  		SetConst  *Var0  00000001
  230:  		SetConst  *Var1  003B050C
  240:  		ExecWait  DoJumpBack
  24C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  260:  		ExecWait  $Script_80221BBC
  26C:  	Case  ==  .Event:ShockDeath % 26
  278:  		SetConst  *Var0  00000001
  288:  		SetConst  *Var1  003B050C
  298:  		ExecWait  DoShockHit
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  003B050C
   121:			Call  SetMusicTrack ( 00000000 .Song:UnusedFanfare 00000000 00000008 )
  2C4:  		ExecWait  DoDeath
  2D0:  		Return
  2D8:  	CaseOR  ==  00000017 % 17
  2E4:  	CaseOR  ==  .Event:Immune % 19
  2F0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  2FC:  		SetConst  *Var0  00000001
  30C:  		SetConst  *Var1  003B0501
  31C:  		ExecWait  DoImmune
  328:  	EndCaseGroup
  330:  	Case  ==  .Event:Death % 20
  33C:  		SetConst  *Var0  00000001
  34C:  		SetConst  *Var1  003B050C
  35C:  		ExecWait  DoNormalHit
  368:  		Wait  10`
  374:  		SetConst  *Var0  00000001
  384:  		SetConst  *Var1  003B050C
   121:			Call  SetMusicTrack ( 00000000 .Song:UnusedFanfare 00000000 00000008 )
  394:  		ExecWait  DoDeath
  3A0:  		Return
  3A8:  	Case  ==  .Event:RecoverStatus % 31
  3B4:  		SetConst  *Var0  00000001
  3C4:  		SetConst  *Var1  003B0501
  3D4:  		ExecWait  DoRecover
  3E0:  	Case  ==  .Event:ScareAway % 39
  3EC:  		SetConst  *Var0  00000001
  3FC:  		SetConst  *Var1  003B0503
  40C:  		SetConst  *Var2  003B0514
  41C:  		ExecWait  DoScareAway
  428:  		Return
  430:  	Case  ==  .Event:BeginAirLift % 3A
  43C:  		SetConst  *Var0  00000001
  44C:  		SetConst  *Var1  003B050C
  45C:  		ExecWait  DoAirLift
  468:  	Case  ==  .Event:BlowAway % 16
  474:  		SetConst  *Var0  00000001
  484:  		SetConst  *Var1  003B050C
  494:  		ExecWait  DoBlowAway
  4A0:  		Return
  4A8:  	Default
  4B0:  EndSwitch
  4B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  4CC:  Return
  4D4:  End
}


@	$Script_802220FC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000001 003B0503 )
   9C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
   B0:  Call  SetGoalToTarget   ( .Actor:Self )
   C0:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   DC:  Add   *Var0  00000032
   EC:  Set   *Var1  00000000
   FC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  118:  Call  RunToGoal ( .Actor:Self  0` .False )
  130:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  154:  Switch  *Var0
  160:  	CaseOR  ==  .HitResult:Miss % 6
  16C:  	CaseOR  ==  .HitResult:Lucky % 5
  178:  		Set   *VarA  *Var0
  188:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
  1A4:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  1C0:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  1F0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0504 )
  208:  		Call  SetGoalToTarget   ( .Actor:Self )
  218:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  230:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0505 )
  248:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  25C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  270:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  28C:  		Sub   *Var0  0000001E
  29C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  2B8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  2E8:  			Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  30C:  		EndIf
  314:  		Call  ResetAllActorSounds   ( .Actor:Self )
  324:  		Sub   *Var0  00000014
  334:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  350:  		Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
  370:  		Wait  5`
  37C:  		Call  UseBattleCamPreset    ( 00000002 )
  38C:  		Call  SetActorYaw       ( .Actor:Self  180` )
  3A0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  3BC:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[20.0] )
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  003B0504
  3F0:  		ExecWait  DoReturnHome
  3FC:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  414:  		Call  SetActorYaw       ( .Actor:Self  0` )
  428:  		Call  SetAnimation      ( .Actor:Self 00000001 003B0501 )
  440:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  454:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  468:  		Return
  470:  	EndCaseGroup
  478:  EndSwitch
  480:  Thread
  488:  	Wait  1`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[18.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0504 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0505 )
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0501 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[18.0] )
    480:  Thread
  488:  	Wait  1`
  494:  	Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
  4A8:  EndThread
  4B0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  4CC:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  4E8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[18.0] )
  4FC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0504 )
  514:  Call  SetGoalToTarget   ( .Actor:Self )
  524:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  Add   *Var0  0000000A
  550:  Set   *Var1  00000000
  560:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  Call  RunToGoal ( .Actor:Self  0` .False )
  594:  Call  SetAnimation      ( .Actor:Self 00000001 003B0505 )
  5B8:  Call  SetGoalToTarget   ( .Actor:Self )
  5C8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 )
  5F0:  Call  ResetAllActorSounds   ( .Actor:Self )
  600:  Call  UseBattleCamPreset    ( 00000002 )
  610:  Call  MoveBattleCamOver (  15` )
  620:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  63C:  Add   *Var0  0000001E
  64C:  Set   *Var1  00000000
  65C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.8] )
  670:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  68C:  Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
  6AC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0501 )
  6C4:  Wait  8`
  6D0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[18.0] )
  6E4:  ExecWait  $Script_80221BBC
  6F0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  704:  Call  UseIdleAnimation  ( .Actor:Self .True )
  718:  Return
  720:  End
}


@	$Script_80222824
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
   98:  Call  SetAnimation      ( .Actor:Self 00000001 003B0509 )
   B0:  Wait  8`
   BC:  Call  SetAnimation      ( .Actor:Self 00000001 003B0503 )
   D4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
   E8:  Call  SetGoalToTarget   ( .Actor:Self )
   F8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Add   *Var0  00000050
  124:  Set   *Var1  00000000
  134:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  150:  Call  RunToGoal ( .Actor:Self  0` .False )
  168:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
  184:  Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
  1A0:  Call  SetAnimation      ( .Actor:Self 00000001 003B0504 )
  1B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[20.0] )
  1CC:  Sub   *Var0  00000028
  1DC:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  Call  RunToGoal ( .Actor:Self  0` .False )
  210:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  234:  Switch  *Var0
  240:  	CaseOR  ==  .HitResult:Miss % 6
  24C:  	CaseOR  ==  .HitResult:Lucky % 5
  258:  		Set   *VarA  *Var0
  268:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  27C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
  294:  		Thread
  29C:  			Wait  4`
  2A8:  			Call  SetAnimation  ( .Actor:Self 00000001 003B050A )
  2C0:  		EndThread
  2C8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.9] )
  2DC:  		Call  SetGoalToTarget   ( .Actor:Self )
  2EC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  308:  		Sub   *Var0  0000000A
  318:  		Set   *Var1  00000000
  328:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  344:  		Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
  364:  		If  *VarA  ==  .HitResult:Lucky % 5
  374:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  398:  		EndIf
  3A0:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0505 )
  3B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[20.0] )
  3CC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  3E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3FC:  		Sub   *Var0  0000001E
  40C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  428:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  448:  		Sub   *Var0  00000014
  458:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  494:  		Wait  3`
  4A0:  		Call  UseBattleCamPreset    ( 00000002 )
  4B0:  		Call  MoveBattleCamOver     (  15` )
  4C0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  4D4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[20.0] )
  504:  		SetConst  *Var0  00000001
  514:  		SetConst  *Var1  003B0504
  524:  		ExecWait  DoReturnHome
  530:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  548:  		Call  SetActorYaw   ( .Actor:Self  0` )
  55C:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
  574:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  588:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  59C:  		Return
  5A4:  	EndCaseGroup
  5AC:  EndSwitch
  5B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[24.0] )
  5C8:  Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
  5E0:  Thread
  5E8:  	Wait  3`
  5F4:  	Call  SetAnimation  ( .Actor:Self 00000001 003B050A )
  60C:  EndThread
  614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  1`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000C 00000020 )
    614:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  628:  Call  SetGoalToTarget   ( .Actor:Self )
  638:  Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  658:  Wait  1`
  664:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000C 00000020 )
  68C:  Switch  *Var0
  698:  	CaseOR  ==  .HitResult:Hit % 0
  6A4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6B0:  		Call  UseBattleCamPreset    ( 00000002 )
  6C0:  		Call  MoveBattleCamOver     (  15` )
  6D0:  		Thread
  6D8:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
  6F4:  			Set   *Var3  00000000
  704:  			Loop  00000014
  710:  				Sub   *Var3  0000001E
  720:  				If  *Var3  <  00000000
  730:  					Add   *Var3  00000168
  740:  				EndIf
  748:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
  764:  				Wait  1`
  770:  			EndLoop
  778:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  794:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  7B0:  		EndThread
  7B8:  		Call  GetBattleFlags    ( *Var0 )
  7C8:  		If  *Var0  &  80000000
  7D8:  			Goto  1
  7E4:  		EndIf
  7EC:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  800:  		If  *Var0  ==  00000000
  810:  			Goto  1
  81C:  		EndIf
  824:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  840:  		Add   *Var0  00000028
  850:  		Set   *Var1  00000000
  860:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  874:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  890:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  8B0:  		Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
  8C4:  		Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
  8D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0509 )
  8F0:  		Wait  10`
  8FC:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0507 )
  914:  		Wait  15`
  920:  		Goto  2
  92C:  		Label  1
  938:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  954:  		Add   *Var0  00000028
  964:  		Set   *Var1  00000000
  974:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  988:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9A4:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  9C4:  		Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
  9D8:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0510 )
  9F0:  		Wait  10`
  9FC:  		Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A10:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  A2C:  		Call  RandInt       ( 00000064 *Var0 )
  A40:  		If  *Var0  <  00000032
  A50:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0511 )
  A68:  		Else
  A70:  			Call  SetAnimation  ( .Actor:Self 00000001 003B0513 )
  A88:  		EndIf
  A90:  		Wait  25`
  A9C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  AB4:  		Call  SetActorYaw   ( .Actor:Self  180` )
  AC8:  		Label  2
  AD4:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  AE8:  		SetConst  *Var0  00000001
  AF8:  		SetConst  *Var1  003B0504
  B08:  		ExecWait  DoReturnHome
  B14:  		Call  SetActorYaw   ( .Actor:Self  0` )
  B28:  		Call  SetAnimation  ( .Actor:Self 00000001 003B0501 )
  B40:  	EndCaseGroup
  B48:  EndSwitch
  B50:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  B64:  Call  UseIdleAnimation  ( .Actor:Self .True )
  B78:  Return
  B80:  End
}



@	$Formation_00
{
	$ShyGuy_RED 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_BLU 00000002 00000009 00000000 00000000 00000000 00000000
	$GrooveGuy  00000003 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_01
{
	$ShyGuy_BLU 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_YLW 00000002 00000009 00000000 00000000 00000000 00000000
	$GrooveGuy  00000003 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_02
{
	$ShyGuy_YLW 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000002 00000009 00000000 00000000 00000000 00000000
	$SkyGuy 00000007 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_03
{
	$ShyGuy_YLW 00000000 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_RED 00000001 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_PNK 00000002 00000008 00000000 00000000 00000000 00000000
	$SkyGuy 00000007 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_04
{
	$ShyGuy_PNK 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_RED 00000002 00000009 00000000 00000000 00000000 00000000
	$SkyGuy 00000007 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_05
{
	$ShyGuy_GRN 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_PNK 00000002 00000009 00000000 00000000 00000000 00000000
	$GrooveGuy  00000003 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_06
{
	$ShyGuy_RED 00000000 0000000A 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_07
{
	$ShyGuy_BLU 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_08
{
	$ShyGuy_YLW 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_0A
{
	$ShyGuy_PNK 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_BLU 00000002 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_0C
{
	$ShyGuy_GRN 00000000 0000000A 00000000 00000000 00000000 00000000
	$SkyGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$SkyGuy 00000007 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_0D
{
	$SkyGuy 00000005 0000000A 00000000 00000000 00000000 00000000
	$SkyGuy 00000006 00000009 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_0E
{
	$SkyGuy 00000005 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_YLW 00000002 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000003 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_0F
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$SkyGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_YLW 00000002 00000008 00000000 00000000 00000000 00000000
	$PyroGuy 00000003 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_10
{
	$SkyGuy 00000005 0000000A 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000009 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_11
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$SkyGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$ShyGuy_PNK 00000003 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_12
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_13
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000001 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_RED 00000002 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000007 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000006 00000000 00000000 00000000 00000000
}


@	$Formation_14
{
	$SkyGuy 00000004 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$GrooveGuy 00000003 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_15
{
	$SpyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000002 00000009 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_16
{
	$SpyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000009 00000000 00000000 00000000 00000000
	$GrooveGuy 00000003 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_17
{
	$SpyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_18
{
	$SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_1B
{
	$SpyGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$GrooveGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
	$ShyGuy_BLU 00000003 00000006 00000000 00000000 00000000 00000000
}


@	$Formation_1C
{
	$PyroGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_PNK 00000003 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_1D
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_1E
{
	$PyroGuy 00000000 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000005 00000009 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000007 00000000 00000000 00000000 00000000
	
}


@	$Formation_1F
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000007 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_20
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
	$ShyGuy_GRN 00000002 00000006 00000000 00000000 00000000 00000000
}


@	$Formation_21
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$ShyGuy_BLU 00000003 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_22
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$SpyGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$GrooveGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$ShyGuy_YLW 00000003 00000007 00000000 00000000 00000000 00000000
}



@	$Formation_23
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
	$ShyGuy_PNK 00000002 00000006 00000000 00000000 00000000 00000000
}



@	$Formation_24
{
	$PyroGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$PyroGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$SpyGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$SkyGuy 00000007 00000007 00000000 00000000 00000000 00000000
}




@	$Formation_25
{
	$GrooveGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000002 00000009 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000008 00000000 00000000 00000000 00000000
}



@	$Formation_26
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000007 00000000 00000000 00000000 00000000
}



@	$Formation_27
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000007 00000000 00000000 00000000 00000000
}


@	$Formation_28
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$SkyGuy 00000007 00000007 00000000 00000000 00000000 00000000
}



@	$Formation_29
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$MediGuy 00000006 00000007 00000000 00000000 00000000 00000000
	$MediGuy 00000007 00000006 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000002 00000008 00000000 00000000 00000000 00000000
}


@	$Formation_2A
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$GrooveGuy 00000001 00000009 00000000 00000000 00000000 00000000
	$PyroGuy 00000002 00000008 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000007 00000000 00000000 00000000 00000000
}



@	$Formation_2B
{
	$GrooveGuy 00000000 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_BLU 00000001 00000009 00000000 00000000 00000000 00000000
	$SkyGuy 00000006 00000008 00000000 00000000 00000000 00000000
	$GreedyBanditA 00000003 00000007 00000000 00000000 00000000 00000000
}


#new:Vector3D $Vector3D_ShyGuy1
{
	0` 0` -20`
}

#new:Vector3D $Vector3D_ShyGuy2
{
	25` 0` -10`
}

#new:Vector3D $Vector3D_ShyGuy3
{
	50` 0` 0`
}

#new:Vector3D $Vector3D_ShyGuy4
{
	75` 0` 10`
}

#new:Vector3D $Vector3D_ShyGuy5
{
	100` 0` 20`
}

@	$Formation_2C
{
	$AntiGuy 00000003 00000005 00000000 00000000 00000000 00000000
	$ShyGuy_RED $Vector3D_ShyGuy1 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy_YLW $Vector3D_ShyGuy2 00000009 00000000 00000000 00000000 00000000
	$ShyGuy_GRN $Vector3D_ShyGuy3 00000008 00000000 00000000 00000000 00000000
	$ShyGuy_BLU $Vector3D_ShyGuy4 00000007 00000000 00000000 00000000 00000000
	$ShyGuy_PNK $Vector3D_ShyGuy5 00000006 00000000 00000000 00000000 00000000
}


@	 $FormationTable
{
	$SJIS_8023107C 00000003 $Formation_00 $Stage_8022DE0C 00000000
	$SJIS_80231074 00000003 $Formation_01 $Stage_8022DE0C 00000000
	$SJIS_80231068 00000003 $Formation_02 $Stage_8022DE0C 00000000
	$SJIS_8023105C 00000004 $Formation_03 $Stage_8022DE0C 00000000
	$SJIS_80231054 00000003 $Formation_04 $Stage_8022DE0C 00000000
	$SJIS_80231048 00000003 $Formation_05 $Stage_8022DE0C 00000000
	$SJIS_80231034 00000004 $Formation_06 $Stage_8022DE0C 00000000
	$SJIS_80231018 00000004 $Formation_07 $Stage_8022DE0C 00000000
	$SJIS_80230FFC 00000004 $Formation_08 $Stage_8022DE0C 00000000
	$SJIS_80230FE4 00000004 $Formation_09 $Stage_8022DE0C 00000000
	$SJIS_80230FCC 00000004 $Formation_0A $Stage_8022DE0C 00000000
	$SJIS_80230FB0 00000004 $Formation_0B $Stage_8022DE0C 00000000
	$SJIS_80230F94 00000004 $Formation_0C $Stage_8022DE0C 00000000
	$SJIS_80230F88 00000003 $Formation_0D $Stage_8022DE0C 00000000
	$SJIS_80230F78 00000003 $Formation_0E $Stage_8022DE0C 00000000
	$SJIS_80230F64 00000004 $Formation_0F $Stage_8022DE0C 00000000
	$SJIS_80230F50 00000003 $Formation_10 $Stage_8022DE0C 00000000
	$SJIS_80230F38 00000004 $Formation_11 $Stage_8022DE0C 00000000
	$SJIS_80230F1C 00000004 $Formation_12 $Stage_8022DE0C 00000000
	$SJIS_80230F00 00000005 $Formation_13 $Stage_8022DE0C 00000000
	$SJIS_80230EE0 00000004 $Formation_14 $Stage_8022DE0C 00000000
	$SJIS_80230ED4 00000004 $Formation_15 $Stage_8022DE0C 00000000
	$SJIS_80230EC0 00000003 $Formation_16 $Stage_8022DE0C 00000000
	$SJIS_80230EAC 00000003 $Formation_17 $Stage_8022DE0C 00000000
	$SJIS_80230E94 00000004 $Formation_18 $Stage_8022DE0C 00000000
	$SJIS_80230E7C 00000004 $Formation_19 $Stage_8022DE0C 00000000
	$SJIS_80230E70 00000004 $Formation_1A $Stage_8022DE0C 00000000
	$SJIS_80230E48 00000005 $Formation_1B $Stage_8022DE0C 00000000
	$SJIS_80230E3C 00000003 $Formation_1C $Stage_8022DE0C 00000000
	$SJIS_80230E30 00000004 $Formation_1D $Stage_8022DE0C 00000000
	$SJIS_80230E1C 00000004 $Formation_1E $Stage_8022DE0C 00000000
	$SJIS_80230E04 00000004 $Formation_1F $Stage_8022DE0C 00000000
	$SJIS_80230DEC 00000005 $Formation_20 $Stage_8022DE0C 00000000
	$SJIS_80230DCC 00000004 $Formation_21 $Stage_8022DE0C 00000000
	$SJIS_80230DAC 00000004 $Formation_22 $Stage_8022DE0C 00000000
	$SJIS_80230D8C 00000005 $Formation_23 $Stage_8022DE0C 00000000
	$SJIS_80230D78 00000004 $Formation_24 $Stage_8022DE0C 00000000
	$SJIS_80230D68 00000003 $Formation_25 $Stage_8022DE0C 00000000
	$SJIS_80230D58 00000004 $Formation_26 $Stage_8022DE0C 00000000
	$SJIS_80230D40 00000004 $Formation_27 $Stage_8022DE0C 00000000
	$SJIS_80230D28 00000004 $Formation_28 $Stage_8022DE0C 00000000
	$SJIS_80230D0C 00000005 $Formation_29 $Stage_8022DE0C 00000000
	$SJIS_80230CF0 00000004 $Formation_2A $Stage_8022DE0C 00000000
	$SJIS_80230CD4 00000004 $Formation_2B $Stage_8022DE0C 00000000
	$SJIS_80230CC8 00000006 $Formation_2C $Stage_8022DE0C 00000000
	00000000 00000000 00000000 00000000 00000000
}