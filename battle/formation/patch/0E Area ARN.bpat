#import DryBlooper.bpat
#import LazyBones.bpat

%Dry Blooper is a cute recolouring of
%the Blooper Baby from the Super Blooper
%boss fight, but now recontexualized as
%a regular, slightly formiddable enemy.



#new:Function $Function_802188B0_05 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D7460
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218964_05 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  MTC1      S3, F12
   68:  NOP
   6C:  CVT.S.W   F12, F12
   70:  MTC1      S2, F14
   74:  NOP
   78:  CVT.S.W   F14, F14
   7C:  MTC1      S0, F0
   80:  NOP
   84:  CVT.S.W   F0, F0
   88:  MFC1      A2, F0
   8C:  JAL       802D74C0
   90:  COPY      A3, V0
   94:  LW        RA, 20 (SP)
   98:  LW        S3, 1C (SP)
   9C:  LW        S2, 18 (SP)
   A0:  LW        S1, 14 (SP)
   A4:  LW        S0, 10 (SP)
   A8:  LI        V0, 2
   AC:  JR        RA
   B0:  ADDIU     SP, SP, 28
}


%From here on out, enemies are going to
%start getting a bit more resistant to
%statuses to make them harder to cheese.


%Hyper Goombas sometimes get to attack
%and charge in the same turn. Their
%attack also does just enough to not
%be able to fully block with Damage Dodge.

@	$HyperGoomba
{
	[Level]        15`b
	[MaxHP]         8`b
	[Coins]         2`b
}


@	$StatusTable_8021877C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison    100`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear       50`
	.Status:Static    100`
	.Status:Paralyze   50`
	.Status:Shrink     60`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}



@	$Script_TakeTurn_8021A628
{
  [B8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  [118]  Wait  1`
  [140]  Wait  3`
  [250]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  [350]  			Wait  3`
  [48C]  		Wait  3`
  [4D4]  		Wait  3`
  [57C]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.7] )
  [598]  			Wait  2`
  [658]  		Wait  3`
  [6D8]  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  [730]  		Wait  2`
  [754]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
  [7F0]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  [8F0]  			Wait  2`
  [9AC]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  [C3C]  		Call  SetActorSpeed ( .Actor:Self *Fixed[17.0] )
}



%Charge Attack

@	$Script_802189D4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   64:  If  *Var0  ==  00000000
   66:      ExecWait $Script_TakeTurn_8021A628
   74:  	Call  UseBattleCamPreset    ( 0000000E )
   84:  	Call  BattleCamTargetActor  ( .Actor:Self )
   94:  	Call  MoveBattleCamOver (  20` )
   A4:  	Wait  10`
   B0:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
   C4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   E0:  	Add   *Var1  0000000A
   F0:  	Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  134:  	Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
  14C:  	Wait  14`
  158:  	Call  UseBattleCamPreset    ( 00000002 )
  168:  	Call  MoveBattleCamOver (  20` )
  178:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  194:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  1A8:  	Call  SetGoalPos        ( .Actor:Self *Var0  0` *Var2 )
  1C4:  	Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
  1E4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020DD )
  1F8:  	Call  $Function_80218000    ( 00000080 0000000A )
  20C:  	Thread
  214:  		Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[0.5] )
  230:  	EndThread
  238:  	Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  250:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80218874 )
  268:  	Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  280:  	Call  EnableActorGlow   ( .Actor:Self .True )
  294:  	Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .True )
  2B0:  	Wait  1`
  2BC:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  2D0:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  2E4:  	Return
  2EC:  EndIf
  2F4:  Call  UseBattleCamPreset    ( 0000003F )
  304:  Call  BattleCamTargetActor  ( .Actor:Self )
  314:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  32C:  Loop  00000014
  338:  	Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  354:  	Wait  1`
  360:  	Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  37C:  	Wait  1`
  388:  EndLoop
  390:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3AC:  Call  EnemyTestTarget       ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  3D0:  Switch  *Var0
  3DC:  	CaseOR  ==  .HitResult:Miss % 6
  3E8:  	CaseOR  ==  .HitResult:Lucky % 5
  3F4:  		Set   *VarA  *Var0
  404:  		Thread
  40C:  			Loop
  418:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  434:  				Add   *Var0  0000001E
  444:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  460:  				If  *Var0  >  *Var3
  470:  					BreakLoop
  478:  				EndIf
  480:  				Wait  1`
  48C:  			EndLoop
  494:  			Call  UseBattleCamPreset    ( 00000001 )
  4A4:  			If  *VarA  ==  .HitResult:Lucky % 5
  4B4:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4D8:  			EndIf
  4E0:  			Wait  15`
  4EC:  			Call  UseBattleCamPreset    ( 00000002 )
  4FC:  		EndThread
  504:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  520:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
  53C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
  558:  		Call  SetGoalToTarget   ( .Actor:Self )
  568:  		Call  AddGoalPos        ( .Actor:Self  -200`  0`  0` )
  584:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  598:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[22.0] )
  5AC:  		Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  5CC:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5DC:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  5F8:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  614:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  630:  		Call  SetActorPos       ( .Actor:Self *Var0  0` *Var2 )
  64C:  		Wait  20`
  658:  		Call  EnableActorGlow   ( .Actor:Self .False )
  66C:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  688:  		Call  YieldTurn ( )
  694:  		Call  SetActorPos       ( .Actor:Self  300`  0`  0` )
  6B0:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6CC:  		Call  SetAnimation      ( .Actor:Self 00000001 00260203 )
  6E4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  6F8:  		Call  SetGoalToHome     ( .Actor:Self )
  708:  		Call  RunToGoal ( .Actor:Self  0` .False )
  720:  		Call  SetAnimation      ( .Actor:Self 00000001 00260201 )
  738:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  750:  		Call  SetActorVar       ( .Actor:Self 00000000 00000000 )
  768:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80219818 )
  780:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  794:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7A8:  		Return
  7B0:  	EndCaseGroup
  7B8:  EndSwitch
  7C0:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 0000010F 00000000 )
  7DC:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  7F8:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000050 )
  814:  Call  SetGoalToTarget   ( .Actor:Self )
  824:  Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.01] )
  838:  Call  SetActorSpeed     ( .Actor:Self *Fixed[22.0] )
  84C:  Call  JumpToGoal        ( .Actor:Self  0` .False .True .False )
  86C:  Wait  2`
  878:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 )
  8A0:  Switch  *Var0
  8AC:  	CaseOR  ==  .HitResult:Hit % 0
  8B8:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  8C4:  		Thread
  8CC:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  8E8:  			Set   *Var0  00000050
  8F8:  			Loop  0000003C
  904:  				Add   *Var0  00000012
  914:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  930:  				Wait  1`
  93C:  			EndLoop
  944:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  960:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  97C:  		EndThread
  984:  		Call  UseBattleCamPreset    ( 00000002 )
  994:  		Call  ResetAllActorSounds   ( .Actor:Self )
  9A4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  9B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  9D4:  		Set   *Var1  00000000
  9E4:  		Sub   *Var0  00000032
  9F4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A10:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  A30:  		Sub   *Var0  00000028
  A40:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A5C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  A7C:  		Sub   *Var0  0000001E
  A8C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AA8:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  AC8:  		Wait  10`
  AD4:  		Call  EnableActorGlow       ( .Actor:Self .False )
  AE8:  		Call  SetPartEventBits      ( .Actor:Self 00000001 00400000 .False )
  B04:  		Call  YieldTurn ( )
  B10:  		Call  SetActorYaw   ( .Actor:Self  180` )
  B24:  		Call  SetAnimation  ( .Actor:Self 00000001 00260203 )
  B3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  B50:  		Call  SetGoalToHome ( .Actor:Self )
  B60:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  B78:  		Call  SetAnimation  ( .Actor:Self 00000001 00260201 )
  B90:  		Call  SetActorYaw   ( .Actor:Self  0` )
  BA4:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  BBC:  		Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_80219818 )
  BD4:  	EndCaseGroup
  BDC:  EndSwitch
  BE4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  BF8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C0C:  Return
  C14:  End
}






@	$HyperParagoomba
{
	[Level]        16`b
	[MaxHP]         10`b
	[Coins]         2`b
}



@	$StatusTable_8021B3B4
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison     80`
	.Status:Frozen      0`
	.Status:Dizzy      60`
	.Status:Fear        0`
	.Status:Static     80`
	.Status:Paralyze   40`
	.Status:Shrink     50`
	.Status:Stop       60`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}


%Charge Attack


@	$Script_8021B678
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000000
   55:      ExecWait 	$Script_TakeTurn_8021D1DC
   64:  	Call  UseBattleCamPreset    ( 0000000E )
   74:  	Call  BattleCamTargetActor  ( .Actor:Self )
   84:  	Call  MoveBattleCamOver (  20` )
   94:  	Wait  10`
   A0:  	Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
   B4:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  	Add   *Var1  0000000A
   E0:  	Call  PlayEffect        ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  124:  	Call  SetAnimation      ( .Actor:Self 00000002 00280202 )
  13C:  	Wait  14`
  148:  	Call  UseBattleCamPreset    ( 00000002 )
  158:  	Call  MoveBattleCamOver (  20` )
  168:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  184:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  198:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  	Call  JumpToGoal        ( .Actor:Self  20` .False .False .False )
  1D4:  	Call  SetActorVar       ( .Actor:Self 00000000 00000001 )
  1EC:  	Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021B518 )
  204:  	Call  EnableActorGlow   ( .Actor:Self .True )
  218:  	Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .True )
  234:  	Call  EnableIdleScript  ( .Actor:Self 00000001 )
  248:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  25C:  	Return
  264:  EndIf
  26C:  Call  UseBattleCamPreset    ( 0000003F )
  27C:  Call  BattleCamTargetActor  ( .Actor:Self )
  28C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  2A4:  Call  MoveBattleCamOver     (  30` )
  2B4:  Loop  00000014
  2C0:  	Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  2DC:  	Wait  1`
  2E8:  	Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  304:  	Wait  1`
  310:  EndLoop
  318:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  334:  Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  348:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  364:  Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  378:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  38C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  3A8:  Add   *Var1  00000014
  3B8:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  3D4:  Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  3F4:  Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  408:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  424:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  448:  Switch  *Var0
  454:  	CaseOR  ==  .HitResult:Miss % 6
  460:  	CaseOR  ==  .HitResult:Lucky % 5
  46C:  		Set   *VarA  *Var0
  47C:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  498:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  4B4:  		Thread
  4BC:  			Set   *Var0  FFFFFFC4
  4CC:  			Loop  0000003C
  4D8:  				Add   *Var0  00000013
  4E8:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  504:  				Wait  1`
  510:  			EndLoop
  518:  		EndThread
  520:  		Call  SetGoalToTarget   ( .Actor:Self )
  530:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  54C:  		Set   *Var1  00000000
  55C:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  578:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.01] )
  58C:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[21.0] )
  5A0:  		Call  JumpToGoal        ( .Actor:Self  0` .False .False .False )
  5C0:  		Call  UseBattleCamPreset    ( 00000001 )
  5D0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  5E0:  		Call  AddGoalPos        ( .Actor:Self  -60`  0`  0` )
  5FC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  610:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  630:  		If  *VarA  ==  .HitResult:Lucky % 5
  640:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  664:  		EndIf
  66C:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  680:  		Call  AddGoalPos        ( .Actor:Self  -200`  0`  0` )
  69C:  		Call  RunToGoal ( .Actor:Self  0` .False )
  6B4:  		Wait  10`
  6C0:  		Call  UseBattleCamPreset    ( 00000002 )
  6D0:  		Call  YieldTurn ( )
  6DC:  		Call  EnableActorGlow   ( .Actor:Self .False )
  6F0:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  70C:  		Thread
  714:  			Set   *Var0  00000000
  724:  			Loop  0000001E
  730:  				Add   *Var0  00000018
  740:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  75C:  				Wait  1`
  768:  			EndLoop
  770:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  78C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  7A8:  		EndThread
  7B0:  		Call  SetActorPos   ( .Actor:Self  300`  0`  0` )
  7CC:  		Call  SetGoalToHome ( .Actor:Self )
  7DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
  7F0:  		Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
  80C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  824:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  840:  		Call  ResetAllActorSounds   ( .Actor:Self )
  850:  		Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
  868:  		Call  SetGoalToHome ( .Actor:Self )
  878:  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  88C:  		Call  FlyToGoal     ( .Actor:Self  0`  1` .Easing:SinOut )
  8A8:  		Call  SetAnimation  ( .Actor:Self 00000002 00280201 )
  8C0:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  8D8:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  8F0:  		Call  SetIdleAnimations     ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
  908:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  91C:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  930:  		Return
  938:  	EndCaseGroup
  940:  EndSwitch
  948:  Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  964:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFBA )
  980:  Call  SetGoalToTarget   ( .Actor:Self )
  990:  Call  SetActorJumpGravity       ( .Actor:Self *Fixed[0.01] )
  9A4:  Call  SetActorSpeed     ( .Actor:Self *Fixed[21.0] )
  9B8:  Call  JumpToGoal        ( .Actor:Self  0` .False .False .False )
  9D8:  Wait  1`
  9E4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000C 00000020 )
  A0C:  Switch  *Var0
  A18:  	CaseOR  ==  .HitResult:Hit % 0
  A24:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  A30:  		Call  UseBattleCamPreset    ( 00000002 )
  A40:  		Call  ResetAllActorSounds   ( .Actor:Self )
  A50:  		Thread
  A58:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  A74:  			Set   *Var0  FFFFFFBA
  A84:  			Loop  0000003C
  A90:  				Add   *Var0  00000012
  AA0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  ABC:  				Wait  1`
  AC8:  			EndLoop
  AD0:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  AEC:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  B08:  		EndThread
  B10:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  B24:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  B40:  		Set   *Var1  00000000
  B50:  		Sub   *Var0  00000046
  B60:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B7C:  		Call  JumpToGoal    ( .Actor:Self  20` .False .False .False )
  B9C:  		Sub   *Var0  0000003C
  BAC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BC8:  		Call  JumpToGoal    ( .Actor:Self  15` .False .False .False )
  BE8:  		Wait  10`
  BF4:  		Call  YieldTurn ( )
  C00:  		Call  EnableActorGlow   ( .Actor:Self .False )
  C14:  		Call  SetPartEventBits  ( .Actor:Self 00000002 00400000 .False )
  C30:  		Call  SetActorYaw   ( .Actor:Self  180` )
  C44:  		Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
  C5C:  		ExecWait  $Script_8021C94C
  C68:  		Call  SetActorYaw   ( .Actor:Self  0` )
  C7C:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  C94:  		Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8021C594 )
  CAC:  	EndCaseGroup
  CB4:  EndSwitch
  CBC:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  CD0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CE4:  Return
  CEC:  End
}


%Normal attack


@	$Script_TakeTurn_8021D1DC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  SetAnimation      ( .Actor:Self 00000002 00280204 )
   9C:  Call  SetGoalToTarget   ( .Actor:Self )
   AC:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   C8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[13.0] )
   DC:  Call  FlyToGoal ( .Actor:Self  0`  -4` .Easing:Linear )
   F8:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  11C:  Switch  *Var0
  128:  	CaseOR  ==  .HitResult:Miss % 6
  134:  	CaseOR  ==  .HitResult:Lucky % 5
  140:  		Set   *VarA  *Var0
  150:  		Wait  3`
  15C:  		Call  UseBattleCamPreset    ( 00000042 )
  16C:  		Call  SetBattleCamZoom  (  300` )
  17C:  		Call  BattleCamTargetActor  ( .Actor:Self )
  18C:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  1A4:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  1B8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  1D4:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  1E8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.9] )
  1FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  214:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  230:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  24C:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  26C:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  280:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  29C:  		Call  SetGoalToTarget   ( .Actor:Self )
  2AC:  		Sub   *Var0  00000050
  2BC:  		Set   *Var1  00000014
  2CC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[17.0] )
  2FC:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  314:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:QuadraticOut )
  330:  		Thread
  338:  			Loop  00000004
  344:  				Call  PlaySoundAtActor  ( .Actor:Self 000020DF )
  358:  				Wait  4`
  364:  			EndLoop
  36C:  		EndThread
  374:  		Call  SetAnimation  ( .Actor:Self 00000002 00280202 )
  38C:  		Call  AddActorDecoration    ( .Actor:Self 00000002 00000000 .Decoration:Sweat )
  3A8:  		Call  SetAnimationRate      ( .Actor:Self 00000002 *Fixed[4.0] )
  3C0:  		Wait  3`
  3CC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3DC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  400:  		EndIf
  408:  		Wait  3`
  414:  		Call  SetAnimationRate  ( .Actor:Self 00000002 *Fixed[1.5] )
  42C:  		Call  UseBattleCamPreset    ( 00000002 )
  43C:  		Call  ResetAllActorSounds   ( .Actor:Self )
  44C:  		Call  YieldTurn ( )
  458:  		Call  SetAnimation      ( .Actor:Self 00000002 00280204 )
  470:  		Call  SetActorYaw       ( .Actor:Self  180` )
  484:  		ExecWait  $Script_8021C94C
  490:  		Call  SetActorYaw       ( .Actor:Self  0` )
  4A4:  		Call  RemoveActorDecoration ( .Actor:Self 00000002 00000000 )
  4BC:  		Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  4D0:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  4E4:  		Return
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait  3`
  508:  		Call  UseBattleCamPreset    ( 00000042 )
  518:  		Call  SetBattleCamZoom  (  300` )
  528:  		Call  BattleCamTargetActor  ( .Actor:Self )
  538:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  550:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  564:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  580:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[9.0] )
  594:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5A8:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  5C0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  618:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  62C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  648:  		Call  SetGoalToTarget   ( .Actor:Self )
  658:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[15.0] )
  66C:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  684:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
    4FC:  		Wait  3`
  508:  		Call  UseBattleCamPreset    ( 00000042 )
  518:  		Call  SetBattleCamZoom  (  300` )
  528:  		Call  BattleCamTargetActor  ( .Actor:Self )
  538:  		Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  550:  		Call  PlaySoundAtActor  ( .Actor:Self 000020E0 )
  564:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  580:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[10.0] )
  594:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.4] )
  5A8:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  5C0:  		Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  5DC:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  5F8:  		Call  JumpToGoal        ( .Actor:Self  10` .False .False .False )
  618:  		Call  PlaySoundAtActor  ( .Actor:Self 000002C1 )
  62C:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Fly 00000000 00000000 )
  648:  		Call  SetGoalToTarget   ( .Actor:Self )
  658:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  66C:  		Call  SetAnimation      ( .Actor:Self 00000002 00280205 )
  684:  		Call  FlyToGoal ( .Actor:Self  0`  -10` .Easing:Linear )
  6A0:  EndSwitch
  6A8:  Wait  2`
  6B4:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000003 00000020 )
  6DC:  Switch  *Var0
  6E8:  	CaseOR  ==  .HitResult:Hit % 0
  6F4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  700:  		Call  UseBattleCamPreset    ( 00000002 )
  710:  		Call  SetGoalToTarget       ( .Actor:Self )
  720:  		Call  AddGoalPos    ( .Actor:Self  50`  10`  0` )
  73C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  750:  		Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
  768:  		Call  FlyToGoal     ( .Actor:Self  0`  -10` .Easing:Linear )
  784:  		Call  ResetAllActorSounds   ( .Actor:Self )
  794:  		Wait  2`
  7A0:  		Call  YieldTurn ( )
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000002 00280204 )
  7C4:  		ExecWait  $Script_8021C94C
  7D0:  	EndCaseGroup
  7D8:  EndSwitch
  7E0:  Call  EnableIdleScript  ( .Actor:Self FFFFFFFF )
  7F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  808:  Return
  810:  End
}


@	$Script_TakeTurn_8021FE6C
{
   [B8]  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  [140]  Wait  2`
  [350]  			Wait  2`
  [4D4]  		Wait  2`
  [658]  		Wait  1`
  [730]  		Wait  2`
  [754]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
  [8F0]  			Wait  6`
  [9AC]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
}


%Hyper Clefts will always do the charged ram
%attack but do not charge for massive damage anymore.
%The timing of their attacks vary based
%on if they walk up to you or not.


@	$HyperCleft
{
	[Level]        18`b
	[MaxHP]         6`b
	[Coins]         3`b
}


@	$DefenseTable_80220B40
{
	.Element:Normal 00000004
	.Element:Fire   00000063
	.Element:End
}



@	$StatusTable_80220B68
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      20`
	.Status:Poison     50`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static     50`
	.Status:Paralyze   30`
	.Status:Shrink     40`
	.Status:Stop       40`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}




@	$Script_80220DC0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  330:  Call  UseBattleCamPreset    ( 0000003F )
  340:  Call  BattleCamTargetActor  ( .Actor:Self )
  350:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  368:  Call  MoveBattleCamOver     (  30` )
  378:  Loop  00000014
  384:  	Call  SetActorDispOffset    ( .Actor:Self 00000001 00000000 00000000 )
  3A0:  	Wait  1`
  3AC:  	Call  SetActorDispOffset    ( .Actor:Self FFFFFFFF 00000000 00000000 )
  3C8:  	Wait  1`
  3D4:  EndLoop
  3DC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  3F8:  Call  PlaySoundAtActor  ( .Actor:Self 000002DA )
  40C:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  428:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  44C:  Switch  *Var0
  458:  	CaseOR  ==  .HitResult:Miss % 6
  464:  	CaseOR  ==  .HitResult:Lucky % 5
  470:  		Set   *VarA  *Var0
  480:  		Thread
  488:  			Loop
  494:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  4B0:  				Add   *Var0  00000024
  4C0:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  4DC:  				If  *Var0  >  *Var3
  4EC:  					BreakLoop
  4F4:  				EndIf
  4FC:  				Wait  1`
  508:  			EndLoop
  510:  			Call  UseBattleCamPreset    ( 00000001 )
  520:  			If  *VarA  ==  .HitResult:Lucky % 5
  530:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  554:  			EndIf
  55C:  			Wait  6`
  568:  			Call  UseBattleCamPreset    ( 00000002 )
  578:  		EndThread
  580:  		Thread
  588:  			Loop  0000001E
  594:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5B0:  				Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5F4:  				Wait  1`
  600:  			EndLoop
  608:  		EndThread
  610:  		Call  SetAnimation  ( .Actor:Self 00000001 00300111 )
  628:  		Call  SetGoalToTarget   ( .Actor:Self )
  638:  		Call  AddGoalPos    ( .Actor:Self  -200`  0`  0` )
  654:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  668:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  680:  		Wait  5`
  68C:  		Call  EnableActorGlow   ( .Actor:Self .False )
  6A0:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  6BC:  		Call  YieldTurn ( )
  6C8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  6D8:  		Call  SetActorPos   ( .Actor:Self  300`  0`  0` )
  6F4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  710:  		Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
  728:  		Call  SetGoalToHome ( .Actor:Self )
  738:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  74C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  764:  		Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  77C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  794:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  7AC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  7C4:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7D8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7EC:  		Return
  7F4:  	EndCaseGroup
  7FC:  EndSwitch
  804:  Thread
  80C:  	Loop  00000019
  818:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  834:  		Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  878:  		Wait  1`
  884:  	EndLoop
  88C:  EndThread
  894:  Call  SetAnimation      ( .Actor:Self 00000001 00300111 )
  8AC:  Call  SetGoalToTarget   ( .Actor:Self )
  8BC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[18.0] )
  8D0:  Call  RunToGoal ( .Actor:Self  0` .False )
  8E8:  Call  ResetAllActorSounds   ( .Actor:Self )
  8F8:  Wait  1`
  904:  Call  SetGoalToTarget   ( .Actor:Self )
  914:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
  93C:  Switch  *Var0
  948:  	CaseOR  ==  .HitResult:Hit % 0
  954:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  960:  		Call  UseBattleCamPreset    ( 00000002 )
  970:  		Thread
  978:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  994:  			Set   *Var0  00000000
  9A4:  			Loop  0000003C
  9B0:  				Add   *Var0  00000012
  9C0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  9DC:  				Wait  1`
  9E8:  			EndLoop
  9F0:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A0C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  A28:  		EndThread
  A30:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  A44:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  A60:  		Sub   *Var0  00000032
  A70:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A8C:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  AAC:  		Sub   *Var0  00000028
  ABC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AD8:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  AF8:  		Sub   *Var0  0000001E
  B08:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B24:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B44:  		Wait  10`
  B50:  		Call  YieldTurn ( )
  B5C:  		Call  EnableActorGlow   ( .Actor:Self .False )
  B70:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  B8C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  BA0:  		Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
  BB8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  BCC:  		Call  SetGoalToHome ( .Actor:Self )
  BDC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  BF4:  		Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  C0C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  C20:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  C38:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  C50:  	EndCaseGroup
  C58:  EndSwitch
  C60:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C74:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C88:  Return
  C90:  End
}






@	$Script_80223310
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000003F )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   84:  Call  MoveBattleCamOver (  30` )
   94:  Thread
   9C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
   FC:  	Wait  10`
  108:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  14C:  	Wait  5`
  158:  	Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  19C:  EndThread
  1A4:  Call  SetAnimation      ( .Actor:Self 00000001 00300110 )
  1BC:  Wait  10`
  1C8:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  1DC:  Call  SetAnimation      ( .Actor:Self 00000001 00300111 )
  1F4:  Call  SetGoalToTarget   ( .Actor:Self )
  204:  Call  AddGoalPos        ( .Actor:Self  50`  0`  -5` )
  220:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
  234:  Call  RunToGoal ( .Actor:Self  0` .False )
  24C:  Call  SetAnimation      ( .Actor:Self 00000001 00300100 )
  264:  Wait  8`
  270:  Call  PlaySoundAtActor  ( .Actor:Self 000020D1 )
  284:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
    428:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000003 00000010 )
  44C:  Switch  *Var0
  458:  	CaseOR  ==  .HitResult:Miss % 6
  464:  	CaseOR  ==  .HitResult:Lucky % 5
  470:  		Set   *VarA  *Var0
  480:  		Thread
  488:  			Loop
  494:  				Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  4B0:  				Add   *Var0  0000001E
  4C0:  				Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  4DC:  				If  *Var0  >  *Var3
  4EC:  					BreakLoop
  4F4:  				EndIf
  4FC:  				Wait  1`
  508:  			EndLoop
  510:  			Call  UseBattleCamPreset    ( 00000001 )
  520:  			If  *VarA  ==  .HitResult:Lucky % 5
  530:  				Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  554:  			EndIf
  55C:  			Wait  15`
  568:  			Call  UseBattleCamPreset    ( 00000002 )
  578:  		EndThread
  580:  		Thread
  588:  			Loop  0000001E
  594:  				Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5B0:  				Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5F4:  				Wait  1`
  600:  			EndLoop
  608:  		EndThread
  610:  		Call  SetAnimation  ( .Actor:Self 00000001 00300111 )
  628:  		Call  SetGoalToTarget   ( .Actor:Self )
  638:  		Call  AddGoalPos    ( .Actor:Self  -200`  0`  0` )
  654:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  668:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  680:  		Wait  5`
  68C:  		Call  EnableActorGlow   ( .Actor:Self .False )
  6A0:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  6BC:  		Call  YieldTurn ( )
  6C8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  6D8:  		Call  SetActorPos   ( .Actor:Self  300`  0`  0` )
  6F4:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  710:  		Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
  728:  		Call  SetGoalToHome ( .Actor:Self )
  738:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  74C:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  764:  		Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  77C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  794:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  7AC:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  7C4:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7D8:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7EC:  		Return
  7F4:  	EndCaseGroup
  7FC:  EndSwitch
  804:  Thread
  80C:  	Loop  00000019
  818:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  834:  		Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  878:  		Wait  1`
  884:  	EndLoop
  88C:  EndThread
  894:  Call  SetAnimation      ( .Actor:Self 00000001 00300111 )
  8AC:  Call  SetGoalToTarget   ( .Actor:Self )
  8BC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[18.0] )
  8D0:  Call  RunToGoal ( .Actor:Self  0` .False )
  8E8:  Call  ResetAllActorSounds   ( .Actor:Self )
  8F8:  Wait  1`
  904:  Call  SetGoalToTarget   ( .Actor:Self )
  914:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000005 00000020 )
  93C:  Switch  *Var0
  948:  	CaseOR  ==  .HitResult:Hit % 0
  954:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  960:  		Call  UseBattleCamPreset    ( 00000002 )
  970:  		Thread
  978:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000010 00000000 )
  994:  			Set   *Var0  00000000
  9A4:  			Loop  0000003C
  9B0:  				Add   *Var0  00000012
  9C0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  9DC:  				Wait  1`
  9E8:  			EndLoop
  9F0:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A0C:  			Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  A28:  		EndThread
  A30:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  A44:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  A60:  		Sub   *Var0  00000032
  A70:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A8C:  		Call  JumpToGoal    ( .Actor:Self  30` .False .True .False )
  AAC:  		Sub   *Var0  00000028
  ABC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AD8:  		Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
  AF8:  		Sub   *Var0  0000001E
  B08:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B24:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B44:  		Wait  10`
  B50:  		Call  YieldTurn ( )
  B5C:  		Call  EnableActorGlow   ( .Actor:Self .False )
  B70:  		Call  SetPartEventBits  ( .Actor:Self 00000001 00400000 .False )
  B8C:  		Call  SetActorYaw   ( .Actor:Self  180` )
  BA0:  		Call  SetAnimation  ( .Actor:Self 00000001 00300107 )
  BB8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  BCC:  		Call  SetGoalToHome ( .Actor:Self )
  BDC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  BF4:  		Call  SetAnimation  ( .Actor:Self 00000001 00300102 )
  C0C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  C20:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  C38:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80221CD4 )
  C50:  	EndCaseGroup
  C58:  EndSwitch
  C60:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  C74:  Call  UseIdleAnimation  ( .Actor:Self .True )
  C88:  Return
  C90:  End
}


@	$TubbasHeart
{
	[MaxHP]        60`b
	[PowerBounce]   3`b
}

%Hopping Attack Startup?

@	$Script_802244DC
{
    [0]  Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
   [14]  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.4] )
}


@	$Script_80224414
{
    0:  Call  UseBattleCamPreset    ( 0000000E )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  MoveBattleCamOver (  40` )
   30:  Wait  30`
   3C:  Call  ActorSpeak        ( 000E00C6 .Actor:Self 00000001 006C000D 006C000D ) % Owwwweeee! Oh, I'm hurting! I have to get out of h ...
   5C:  Call  UseBattleCamPreset    ( 00000002 )
   6C:  Call  MoveBattleCamOver (  25` )
   6D:  ExecWait $Script_80224B3C
   7C:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
   94:  Call  SetBattleFlagBits ( 00060000 .True )
   A8:  Call  8026F60C  ( 00000014 )
   B8:  Return
   C0:  End
}


#new:Script $ShowMessage1
{
	Call  ActorSpeak        ( 001F003C .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Cardiac Arrest
	Return
	End
}

#new:Script $ShowMessage2
{
	Call  ActorSpeak        ( 001F003D .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Beat by Heartbeat
	Return
	End
}

#new:Script $ShowMessage3
{
	Call  ActorSpeak        ( 001F003E .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Libido Slam
	Return
	End
}

#new:Script $ShowMessage4
{
	Call  ActorSpeak        ( 001F003F .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Lustful Hook
	Return
	End
}

@	$Script_TakeTurn_802245C8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
   4C:  If  *Var0  !=  .HitResult:Miss % 6
   5C:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   74:  	If  *Var0  !&  00000001
   84:  		Call  GetCurrentPartnerID   ( *Var0 )
   94:  		If  *Var0  ==  .Partner:Bow % 9
   A4:  			Call  802535B4  ( 00000000 )
   B4:  			ConstOR  *Var0 00000003
   C4:  			Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
   DC:  			Call  UseBattleCamPreset    ( 0000000E )
   EC:  			Call  BattleCamTargetActor  ( .Actor:Self )
   FC:  			Call  MoveBattleCamOver (  40` )
  10C:  			Wait  10`
  118:  			Call  ActorSpeak        ( 000E00C3 .Actor:Self 00000001 006C000B 006C0001 ) % Hey, you! Lady ghost! You look quite tasty. Stick  ...
  138:  			Call  UseBattleCamPreset    ( 0000000E )
  148:  			Call  BattleCamTargetActor  ( .Actor:Partner )
  158:  			Call  MoveBattleCamOver (  25` )
  168:  			Wait  5`
  174:  			Call  UseIdleAnimation  ( .Actor:Partner .False )
  188:  			Call  SetAnimation      ( .Actor:Partner 00000001 000D0004 )
  1A0:  			Call  ActorSpeak        ( 000E00C4 .Actor:Partner 00000001 000D0004 000D0001 ) % Blech! You wish! You don't have a chance, you ghos ...
  1C0:  			Call  SetAnimation      ( .Actor:Partner 00000001 000D000F )
  1D8:  			Call  EndActorSpeech    ( .Actor:Partner 00000001 FFFFFFFF FFFFFFFF )
  1F4:  			Call  UseBattleCamPreset    ( 00000002 )
  204:  			Call  UseIdleAnimation  ( .Actor:Partner .True )
  218:  			Call  MoveBattleCamOver (  30` )
  228:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  240:  			If  *Var0  ==  00000000
  250:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  268:  				If  *Var0  !=  00000000
  278:  					Call  802535B4  ( 00000001 )
  288:  				EndIf
  290:  			Else
  298:  				Call  802535B4  ( 00000001 )
  2A8:  			EndIf
  2B0:  		EndIf
  2B8:  	EndIf
  2C0:  EndIf
  2C8:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  2E0:  Switch  *Var0
  2EC:  	Case  ==  00000000
  2F8:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  310:  		If  *Var0  ==  00000000
  320:  			Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
  338:  			Call  UseBattleCamPreset    ( 0000000E )
  348:  			Call  BattleCamTargetActor  ( .Actor:Self )
  358:  			Call  MoveBattleCamOver     (  40` )
  368:  			Wait  10`
  374:  			Call  ActorSpeak    ( 000E00C5 .Actor:Self 00000001 006C000B 006C0001 ) % Heh heh heh heh... I'm gonna do this great attack. ...
  394:  		EndIf
				Exec  $ShowMessage2
  39B:			ExecWait  $Script_80224B3C
  39C:  		ExecWait  $Script_80225258
  3A8:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  3C0:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  3D8:  		If  *Var0  &  00000002
  3E8:  			Call  802535B4  ( 00000001 )
  3F8:  		EndIf
  400:  	Case  ==  00000001
				Exec  $ShowMessage1
  40C:  		ExecWait  $Script_802255D8
  418:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  430:  		If  *Var0  ==  00000000
  440:  			Call  GetActorVar   ( .Actor:Self 00000005 *Var1 )
  458:  			Add   *Var1  00000001
  468:  			Call  SetActorVar   ( .Actor:Self 00000005 *Var1 )
  480:  			If  *Var1  >=  00000002
  490:  				Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
  4A8:  			Else
  4B0:  				Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  4C8:  			EndIf
  4D0:  		EndIf
  4D8:  	Case  ==  00000002
  4E4:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
				Exec  $ShowMessage2
  4FC:  		ExecWait  $Script_80224B3C
  4FD:			ExecWait  $Script_80224B3C
  508:  EndSwitch
  510:  Call  GetActorVar       ( .Actor:Self 00000002 *Var0 )
  528:  ConstAND  *Var0 FFFFFFFD
  538:  Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
  550:  Call  UseIdleAnimation  ( .Actor:Self .True )
  564:  Return
  56C:  End
}



@	$Script_80225258
{
   64:  Call  SetAnimation      ( .Actor:Self 00000001 006C000B )
   7C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   98:  Call  GetStatusFlags    ( .Actor:Self *Var4 )
   AC:  If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
   BC:  	Add   *Var1  0000000F
   CC:  	SetF  *Var3  *Fixed[1.0]
   DC:  Else
   E4:  	Add   *Var1  00000006
   F4:  	SetF  *Var3  *Fixed[0.4]
  104:  EndIf
  10C:  Call  PlayEffect    ( ~FX:GatherMagic:Dark *Var0 *Var1 *Var2 *Var3 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  150:  Call  PlayEffect    ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Var3 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  PlaySoundAtActor      ( .Actor:Self 000020F7 )
  1A8:  Wait  30`
  1D4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  1E8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  220:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  240:  Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  258:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  GetStatusFlags        ( .Actor:Self *Var4 )
  288:  If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  298:  	Add   *Var1  0000000F
  2A8:  	SetF  *Var3  *Fixed[1.0]
  2B8:  Else
  2C0:  	Add   *Var1  00000006
  2D0:  	SetF  *Var3  *Fixed[0.4]
  2E0:  EndIf
  2E8:  Call  PlayEffect        ( ~FX:EnergyOut:ShortStreaks *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  32C:  Call  SetActorVar       ( .Actor:Self 00000004 *VarF )
  344:  Call  EnableActorGlow   ( .Actor:Self .True )
  358:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C1C )
  370:  Return
  378:  End
}



@	$Script_802255D8
{
   [6C]  Wait  10`
  [158]  Wait  30`
  [62C]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000014 00000020 )
}


%Jumping attack
%Zap Tap and superguards break this fight a lot, so make it a non-contact move.

@	$Script_80224B3C
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   4C:  Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
   64:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.8] )
   78:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  Sub   *Var0  0000002D
   A4:  Set   *Var1  00000000
   B4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
   F0:  Call  SetGoalToTarget       ( .Actor:Self )
  100:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  11C:  Add   *Var0  00000028
  12C:  Set   *Var1  00000000
  13C:  Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  150:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.8] )
     78:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  Sub   *Var0  0000002D
   A4:  Set   *Var1  00000000
   B4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
   F0:  Call  SetGoalToTarget       ( .Actor:Self )
  100:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  11C:  Add   *Var0  00000028
  12C:  Set   *Var1  00000000
  13C:  Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  150:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  164:  ExecWait  8029C12C
  170:  Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
  188:  Call  SetAnimation  ( .Actor:Self 00000001 006C0016 )
  1A0:  Wait  3`
  1AC:  Call  SetAnimation  ( .Actor:Self 00000001 006C0015 )
  1C4:  Call  EnemyTestTarget       ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1E8:  Switch  *Var0
  1F4:  	CaseOR  ==  .HitResult:Miss % 6
  200:  	CaseOR  ==  .HitResult:Lucky % 5
  20C:  		Set   *VarA  *Var0
  21C:  		Call  SetGoalToTarget       ( .Actor:Self )
  22C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  248:  		Sub   *Var0  0000001E
  258:  		Set   *Var1  00000000
  268:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  27C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  298:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D4:  		Sub   *Var0  00000014
  2E4:  		Set   *Var1  00000000
  2F4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[3.0] )
  308:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  324:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  344:  		Sub   *Var0  0000000A
  354:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  370:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  390:  		Wait  10`
  39C:  		Call  UseBattleCamPreset    ( 00000002 )
  3AC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3BC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3E0:  		EndIf
  3E8:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  400:  		ExecWait  $Script_802244DC
  40C:  		Return
  414:  	EndCaseGroup
  41C:  	Default
  424:  		Call  SetGoalToTarget       ( .Actor:Self )
  434:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  448:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  468:  EndSwitch
  470:  Wait  1`
  47C:  Call  SetGoalToTarget   ( .Actor:Self )
  48C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000006 00000020 )
  4B4:  Set   *VarF  *Var0
  4C4:  Switch  *VarF
  4D0:  	CaseOR  ==  .HitResult:Hit % 0
  4DC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4E8:  	CaseOR  ==  0000000A % A
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
  51C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  538:  		Wait  1`
  544:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  560:  		Wait  1`
  56C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  588:  		Add   *Var0  0000001E
  598:  		Set   *Var1  00000000
  5A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  5BC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5D8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  5F8:  		Add   *Var0  00000014
  608:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  624:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  644:  		Add   *Var0  0000000A
  654:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  670:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  690:  		Wait  2`
  2C8:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  2E0:  Switch  *Var0
  4D8:  	Case  ==  00000002
  424:  		Call  SetGoalToTarget       ( .Actor:Self )
  434:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.2] )
  448:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  470:  Wait  1`
  47C:  Call  SetGoalToTarget   ( .Actor:Self )
  48C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000006 00000020 )		
  468:  EndSwitch		
  69C:  		If  *VarF  ==  0000000A % A
  6AC:  			Return
  6B4:  		EndIf
  6BC:  		Call  UseBattleCamPreset    ( 00000002 )
  6D8:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  6F0:  		ExecWait  $Script_802244DC
  6FC:  	EndCaseGroup
  704:  EndSwitch
  70C:  Return
  714:  End
}




@	$TubbaBlubba
{
	[Level]        78`b
	[MaxHP]        50`b
	[PowerBounce]   3`b
}


@	$StatusTable_80225CA0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   40`
	.Status:Shrink     40`
	.Status:Stop       40`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}



@	$Script_80226558
{
		Exec  $ShowMessage4
     0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  SetBattleCamZoom  (  150` )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Set   *Var1  006B0006
   6C:  ExecWait  $Script_80225F8C
   78:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
   B4:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
   C4:  	Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
   E0:  Else
   E8:  	Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  104:  EndIf
  10C:  Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  120:  Call  RunToGoal     ( .Actor:Self  0` .False )
  138:  Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
  150:  Wait  8`
  15C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  170:  Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
  188:  Wait  10`
  194:  Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
  1AC:  Wait  1`
  1B8:  Call  SetGoalToTarget   ( .Actor:Self )
  1C8:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1DC:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  1EC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  208:  	Set   *Var1  00000000
  218:  	Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:  	Thread
  264:  		Call  StartRumble   ( 00000001 )
  274:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[15.0] )
  290:  	EndThread
  298:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  2AC:  EndIf
  2B4:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  2D8:  Switch  *VarA
  2E4:  	CaseOR  ==  .HitResult:Miss % 6
  2F0:  	CaseOR  ==  .HitResult:Lucky % 5
  2FC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  318:  		Call  PlayEffect        ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  		Wait  12`
  368:  		Set   *Var1  006B0001
  378:  		ExecWait  $Script_80225F8C
  384:  		Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  39C:  		Call  UseBattleCamPreset    ( 00000002 )
  3AC:  		Call  MoveBattleCamOver (  20` )
  3BC:  		If  *VarA  ==  00000005
  3CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3F0:  		EndIf
  3F8:  		ExecWait  $Script_80225FD4
  404:  		Return
  40C:  	EndCaseGroup
  414:  	Default
  41C:  EndSwitch
  424:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  438:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  448:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  464:  	Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4A8:  EndIf
  4B0:  Wait  2`
  4BC:  Call  SetGoalToTarget   ( .Actor:Self )
  4F4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  138:  Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
  150:  Wait  8`
  15C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  170:  Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
  188:  Wait  10`
  194:  Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
  1AC:  Wait  1`
  1B8:  Call  SetGoalToTarget   ( .Actor:Self )
  1C8:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1DC:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  1EC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  208:  	Set   *Var1  00000000
  218:  	Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:  	Thread
  264:  		Call  StartRumble   ( 00000001 )
  274:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[15.0] )
  290:  	EndThread
  298:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  2AC:  EndIf
  424:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  438:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  448:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  464:  	Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4A8:  EndIf
  4B0:  Wait  2`
  4BC:  Call  SetGoalToTarget   ( .Actor:Self )
  4F4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 00000003 00000020 )
  138:  Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
  150:  Wait  8`
  15C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  170:  Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
  188:  Wait  18`
  194:  Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
  1AC:  Wait  1`
  1B8:  Call  SetGoalToTarget   ( .Actor:Self )
  1C8:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1DC:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  1EC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  208:  	Set   *Var1  00000000
  218:  	Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:  	Thread
  264:  		Call  StartRumble   ( 00000001 )
  274:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[15.0] )
  290:  	EndThread
  298:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  2AC:  EndIf
  424:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  438:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  448:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  464:  	Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4A8:  EndIf
  4B0:  Wait  2`
  4BC:  Call  SetGoalToTarget   ( .Actor:Self )
  4CC:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  4DC:  	Call  80269EAC  ( 00000017 )
  4EC:  EndIf
  4F4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  51C:  Call  UseBattleCamPreset    ( 0000003F )
  52C:  Call  SetBattleCamZoom  (  200` )
  53C:  Call  BattleCamTargetActor  ( .Actor:Self )
  54C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  564:  Call  MoveBattleCamOver (  30` )
  574:  Switch  *VarF
  580:  	CaseOR  ==  .HitResult:Hit % 0
  58C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  598:  		Wait  15`
  4F8:          Call  GetLastDamage ( .Actor:Player *Var3 )
  9D8:  		If  *Var3  !=  00000000 
  9E8:  			Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  9FC:  			Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  A10:  			Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  A2C:  			Add   *Var1  0000000A 
  A3C:  			Call  $Function_802188B0_05 ( *Var0 *Var1 *Var2 *Var3 )
  A58:  			Thread
  A60:  				Wait  15`
  A6C:  				Call  PlaySoundAtActor      ( .Actor:Self 0000025C )
  A80:  				Call  $Function_80218964_05 ( *Var0 *Var1 *Var2 *Var3 )
  A9C:  			EndThread
  AA4:  			Add   *Var0  00000014 
  AB4:  			Add   *Var1  00000014 
  AC4:  			Call  PlayEffect    ( ~FX:Recover:HP *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B08:  			Call  GetActorHP    ( .Actor:Self *Var0 )
  B1C:  			Add   *Var0  *Var3 
  B2C:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
  B40:  		EndIf
  5A4:  		Set   *Var1  006B0001
  5B4:  		ExecWait  $Script_80225F8C
  5C0:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  5D8:  		Call  UseBattleCamPreset    ( 00000002 )
  5E8:  		Call  MoveBattleCamOver     (  20` )
  5F8:  		Call  YieldTurn ( )
  604:  		ExecWait  $Script_80225FD4
  610:  	EndCaseGroup
  618:  EndSwitch
  620:  Return
  628:  End
}



@	$Script_80225FD4
{
   [44]  Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
}




@   $Script_80226B88
{
		Exec  $ShowMessage3
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  SetBattleCamZoom  (  150` )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Set   *Var1  006B0006
   6C:  ExecWait  $Script_80225F8C
   78:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  AddGoalPos        ( .Actor:Self  70`  0`  0` )
   BC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[25.0] )
   D0:  Call  RunToGoal ( .Actor:Self  0` .False )
   E8:  Call  SetAnimation      ( .Actor:Self 00000001 006B000A )
  100:  Wait  4`
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 006B000B )
  124:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000003E7 00000000 )
  140:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  164:  Switch  *Var0
  170:  	CaseOR  ==  .HitResult:Miss % 6
  17C:  	CaseOR  ==  .HitResult:Lucky % 5
  188:  		Set   *VarA  *Var0
  198:  		Thread
  1A0:  			Wait  4`
  1AC:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
  1C4:  		EndThread
  1CC:  		Call  SetGoalToTarget       ( .Actor:Self )
  1DC:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  		Sub   *Var0  0000000F
  208:  		Set   *Var1  00000000
  218:  		Add   *Var2  00000005
  228:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  23C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  		Call  JumpToGoal    ( .Actor:Self  23` .False .True .False )
  278:  		Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  28C:  		Call  PlayEffect    ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
  2E8:  		Thread
  2F0:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  30C:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  350:  		EndThread
  358:  		Thread
  360:  			Call  StartRumble   ( 00000001 )
  370:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  38C:  		EndThread
  394:  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  3A8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3C4:  		Sub   *Var0  00000014
  3D4:  		Set   *Var1  00000000
  3E4:  		Add   *Var2  00000005
  3F4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  408:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  424:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  444:  		Call  StartRumble   ( 00000001 )
  454:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  470:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  48C:  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  4D0:  		If  *VarA  ==  .HitResult:Lucky % 5
  4E0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  504:  		EndIf
  50C:  		Call  UseBattleCamPreset    ( 00000002 )
  51C:  		Call  MoveBattleCamOver     (  20` )
  52C:  		Wait  4`
  538:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
  550:  		Wait  2`
  55C:  		ExecWait  $Script_80225FD4
  568:  		Return
  570:  	EndCaseGroup
  578:  	Default
  580:  		Thread
  588:  			Wait  3`
  594:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
  5AC:  		EndThread
  5B4:  		Call  SetGoalToTarget       ( .Actor:Self )
  5C4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  5D8:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  5F8:  EndSwitch
  600:  Wait  2`
  60C:  Call  SetGoalToTarget   ( .Actor:Self )
  61C:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  630:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  640:  	Call  80269EAC  ( 00000018 )
  650:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  664:  EndIf
  430:      If  *GB_EnemyDefense ==  1`
  431:				Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoContact 00000000 00000000 00000008 00000020 )  
				Else
					Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000008 00000020 )
  600:      EndIf
  601:			
  694:  Call  UseBattleCamPreset    ( 0000003F )
  6A4:  Call  SetBattleCamZoom  (  200` )
  6B4:  Call  BattleCamTargetActor  ( .Actor:Self )
  6C4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  6DC:  Call  MoveBattleCamOver (  30` )
  6EC:  Switch  *VarF
  6F8:  	CaseOR  ==  .HitResult:Hit % 0
  704:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  710:  		Call  GetStatusFlags    ( .Actor:Self *Var5 )
  724:  		If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  734:  			Goto  1
  740:  		EndIf
  748:  		Call  GetBattleFlags    ( *Var0 )
  758:  		If  *Var0  !&  80000000
  768:  			Call  GetStatusFlags    ( .Actor:Player *Var0 )
  77C:  			If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
  78C:  				Call  LandJump  ( .Actor:Self )
  79C:  			Else
  7A4:  				Goto  1
  7B0:  			EndIf
  7B8:  		Else
  7C0:  			Goto  1
  7CC:  		EndIf
  7D4:  		Label  0
  7E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7FC:  		Call  PlayEffect    ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  840:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
  858:  		Thread
  860:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  87C:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  8C0:  		EndThread
  8C8:  		Thread
  8D0:  			Call  StartRumble   ( 00000001 )
  8E0:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  8FC:  		EndThread
  904:  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  918:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  934:  		Sub   *Var0  00000014
  944:  		Set   *Var1  00000000
  954:  		Add   *Var2  00000005
  964:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  978:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  994:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  9B4:  		Call  StartRumble   ( 00000001 )
  9C4:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  9E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  9FC:  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  A40:  		Goto  2
  A4C:  		Label  1
  A58:  		Call  GetStatusFlags        ( .Actor:Self *Var5 )
  A6C:  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  A7C:  			Wait  3`
  A88:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AA4:  			Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AE8:  			Call  StartRumble   ( 00000001 )
  AF8:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  B14:  		EndIf
  B1C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B38:  		Add   *Var0  00000028
  B48:  		Set   *Var1  00000000
  B58:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  B6C:  		Thread
  B74:  			Wait  8`
  B80:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
  B98:  		EndThread
  BA0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BBC:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  BDC:  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  BEC:  			Call  StartRumble   ( 00000001 )
  BFC:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  C18:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  C34:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  C78:  			Wait  8`
  C84:  		EndIf
  C8C:  		Label  2
  C98:  		Call  UseBattleCamPreset    ( 00000002 )
  CA8:  		Call  MoveBattleCamOver     (  20` )
  CB8:  		Call  YieldTurn ( )
  CC4:  		ExecWait  $Script_80225FD4
  CD0:  	EndCaseGroup
  CD8:  EndSwitch
  CE0:  Return
  CE8:  End
}


@	$Script_80227878
{
	0:	Wait 35`
    2:  Call  SetAnimation  ( .Actor:Self 00000001 006B0014 )
		Set *GB_EnemyDefense 1`
   18:  Call  ActorSpeak    ( 000E00C9 .Actor:Self 00000001 006B0014 006B0014 ) % Eeeeoooow!!
		ExecWait $Script_80226B88
   38:  Set   *Var0  00000001
   48:  Set   *Var1  006B0014
			Thread			
				Call  SetMusicTrack ( 00000000 .Song:LevelUp 00000002 00000008 )  %Ending stinger
				Wait  195`
				Call  SetMusicTrack ( 00000000 .Song:BossLevelUp 00000001 00000008 )  %In case player levels up
			EndThread
   58:  ExecWait  DoDeath
   64:  Return
   6C:  End
}


@	$Formation_00
{
	$HyperGoomba 00000002 0000000A 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000005 00000009 00000000 00000000 00000000 00000000
	$DryBlooper 00000006 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_01
{
	$HyperGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000002 00000009 00000000 00000000 00000000 00000000
	$DryBlooper 00000006 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_02
{
	$HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperGoomba 00000002 00000008 00000000 00000000 00000000 00000000
	$DryBlooper 00000007 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_03
{
	$HyperGoomba 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
	$DryBlooper 00000007 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_06
{
	$HyperParagoomba 00000005 0000000A 00000000 00000000 00000000 00000000
	$DryBlooper 00000006 00000009 00000000 00000000 00000000 00000000
	$DryBlooper 00000007 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_07
{
	$HyperParagoomba 00000004 0000000A 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000005 00000009 00000000 00000000 00000000 00000000
	$DryBlooper 00000006 00000008 00000000 00000000 00000000 00000000
	$DryBlooper 00000007 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_08
{
	$HyperParagoomba 00000004 0000000A 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000005 00000009 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
	$DryBlooper 00000007 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_0A
{
	$HyperCleft 00000001 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000002 00000009 00000000 00000000 00000000 00000000
	$DryBlooper 00000007 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_0B
{
	$HyperCleft 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperCleft 00000001 00000009 00000000 00000000 00000000 00000000
	$DryBlooper 00000006 00000008 00000000 00000000 00000000 00000000
	$DryBlooper 00000007 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_0C
{
	$HyperCleft 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperCleft 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperCleft 00000002 00000008 00000000 00000000 00000000 00000000
	$DryBlooper 00000007 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_0D
{
	$HyperCleft 00000000 0000000A 00000000 00000000 00000000 00000000
	$HyperGoomba 00000001 00000009 00000000 00000000 00000000 00000000
	$HyperParagoomba 00000006 00000008 00000000 00000000 00000000 00000000
	$DryBlooper 00000007 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_0F
{
	$TubbasHeart $Vector3D_802280C0 0000000A 00000000 00000000 00000000 00000000
	$LazyBones 00000001 00000009 00000000 00000000 00000000 00000000
}



@	$FormationTable
{
	$SJIS_80228580 00000003 $Formation_00 $Stage_8022792C 00000000
	$SJIS_8022856C 00000003 $Formation_01 $Stage_8022792C 00000000
	$SJIS_80228558 00000004 $Formation_02 $Stage_8022792C 00000000
	$SJIS_80228530 00000004 $Formation_03 $Stage_8022792C 00000000
	$SJIS_80228508 00000004 $Formation_04 $Stage_8022792C 00000000
	$SJIS_802284CC 00000004 $Formation_05 $Stage_8022792C 00000000
	$SJIS_802284B4 00000003 $Formation_06 $Stage_8022792C 00000000
	$SJIS_8022849C 00000004 $Formation_07 $Stage_8022792C 00000000
	$SJIS_80228484 00000004 $Formation_08 $Stage_8022792C 00000000
	$SJIS_8022846C 00000004 $Formation_09 $Stage_8022792C 00000000
	$SJIS_80228458 00000003 $Formation_0A $Stage_8022792C 00000000
	$SJIS_80228440 00000004 $Formation_0B $Stage_8022792C 00000000
	$SJIS_80228428 00000004 $Formation_0C $Stage_8022792C 00000000
	$SJIS_80228400 00000004 $Formation_0D $Stage_8022792C 00000000
	$SJIS_802283D8 00000004 $Formation_0E $Stage_8022792C 00000000
	$SJIS_802283C4 00000002 $Formation_0F $Stage_80227C38 00000000
	$SJIS_802283B8 00000001 $Formation_10 $Stage_8022792C 00000000
	00000000 00000000 00000000 00000000 00000000
}