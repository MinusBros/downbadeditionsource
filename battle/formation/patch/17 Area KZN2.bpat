@	$LavaPiranha
{
	[Level]        58`b
	[MaxHP]        50`b
}

%Water and ice have reverse effects on Lava
%Piranha's second form now, making the fight
%less easy to cheese.

@	$DefenseTable_8021D0F0
{
	.Element:Normal 00000000
	.Element:Water  00000004
	.Element:Ice    00000005
	.Element:Fire   00000063
	.Element:Blast  00000000
	.Element:End
}


%Good luck statusing Lava Piranha lol

@	$StatusTable_8021D148
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      20`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      20`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   25`
	.Status:Shrink      0`
	.Status:Stop       25`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -2`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -2`
	.Status:ShrinkTurnMod    -2`
	.Status:StopTurnMod      -2`
	.Status:End
}



%Lava Piranha gets up and attacks on the same
%turn to prevent it from getting stun-locked

@	$Script_TakeTurn_8021FC10
{
    0:  Call  GetActorFlags ( .Actor:Self *Var0 )
   14:  If  *Var0  &  00400000
   24:  	Return
   2C:  EndIf
   34:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   4C:  Switch  *Var0
   58:  	Case  ==  00000000
   64:  		ExecWait  $Script_8021FF3C %Lava Spit Phase 1
   70:  	Default
   78:  		Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   90:  		If  *Var0  ==  00000001
   A0:  			ExecWait  $Script_802204B0 %Lava Spit Phase 2
   AC:  		Else
   B4:  			Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
   CC:  			Sub   *Var0  00000002
   DC:  			Call  SetActorVar   ( .Actor:Self 0000000B *Var0 )
   F4:  			If  *Var0  <=  00000000
  104:  				Call  EnableIdleScript      ( .Actor:Self 00000000 )
  118:  				Call  UseBattleCamPreset    ( 00000013 )
  128:  				Call  SetBattleCamTarget    (  80`  70`  0` )
  140:  				Call  SetBattleCamZoom      (  300` )
  150:  				Call  SetBattleCamOffsetZ   (  30` )
  160:  				Call  MoveBattleCamOver     (  30` )
  170:  				Wait  15`
  17C:  				Loop  0000000A
  188:  					Call  OverrideBattleDmaDest ( $End[9230] )
  198:  					Call  LoadBattleDmaData     ( 00000001 )
  1A8:  					Call  PlayModelAnimation    ( 00000000 $End[9230] )
  1BC:  					Wait  4`
  1C8:  				EndLoop
  1D0:  				Call  UseBattleCamPreset    ( 00000002 )
  1E0:  				Call  MoveBattleCamOver     (  15` )
  1F0:  				Call  PlaySoundAtActor      ( .Actor:Self 000003BB )
  204:  				Set   *Var0  00000200
  214:  				ExecWait  $Script_80222EF0
  220:  				Call  SetAnimation  ( .Actor:Self 00000001 00790004 )
  238:  				Call  OverrideBattleDmaDest ( $End[9230] )
  248:  				Call  LoadBattleDmaData     ( 0000000E )
  258:  				Call  PlayModelAnimation    ( 00000000 $End[9230] )
  26C:  				Wait  12`
  278:  				Call  OverrideBattleDmaDest ( $End[9230] )
  288:  				Call  LoadBattleDmaData     ( 00000000 )
  298:  				Call  PlayModelAnimation    ( 00000000 $End[9230] )
  2AC:  				Call  EnableIdleScript      ( .Actor:Self 00000001 )
  2BC:					ExecWait  $Script_802204B0
  2C0:  			EndIf
  2C8:  		EndIf
  2D0:  EndSwitch
  2D8:  Return
  2E0:  End
}

%Funny Kolorado scene

@	$Script_8021D9C8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  802535B4  ( 00000000 )
   38:  Call  SpeakToPlayer     ( 00000000 FFFFFFFF FFFFFFFF 00000000 00100104 ) % Mario! You shan't fight alone! Kolorado to the res ...
   58:  Thread
   60:  	Loop  00000009
   6C:  		Call  PlaySoundAtNpc    ( 00000000 000020BA 00000000 )
   84:  		Wait  2`
   90:  		Call  PlaySoundAtNpc    ( 00000000 000003B4 00000000 )
   A8:  		Wait  2`
   B4:  	EndLoop
   BC:  EndThread
   C4:  Call  SetNpcAnimation   ( 00000000 00B70002 )
   D8:  Call  SetNpcAnimationSpeed  ( 00000000 *Fixed[2.0] )
   EC:  Call  SetNpcSpeed       ( 00000000 *Fixed[11.0] )
  100:  Call  NpcMoveTo ( 00000000  70`  0`  0` )
  7A1:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7A2:  Call  PlayEffect    ( ~FX:Explosion2 *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  7B1:  Call  PlaySoundAtActor  ( .Actor:Self 000034E )
  7B2:  Wait  2`
  11C:  Call  PlaySoundAtNpc    ( 00000000 000000E8 00000000 )
  134:  Call  SetNpcAnimationSpeed  ( 00000000 *Fixed[1.0] )
  148:  Call  SetNpcJumpscale   ( 00000000 *Fixed[1.0] )
  15C:  Call  SetNpcAnimation   ( 00000000 00B70006 )
  170:  Thread
  178:  	Loop  0000000A
  184:  		Call  GetNpcPos     ( 00000000 *Var0 *Var1 *Var2 )
  1A0:  		Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E4:  		Wait  2`
  1F0:  	EndLoop
  1F8:  EndThread
  200:  Call  NpcJump0  ( 00000000  70`  180`  0`  20` )
  220:  Call  SpeakToPlayer ( 00000000 FFFFFFFF FFFFFFFF 00000000 00100105 ) % Ow ow OW!! HOT!!!! Oh, it burns! Really!
  240:  Call  SetNpcYaw ( 00000000  270` )
  254:  Call  SetNpcPos ( 00000000  50`  180`  0` )
  270:  Thread
  278:  	Loop  0000000A
  284:  		Call  GetNpcPos     ( 00000000 *Var0 *Var1 *Var2 )
  2A0:  		Call  PlayEffect    ( ~FX:SmokeBurst:Black *Var0 *Var1 *Var2 *Fixed[1.0] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  		Wait  2`
  2F0:  	EndLoop
  2F8:  EndThread
  300:  Call  NpcJump0  ( 00000000  50`  0`  0`  20` )
  320:  Call  NpcJump0  ( 00000000  50`  0`  0`  6` )
  340:  Call  NpcJump0  ( 00000000  50`  0`  0`  3` )
  360:  Wait  4`
  36C:  Call  SetNpcAnimation   ( 00000000 00B70005 )
  380:  Call  SetNpcJumpscale   ( 00000000 *Fixed[0.7] )
  394:  Call  NpcJump0  ( 00000000  50`  0`  0`  12` )
  3B4:  Thread
  3BC:  	Loop  00000004
  3C8:  		Call  PlaySoundAtNpc    ( 00000000 000020BA 00000000 )
  3E0:  		Wait  2`
  3EC:  		Call  PlaySoundAtNpc    ( 00000000 000003B4 00000000 )
  404:  		Wait  2`
  410:  	EndLoop
  418:  EndThread
  420:  Call  SetNpcAnimation   ( 00000000 00B70003 )
  434:  Call  SetNpcSpeed       ( 00000000 *Fixed[12.0] )
  448:  Call  NpcMoveTo ( 00000000  -60`  0`  0` )
  464:  Call  SpeakToPlayer     ( 00000000 00B70004 00B70001 00000005 00100106 ) % So sorry, old chap, but that's all I can do at the ...
  484:  Call  PlaySoundAtActor  ( .Actor:Self 00000174 )
  498:  Call  SetNpcAnimation   ( 00000000 00B70003 )
  4AC:  Call  SetNpcSpeed       ( 00000000 *Fixed[16.0] )
  4C0:  Call  NpcMoveTo ( 00000000  -300`  0`  0` )
  4DC:  Call  802535B4  ( 00000001 )
  4EC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  500:  Call  UseIdleAnimation  ( .Actor:Self .True )
  514:  Return
  51C:  End
}



%Lava Spitting attack
%This has a 50% chance of
%shrinking Mario now.

@	$Script_8021FF3C
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Thread
   30:  	Wait  4`
   3C:  	Call  UseBattleCamPreset    ( 00000013 )
   4C:  	Call  SetBattleCamTarget    (  80`  70`  0` )
   64:  	Call  SetBattleCamZoom      (  300` )
   74:  	Call  SetBattleCamOffsetZ   (  30` )
   84:  	Call  MoveBattleCamOver     (  45` )
   94:  	Wait  26`
   A0:  	Call  UseBattleCamPreset    ( 00000002 )
   B0:  	Call  MoveBattleCamOver     (  15` )
   C0:  EndThread
   C8:  Call  OverrideBattleDmaDest ( $End[9230] )
   D8:  Call  LoadBattleDmaData ( 00000002 )
   E8:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
   FC:  Wait  7`
  108:  Call  SetAnimation      ( .Actor:Self 00000001 00790005 )
  120:  Wait  4`
  12C:  Call  PlaySoundAtActor  ( .Actor:Self 000003C1 )
  140:  Wait  25`
  14C:  Call  SetAnimation      ( .Actor:Self 00000001 00790006 )
  164:  Call  GetPartOffset     ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  184:  Sub   *Var0  00000032
  194:  Sub   *Var1  0000000F
  1A4:  Call  SetGoalToTarget   ( .Actor:Self )
  1B4:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  1D0:  Sub   *Var3  00000028
  1E0:  Set   *Var4  FFFFFFF6
  1F0:  Call  PlayEffect        ( 00000063 00000001 *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *Fixed[1.0] 00000014 00000014 00000000 00000000 00000000 )
  234:  Call  PlaySoundAtActor  ( .Actor:Self 000003C3 )
  248:  Wait  16`
  254:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  270:  Call  PlayEffect        ( ~FX:EmitterVolume:Embers *Var3 00000000 *Var5 00000032 00000032 *Fixed[1.0] 00000028 00000037 *Fixed[1.0] *Fixed[1.0] 00000000 00000000 )
  2B4:  Call  OverrideBattleDmaDest ( $End[9230] )
  2C4:  Call  LoadBattleDmaData ( 00000003 )
  2D4:  Call  PlayModelAnimation    ( 00000000 $End[9230] )
  2E8:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:Fire 00000000 00000001 00000010 )
  30C:  Switch  *VarA
  318:  	CaseOR  ==  .HitResult:Miss % 6
  324:  	CaseOR  ==  .HitResult:Lucky % 5
  330:  		Call  SetAnimation  ( .Actor:Self 00000001 00790003 )
  348:  		Wait  9`
  354:  		Call  OverrideBattleDmaDest ( $End[9230] )
  364:  		Call  LoadBattleDmaData     ( 00000000 )
  374:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  388:  		If  *VarA  ==  .HitResult:Lucky % 5
  398:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3BC:  		EndIf
  3C4:  		Wait  5`
  3D0:  		Call  UseBattleCamPreset    ( 00000002 )
  3E0:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  3F4:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  408:  		Return
  410:  	EndCaseGroup
  418:  EndSwitch
  420:  Wait  11`
  42C:  Call  SetGoalToTarget   ( .Actor:Self )
  43C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Fire 0000FFFF ~DebuffType:Shrink:2:50` 00000009 00000020 )
  464:  Set   *VarF  *Var0
  474:  Switch  *VarF
  480:  	CaseOR  ==  .HitResult:Hit % 0
  48C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  498:  	CaseOR  ==  0000000A % A
  4A4:  		Call  SetAnimation  ( .Actor:Self 00000001 00790003 )
  4BC:  		Wait  9`
  4C8:  		Call  OverrideBattleDmaDest ( $End[9230] )
  4D8:  		Call  LoadBattleDmaData     ( 00000000 )
  4E8:  		Call  PlayModelAnimation    ( 00000000 $End[9230] )
  4FC:  		If  *VarF  ==  0000000A % A
  50C:  			Return
  514:  		EndIf
  51C:  		Call  UseBattleCamPreset    ( 00000002 )
  52C:  	EndCaseGroup
  534:  EndSwitch
  53C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  550:  Call  UseIdleAnimation  ( .Actor:Self .True )
  564:  Return
  56C:  End
}


%Lava spitting attack phase 2

@	$Script_802204B0
{
   [30]  	Wait  4`
   [94]  	Wait  28`
   [FC]  Wait  10`
  [120]  Wait  8`
  [140]  Wait  42`
  [164]  Call  GetPartOffset     ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  [184]  Sub   *Var0  00000055
  [194]  Set   *Var1  FFFFFFF6
  [228]  Wait  10`
  [23C]  	Wait  22`
  [3C8]  		Wait  3`
  [424]  Wait  14`
  [440]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Fire 0000FFFF ~DebuffType:Shrink:2:50` 0000000A 00000020 )
  [468]  Wait  5`
  [4C0]  Wait  3`
}








%Lava Buds shoot twice, so defense and
%Chill Out is recommended for them.


@	$LavaBud
{
	[MaxHP]         14`b
}


@	$DefenseTable_80225128
{
	.Element:Normal 00000000
	.Element:Water  00000002
	.Element:Ice    00000002
	.Element:Fire   00000063
	.Element:Blast  00000000
	.Element:End
}


@	$StatusTable_80225180
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      25`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   25`
	.Status:Shrink      0`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -2`
	.Status:End
}



@	$Script_ShootBombs
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Thread
   1C:  	Wait  4`
   28:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  	Sub   *Var1  00000019
   54:  	Call  UseBattleCamPreset    ( 00000013 )
   64:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   7C:  	Call  SetBattleCamZoom      (  350` )
   8C:  	Call  SetBattleCamOffsetZ   (  30` )
   9C:  	Call  MoveBattleCamOver     (  30` )
   AC:  	Wait  24`
   B8:  	Call  UseBattleCamPreset    ( 00000002 )
   C8:  	Call  MoveBattleCamOver     (  20` )
   D8:  EndThread
   E0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   F8:  If  *Var0  ==  00000001
  108:  	Call  OverrideBattleDmaDest ( $End[6230] )
  118:  Else
  120:  	Call  OverrideBattleDmaDest ( $End[3230] )
  130:  EndIf
  138:  Call  LoadBattleDmaData ( 00000012 )
  148:  ExecWait  $Script_802256E0
  154:  Thread
  15C:  	Wait  10`
  168:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0005 )
  180:  	Wait  19`
  18C:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0006 )
  1A4:  	Wait  3`
  1B0:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0003 )
  1C8:  	If  *Var0  ==  00000001
  1D8:  		Call  OverrideBattleDmaDest ( $End[6230] )
  1E8:  	Else
  1F0:  		Call  OverrideBattleDmaDest ( $End[3230] )
  200:  	EndIf
  208:  	Call  LoadBattleDmaData ( 0000001F )
  218:  	ExecWait  $Script_802256E0
  224:  EndThread
  22C:  Wait  34`
  238:  Call  SummonEnemy       ( $SpecialFormation_80226B3C 00000000 )
  24C:  Set   *Var5  *Var0
  25C:  Call  GetPartOffset     ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  27C:  Sub   *Var0  0000000F
  28C:  Sub   *Var1  0000000F
  29C:  Call  SetActorPos       ( *Var5 *Var0 *Var1 *Var2 )
  2B8:  Sub   *Var0  0000001E
  2C8:  Sub   *Var1  0000000F
  2D8:  Call  SetAnimation      ( *Var5 00000001 007A0005 )
  2F0:  Call  SetGoalPos        ( *Var5 *Var0 *Var1 *Var2 )
  30C:  Call  SetActorSpeed     ( *Var5 *Fixed[9.0] )
  320:  Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  334:  Call  PlaySoundAtActor  ( *Var5 000003CB )
  348:  Call  SetTargetActor    ( *Var5 .Actor:Player )
  35C:  Call  SetGoalToTarget   ( *Var5 )
  36C:  Call  EnemyTestTarget   ( *Var5 *Var9 ~Flags:DamageType:0 00000000 00000001 00000010 )
  390:  Switch  *Var9
  39C:  	CaseOR  ==  .HitResult:Miss % 6
  3A8:  	CaseOR  ==  .HitResult:Lucky % 5
  3B4:  		Call  SetGoalToTarget       ( *Var5 )
  3C4:  		Call  GetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  3E0:  		Set   *Var0  FFFFFF4C
  3F0:  		Call  SetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  40C:  		Call  SetActorSpeed ( *Var5 *Fixed[17.0] )
  420:  		Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  434:  		Call  FlyToGoal     ( *Var5  0`  0` .Easing:Linear )
  450:  		If  *Var9  ==  .HitResult:Lucky % 5
  460:  			Call  EnemyTestTarget   ( *Var5 *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  484:  		EndIf
  48C:  		Call  UseBattleCamPreset    ( 00000002 )
  49C:  		Call  RemoveActor   ( *Var5 )
  4AC:  		Return
  4B4:  	EndCaseGroup
  4BC:  EndSwitch
  4C4:  Call  SetTargetActor    ( *Var5 .Actor:Player )
  4D8:  Call  SetGoalToTarget   ( *Var5 )
  4E8:  Call  SetActorSpeed     ( *Var5 *Fixed[17.0] )
  4FC:  Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  510:  Call  FlyToGoal ( *Var5  0`  0` .Easing:Linear )
  52C:  Wait  2`
  538:  Call  SetGoalToTarget   ( *Var5 )
  548:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  55C:  Call  SetGoalToTarget   ( .Actor:Self )
  56C:  Call  EnemyDamageTarget ( .Actor:Self *Var9 ~Flags:DamageType:Fire 0000FFFF 00000000 00000006 00000020 )
  594:  Switch  *Var9
  5A0:  	CaseOR  ==  .HitResult:Hit % 0
  5AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5B8:  	CaseOR  ==  0000000A % A
  5C4:  		Call  SetPartFlagBits   ( *Var5 00000001 00000001 .True )
  5E0:  		Call  SetGoalToTarget   ( *Var5 )
  5F0:  		Call  GetGoalPos        ( *Var5 *Var0 *Var1 *Var2 )
  60C:  		Set   *Var1  0000000A
  61C:  		Add   *Var2  00000002
  62C:  		Call  PlayEffect        ( ~FX:Fire:TinyBlue *Var0 *Var1 *Var2 *Fixed[0.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  670:  		Call  MakeLerp  ( 00000078 0000000A 00000014 .Easing:QuadraticIn )
  68C:  		Loop
  698:  			Call  UpdateLerp ( )
  6A4:  			MulF  *Var0  *Fixed[0.01]
  6B4:  			Call  $Function_80218DF0    ( *VarA *Var0 )
  6C8:  			Wait  1`
  6D4:  			If  *Var1  ==  00000000
  6E4:  				BreakLoop
  6EC:  			EndIf
  6F4:  		EndLoop
  6FC:  		Wait  1`
  708:  		Call  RemoveEffect  ( *VarA )
  718:  		Call  RemoveActor   ( *Var5 )
  728:  		Wait  5`
  734:  		If  *Var9  ==  0000000A % A
  744:  			Return
  74C:  		EndIf
  754:  		Call  UseBattleCamPreset    ( 00000002 )
  764:  	EndCaseGroup
  76C:  EndSwitch
   14:  Thread
   1C:  	Wait  4`
   28:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  	Sub   *Var1  00000019
   54:  	Call  UseBattleCamPreset    ( 00000013 )
   64:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   7C:  	Call  SetBattleCamZoom      (  350` )
   8C:  	Call  SetBattleCamOffsetZ   (  30` )
   9C:  	Call  MoveBattleCamOver     (  30` )
   AC:  	Wait  25`
   B8:  	Call  UseBattleCamPreset    ( 00000002 )
   C8:  	Call  MoveBattleCamOver     (  20` )
   D8:  EndThread
   E0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   F8:  If  *Var0  ==  00000001
  108:  	Call  OverrideBattleDmaDest ( $End[6230] )
  118:  Else
  120:  	Call  OverrideBattleDmaDest ( $End[3230] )
  130:  EndIf
  138:  Call  LoadBattleDmaData ( 00000012 )
  148:  ExecWait  $Script_802256E0
  154:  Thread
  15C:  	Wait  10`
  168:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0005 )
  180:  	Wait  19`
  18C:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0006 )
  1A4:  	Wait  3`
  1B0:  	Call  SetAnimation  ( .Actor:Self 00000001 007B0003 )
  1C8:  	If  *Var0  ==  00000001
  1D8:  		Call  OverrideBattleDmaDest ( $End[6230] )
  1E8:  	Else
  1F0:  		Call  OverrideBattleDmaDest ( $End[3230] )
  200:  	EndIf
  208:  	Call  LoadBattleDmaData ( 0000001F )
  218:  	ExecWait  $Script_802256E0
  224:  EndThread
  22C:  Wait  36`
  238:  Call  SummonEnemy       ( $SpecialFormation_80226B3C 00000000 )
  24C:  Set   *Var5  *Var0
  25C:  Call  GetPartOffset     ( .Actor:Self 00000001 *Var0 *Var1 *Var2 )
  27C:  Sub   *Var0  0000000F
  28C:  Sub   *Var1  0000000F
  29C:  Call  SetActorPos       ( *Var5 *Var0 *Var1 *Var2 )
  2B8:  Sub   *Var0  0000001E
  2C8:  Sub   *Var1  0000000F
  2D8:  Call  SetAnimation      ( *Var5 00000001 007A0005 )
  2F0:  Call  SetGoalPos        ( *Var5 *Var0 *Var1 *Var2 )
  30C:  Call  SetActorSpeed     ( *Var5 *Fixed[9.0] )
  320:  Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  334:  Call  PlaySoundAtActor  ( *Var5 000003CB )
  348:  Call  SetTargetActor    ( *Var5 .Actor:Player )
  35C:  Call  SetGoalToTarget   ( *Var5 )
  36C:  Call  EnemyTestTarget   ( *Var5 *Var9 ~Flags:DamageType:0 00000000 00000001 00000010 )
  390:  Switch  *Var9
  39C:  	CaseOR  ==  .HitResult:Miss % 6
  3A8:  	CaseOR  ==  .HitResult:Lucky % 5
  3B4:  		Call  SetGoalToTarget       ( *Var5 )
  3C4:  		Call  GetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  3E0:  		Set   *Var0  FFFFFF4C
  3F0:  		Call  SetGoalPos    ( *Var5 *Var0 *Var1 *Var2 )
  40C:  		Call  SetActorSpeed ( *Var5 *Fixed[17.0] )
  420:  		Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  434:  		Call  FlyToGoal     ( *Var5  0`  0` .Easing:Linear )
  450:  		If  *Var9  ==  .HitResult:Lucky % 5
  460:  			Call  EnemyTestTarget   ( *Var5 *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  484:  		EndIf
  48C:  		Call  UseBattleCamPreset    ( 00000002 )
  49C:  		Call  RemoveActor   ( *Var5 )
  4AC:  		Return
  4B4:  	EndCaseGroup
  4BC:  EndSwitch
  4C4:  Call  SetTargetActor    ( *Var5 .Actor:Player )
  4D8:  Call  SetGoalToTarget   ( *Var5 )
  4E8:  Call  SetActorSpeed     ( *Var5 *Fixed[21.0] )
  4FC:  Call  SetActorJumpGravity   ( *Var5 *Fixed[1.8] )
  510:  Call  FlyToGoal ( *Var5  0`  0` .Easing:Linear )
  52C:  Wait  2`
  538:  Call  SetGoalToTarget   ( *Var5 )
  548:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  55C:  Call  SetGoalToTarget   ( .Actor:Self )
  56C:  Call  EnemyDamageTarget ( .Actor:Self *Var9 ~Flags:DamageType:Fire 0000FFFF 00000000 00000007 00000020 )
  594:  Switch  *Var9
  5A0:  	CaseOR  ==  .HitResult:Hit % 0
  5AC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  5B8:  	CaseOR  ==  0000000A % A
  5C4:  		Call  SetPartFlagBits   ( *Var5 00000001 00000001 .True )
  5E0:  		Call  SetGoalToTarget   ( *Var5 )
  5F0:  		Call  GetGoalPos        ( *Var5 *Var0 *Var1 *Var2 )
  60C:  		Set   *Var1  0000000A
  61C:  		Add   *Var2  00000002
  62C:  		Call  PlayEffect        ( ~FX:Fire:TinyBlue *Var0 *Var1 *Var2 *Fixed[0.3] *VarA 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  670:  		Call  MakeLerp  ( 00000078 0000000A 00000014 .Easing:QuadraticIn )
  68C:  		Loop
  698:  			Call  UpdateLerp ( )
  6A4:  			MulF  *Var0  *Fixed[0.01]
  6B4:  			Call  $Function_80218DF0    ( *VarA *Var0 )
  6C8:  			Wait  1`
  6D4:  			If  *Var1  ==  00000000
  6E4:  				BreakLoop
  6EC:  			EndIf
  6F4:  		EndLoop
  6FC:  		Wait  1`
  708:  		Call  RemoveEffect  ( *VarA )
  718:  		Call  RemoveActor   ( *Var5 )
  728:  		Wait  5`
  734:  		If  *Var9  ==  0000000A % A
  744:  			Return
  74C:  		EndIf
  754:  		Call  UseBattleCamPreset    ( 00000002 )
  764:  	EndCaseGroup
  76C:  EndSwitch
  774:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  788:  Call  UseIdleAnimation  ( .Actor:Self .True )
  79C:  Return
  7A4:  End
}


%Spawning Petit Piranhas
%I never realized how slow
%this move is before.

@	$Script_8022646C
{
   [A8]  	Wait  4`
  [10C]  	Wait  15`
  [1BC]  	Wait  20`
  [1E0]  	Wait  14`
  [204]  	Wait  6`
  [28C]  Wait  26`
  [4C4]  	Call  SetActorSpeed ( *Var5 *Fixed[8.0] )
  [584]  	Call  SetActorSpeed ( *Var5 *Fixed[10.0] )
}


%Lava Buds shoot bombs and make Petit Piranhas
%on the same turn.

@	$Script_TakeTurn_80225D98
{
    0:  Call  GetActorFlags ( .Actor:Self *Var0 )
   14:  If  *Var0  &  00400000
   24:  	Return
   2C:  EndIf
   34:  Call  GetActorVar   ( .Actor:Enemy0 00000000 *Var0 )
   4C:  If  *Var0  ==  00000000
   5C:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   74:  	If  *Var0  ==  00000002
   84:  		Return
   8C:  	EndIf
   94:  	ExecWait  $Script_ShootBombs
   A0:  Else
   A8:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var1 )
   C0:  	If  *Var1  !=  00000000
   D0:  		Sub   *Var1  00000001
   E0:  		Call  SetActorVar   ( .Actor:Self 00000004 *Var1 )
   F8:  		Return
  100:  	EndIf
  108:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
  120:  	If  *Var0  ==  00000001
  130:  		If  *Var1  !=  00000000
  140:  			Return
  148:  		EndIf
  150:  		Call  SetActorVar   ( .Actor:Self 00000004 00000001 )
  168:  		ExecWait  $Script_8022646C
  169:			ExecWait  $Script_ShootBombs
  174:  	Else
  17C:  		Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
  194:  		Sub   *Var0  00000001
  1A4:  		Call  SetActorVar   ( .Actor:Self 0000000B *Var0 )
  1BC:  		If  *Var0  <=  00000000
  1CC:  			Call  EnableIdleScript  ( .Actor:Self 00000000 )
  1E0:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  1F8:  			If  *Var0  ==  00000001
  208:  				Call  UseBattleCamPreset    ( 00000013 )
  218:  				Call  SetBattleCamTarget    (  40`  30`  0` )
  230:  				Call  SetBattleCamZoom      (  270` )
  240:  				Call  SetBattleCamOffsetZ   (  20` )
  250:  				Call  MoveBattleCamOver     (  30` )
  260:  			Else
  268:  				Call  UseBattleCamPreset    ( 00000013 )
  278:  				Call  SetBattleCamTarget    (  110`  35`  0` )
  290:  				Call  SetBattleCamZoom      (  300` )
  2A0:  				Call  SetBattleCamOffsetZ   (  20` )
  2B0:  				Call  MoveBattleCamOver     (  30` )
  2C0:  			EndIf
  2C8:  			Wait  15`
  2D4:  			Loop  0000000A
  2E0:  				If  *Var0  ==  00000001
  2F0:  					Call  OverrideBattleDmaDest ( $End[6230] )
  300:  				Else
  308:  					Call  OverrideBattleDmaDest ( $End[3230] )
  318:  				EndIf
  320:  				Call  LoadBattleDmaData ( 0000001E )
  330:  				ExecWait  $Script_802256E0
  33C:  				Wait  4`
  348:  			EndLoop
  350:  			Call  UseBattleCamPreset    ( 00000002 )
  360:  			Call  MoveBattleCamOver     (  15` )
  370:  			Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  384:  			Call  SetEnemyHP    ( .Actor:Self *Var0 )
  398:  			Call  SetAnimation  ( .Actor:Self 00000001 007B0004 )
  3B0:  			Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3C8:  			If  *Var0  ==  00000001
  3D8:  				Set   *Var0  00000201
  3E8:  			Else
  3F0:  				Set   *Var0  00000202
  400:  			EndIf
  408:  			Call  PlaySoundAtActor  ( *Var0 000020BF )
  41C:  			ExecWait  $Script_80222EF0
   0:  				Call  RandInt   ( 00000001 *Var0 )
   14:  				If  *Var0  ==  00000000
   24:      				ExecWait  $Script_ShootBombs
   30:  				Else
   38:      				ExecWait  $Script_8022646C
   44:  			EndIf
  428:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  440:  			If  *Var0  ==  00000001
  450:  				Call  OverrideBattleDmaDest ( $End[6230] )
  460:  			Else
  468:  				Call  OverrideBattleDmaDest ( $End[3230] )
  478:  			EndIf
  480:  			Call  LoadBattleDmaData ( 0000001D )
  490:  			ExecWait  $Script_802256E0
  49C:  			Wait  4`
  4A8:  			If  *Var0  ==  00000001
  4B8:  				Call  OverrideBattleDmaDest ( $End[6230] )
  4C8:  			Else
  4D0:  				Call  OverrideBattleDmaDest ( $End[3230] )
  4E0:  			EndIf
  4E8:  			Call  LoadBattleDmaData ( 0000001F )
  4F8:  			ExecWait  $Script_802256E0
  504:  			Call  GetEnemyMaxHP     ( .Actor:Self *Var0 )
  518:  			Call  SetEnemyHP        ( .Actor:Self *Var0 )
  52C:  			Call  EnableIdleScript  ( .Actor:Self 00000001 )
  540:  		EndIf
  548:  	EndIf
  550:  EndIf
  558:  ExecWait  $Script_8022630C
  564:  Return
  56C:  End
}




%Might as well update the Petit Piranha too.

@	$Script_TakeTurn_802246F4
{
   [BC]  	Wait  8`
  [1D4]  	Wait  8`
  [298]  	Wait  2`
  [364]  Call  SetActorSpeed     ( .Actor:Self *Fixed[12.0] )
  [378]  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[6.0] )
  [75C]  Set   *Var8  00000008
}