%The Flubba is a nice, slightly weaker version of
%the Clubba that shows up in Chapter 2. They are
%also really fast and have strange timing


#import Flubba.bpat

%Pokeys are mostly unchanged, but they are quicker
%and have a 10% chance of inflicting poison

@	$Pokey
{
	[MaxHP]         6`b
	[Level]         11`b
}

@	$Script_TakeTurn_8021A018
{
  [600]  Wait  6`
  [65C]  Wait  2`
  [89C]  Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[28.0] )
  [90C]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 ~DebuffType:Poison:3:10` 00000003 00000020 )
}

@	$Script_8021B590
{
  [124]  Call  SetActorSpeed     ( .Actor:Self *Fixed[9.0] )
  [170]  Wait  2`
  [1C0]  Wait  2`
  [50C]  		Wait  5`
  [57C]  		Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  [63C]  	Wait  1`
  [6D8]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:10` 00000003 00000020 )
}


%Bandits like to ram you twice, making them
%trickier to dodge


@	$BanditA
{
	[MaxHP]		6`b
	[Coins]		4`b
	[Level]         11`b
}

@	$BanditB
{
	[MaxHP]		6`b
	[Coins]		5`b
	[Level]         12`b
}


%Have a random chance to do a different hurt animation.

@	$Script_HandleEvent_8021DF88
{
    0:  UseArray  $End[0]
    C:  Call  UseIdleAnimation  ( .Actor:Self .False )
   20:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   34:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   48:  Switch  *Var0
   54:  	Case  ==  .Event:HitCombo % 9
   60:  		Exec  $Script_8021D820 *Array[0]
   70:  		SetConst  *Var0  00000001
				SetConst  *Var1  00320015
   90:  		ExecWait  DoNormalHit
   9C:  		Loop
   A8:  			DoesScriptExist  *Array[0] *Var0
   B8:  			If  *Var0  ==  00000000
   C8:  				BreakLoop
   D0:  			EndIf
   D8:  			Wait  1`
   E4:  		EndLoop
   EC:  	CaseOR  ==  .Event:Hit % A
   F8:  	CaseOR  ==  .Event:SpinSmashLaunchHit % 11
  104:  		Exec  $Script_8021D820 *Array[0]
  114:  		SetConst  *Var0  00000001
			    SetConst  *Var1  00320015
  134:  		ExecWait  DoNormalHit
  140:  		Loop
  14C:  			DoesScriptExist  *Array[0] *Var0
  15C:  			If  *Var0  ==  00000000
  16C:  				BreakLoop
  174:  			EndIf
  17C:  			Wait  1`
  188:  		EndLoop
  190:  	EndCaseGroup
  198:  	Case  ==  .Event:BurnHit % E
  1A4:  		Exec  $Script_8021D820 *Array[0]
  1B4:  		SetConst  *Var0  00000001
  1C4:  		SetConst  *Var1  0032000A
  1D4:  		SetConst  *Var2  0032000B
  1E4:  		ExecWait  DoBurnHit
  1F0:  		Loop
  1FC:  			DoesScriptExist  *Array[0] *Var0
  20C:  			If  *Var0  ==  00000000
  21C:  				BreakLoop
  224:  			EndIf
  22C:  			Wait  1`
  238:  		EndLoop
  240:  	Case  ==  .Event:BurnDeath % 24
  24C:  		Exec  $Script_8021D820 *Array[0]
  25C:  		SetConst  *Var0  00000001
  26C:  		SetConst  *Var1  0032000A
  27C:  		SetConst  *Var2  0032000B
  28C:  		ExecWait  DoBurnHit
  298:  		SetConst  *Var0  00000001
  2A8:  		SetConst  *Var1  0032000B
  2B8:  		ExecWait  DoDeath
  2C4:  		Loop
  2D0:  			DoesScriptExist  *Array[0] *Var0
  2E0:  			If  *Var0  ==  00000000
  2F0:  				BreakLoop
  2F8:  			EndIf
  300:  			Wait  1`
  30C:  		EndLoop
  314:  		Return
  31C:  	Case  ==  .Event:SpinSmashHit % B
  328:  		Exec  $Script_8021D820 *Array[0]
  338:  		SetConst  *Var0  00000001
				SetConst  *Var1  00320015
  358:  		ExecWait  DoSpinSmashHit
  364:  		Loop
  370:  			DoesScriptExist  *Array[0] *Var0
  380:  			If  *Var0  ==  00000000
  390:  				BreakLoop
  398:  			EndIf
  3A0:  			Wait  1`
  3AC:  		EndLoop
  3B4:  	Case  ==  .Event:SpinSmashDeath % 21
  3C0:  		Exec  $Script_8021D820 *Array[0]
  3D0:  		SetConst  *Var0  00000001
  3E0:  		SetConst  *Var1  00320009
  3F0:  		ExecWait  DoSpinSmashHit
  3FC:  		SetConst  *Var0  00000001
  40C:  		SetConst  *Var1  00320009
  41C:  		ExecWait  DoDeath
  428:  		Loop
  434:  			DoesScriptExist  *Array[0] *Var0
  444:  			If  *Var0  ==  00000000
  454:  				BreakLoop
  45C:  			EndIf
  464:  			Wait  1`
  470:  		EndLoop
  478:  		Return
  480:  	Case  ==  .Event:ShockHit % 2F
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00320015
  4AC:  		ExecWait  DoShockHit
  4B8:  		SetConst  *Var0  00000001
  4C8:  		SetConst  *Var1  00320015
  4D8:  		ExecWait  DoJumpBack
  4E4:  		SetConst  *Var0  00000001
  4F4:  		SetConst  *Var1  00320007
  504:  		ExecWait  DoReturnHome
  510:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  524:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  544:  	Case  ==  .Event:ShockDeath % 26
  550:  		SetConst  *Var0  00000001
  560:  		SetConst  *Var1  00320009
  570:  		ExecWait  DoShockHit
  57C:  		SetConst  *Var0  00000001
  58C:  		SetConst  *Var1  00320009
  59C:  		ExecWait  DoDeath
  5A8:  		Return
  5B0:  	CaseOR  ==  00000017 % 17
  5BC:  	CaseOR  ==  .Event:Immune % 19
  5C8:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  5D4:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  5EC:  		Switch  *Var0
  5F8:  			Case  ==  00000000
  604:  				SetConst  *Var1  00320001
  614:  			Case  ==  00000001
  620:  				SetConst  *Var1  00320002
  630:  		EndSwitch
  638:  		SetConst  *Var0  00000001
  648:  		ExecWait  DoImmune
  654:  	EndCaseGroup
  65C:  	CaseOR  ==  .Event:Death % 20
  668:  	CaseOR  ==  00000025 % 25
  674:  		Exec  $Script_8021D820 *Array[0]
  684:  		SetConst  *Var0  00000001
  694:  		SetConst  *Var1  00320009
  6A4:  		ExecWait  DoNormalHit
  6B0:  		Wait  10`
  6BC:  		SetConst  *Var0  00000001
  6CC:  		SetConst  *Var1  00320009
  6DC:  		ExecWait  DoDeath
  6E8:  		Loop
  6F4:  			DoesScriptExist  *Array[0] *Var0
  704:  			If  *Var0  ==  00000000
  714:  				BreakLoop
  71C:  			EndIf
  724:  			Wait  1`
  730:  		EndLoop
  738:  		Return
  740:  	EndCaseGroup
  748:  	Case  ==  .Event:RecoverStatus % 31
  754:  		SetConst  *Var0  00000001
  764:  		SetConst  *Var1  00320001
  774:  		ExecWait  DoRecover
  780:  	Case  ==  .Event:ScareAway % 39
  78C:  		Exec  $Script_8021D820 *Array[0]
  79C:  		SetConst  *Var0  00000001
  7AC:  		SetConst  *Var1  00320007
  7BC:  		SetConst  *Var2  00320009
  7CC:  		ExecWait  DoScareAway
  7D8:  		Loop
  7E4:  			DoesScriptExist  *Array[0] *Var0
  7F4:  			If  *Var0  ==  00000000
  804:  				BreakLoop
  80C:  			EndIf
  814:  			Wait  1`
  820:  		EndLoop
  828:  		Return
  830:  	Case  ==  .Event:BeginAirLift % 3A
  83C:  		Exec  $Script_8021D820 *Array[0]
  84C:  		SetConst  *Var0  00000001
  85C:  		SetConst  *Var1  00320009
  86C:  		ExecWait  DoAirLift
  878:  		Loop
  884:  			DoesScriptExist  *Array[0] *Var0
  894:  			If  *Var0  ==  00000000
  8A4:  				BreakLoop
  8AC:  			EndIf
  8B4:  			Wait  1`
  8C0:  		EndLoop
  8C8:  	Case  ==  .Event:BlowAway % 16
  8D4:  		SetConst  *Var0  00000001
  8E4:  		SetConst  *Var1  00320015
  8F4:  		SetConst  *Var2  00040000
  904:  		ExecWait  DoBlowAway
  910:  		Return
  918:  	Default
  920:  EndSwitch
  928:  Call  SetAnimation      ( .Actor:Self 00000001 00320001 )
  940:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  954:  Call  UseIdleAnimation  ( .Actor:Self .True )
  968:  Return
  970:  End
}

@	$Script_TakeTurn_8021E900
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
   54:  If  *Var0  ==  00000001
   64:  	Call  SetActorYaw   ( .Actor:Self  180` )
   78:  	Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
   90:  	Wait  10`
   9C:  	Call  SetActorSpeed ( .Actor:Self *Fixed[20.0] )
   B0:  	Call  SetGoalPos    ( .Actor:Self  300`  0`  0` )
   CC:  	Call  RunToGoal     ( .Actor:Self  0` .False )
   E4:  	Call  SetBattleFlagBits ( 00040000 .True )
   F8:  	Call  8027D32C      ( FFFFFF81 )
  108:  	Call  RemoveActor   ( .Actor:Self )
  118:  	Return
  120:  EndIf
  128:  Call  UseBattleCamPreset    ( 0000003F )
  138:  Call  BattleCamTargetActor  ( .Actor:Self )
  148:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  160:  Call  GetBattlePhase        ( *Var0 )
  170:  If  *Var0  ==  00000001
  180:  	Call  SetGoalToTarget   ( .Actor:Self )
  190:  	Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1AC:  	Add   *Var0  00000032
  1BC:  	Set   *Var1  00000000
  1CC:  	Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1E8:  Else
  1F0:  	Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  208:  	Call  SetGoalToTarget   ( .Actor:Self )
  218:  	Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
  234:  	Call  SetActorSpeed ( .Actor:Self *Fixed[13.0] )
  248:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  260:  	Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  278:  	Wait  3`
  284:  EndIf
  28C:  Call  SetActorSpeed     ( .Actor:Self *Fixed[5.0] )
  2A0:  Call  SetAnimation      ( .Actor:Self 00000001 00320005 )
  2B8:  Call  SetGoalToTarget   ( .Actor:Self )
  2C8:  Call  AddGoalPos        ( .Actor:Self  35`  0`  0` )
  2E4:  Call  RunToGoal ( .Actor:Self  0` .False )
  2FC:  Call  PlaySoundAtActor  ( .Actor:Self 000020C2 )
  310:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  32C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  350:  Switch  *Var0
  35C:  	CaseOR  ==  .HitResult:Miss % 6
  368:  	CaseOR  ==  .HitResult:Lucky % 5
  374:  		Set   *VarA  *Var0
  384:  		Call  SetAnimation  ( .Actor:Self 00000001 0032000D )
  39C:  		Call  SetGoalToTarget       ( .Actor:Self )
  3AC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[20.0] )
  3C0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  3D8:  		Call  ResetAllActorSounds   ( .Actor:Self )
  3E8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
  3FC:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
  410:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  42C:  		Sub   *Var0  0000001E
  43C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  458:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  478:  		Sub   *Var0  00000014
  488:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  4A4:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  4C4:  		Wait  5`
  4D0:  		If  *VarA  ==  .HitResult:Lucky % 5
  4E0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  504:  		EndIf
  50C:  		Wait  3`
  518:  		Call  UseBattleCamPreset    ( 00000002 )
  528:  		Call  YieldTurn ( )
  534:  		Call  SetActorYaw   ( .Actor:Self  180` )
  548:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  57C:  		Call  SetGoalToHome ( .Actor:Self )
  58C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[24.0] )
  5A0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  5B8:  		Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  5D0:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  5E8:  		Call  SetActorYaw   ( .Actor:Self  0` )
  5FC:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  610:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  624:  		Return
  62C:  	EndCaseGroup
  634:  EndSwitch
  63C:  Call  SetAnimation      ( .Actor:Self 00000001 0032000D )
  654:  Call  SetGoalToTarget   ( .Actor:Self )
  664:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  678:  Call  RunToGoal ( .Actor:Self  0` .False )
  690:  Call  ResetAllActorSounds   ( .Actor:Self )
  6A0:  Wait  2`
  6AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000002 00000020 )
  6D4:  Switch  *Var0
  6E0:  	CaseOR  ==  .HitResult:Hit % 0
  6EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6F8:  		Call  GetLastDamage ( .Actor:Player *Var0 )
  70C:  		If  *Var0  <=  00000000
  71C:  			Set   *Var0  00000001
  72C:  			Goto  A
  738:  		EndIf
  740:  		Call  GetBattleFlags    ( *Var0 )
  750:  		If  *Var0  &  80000000
  760:  			Set   *Var0  00000001
  770:  			Goto  A
  77C:  		EndIf
  784:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  798:  		If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  7A8:  			Set   *Var0  00000000
  7B8:  			Goto  A
  7C4:  		EndIf
  7CC:  		Call  GetStatusFlags    ( .Actor:Player *Var0 )
  7E0:  		If  *Var0  &  ~Flags:StatusFlags:Stone % 100000
  7F0:  			Set   *Var0  00000000
  800:  			Goto  A
  80C:  		EndIf
  814:  		Call  AddCoin   ( 00000000 )
  824:  		Switch  *Var0
  830:  			Case  ==  00000000
  83C:  				Set   *Var0  00000001
  84C:  			Case  <  0000000A
  858:  				Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  870:  				Set   *Var0  00000002
  880:  			Case  >=  0000000A
  88C:  				Call  SetActorVar   ( .Actor:Self 00000001 0000000A )
  8A4:  				Set   *Var0  00000002
  8B4:  		EndSwitch
  8BC:  		Label  A
  8C8:  		Switch  *Var0
  8D4:  			Case  ==  00000000
  8E0:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8FC:  				Add   *Var0  0000001E
  90C:  				Set   *Var1  00000000
  91C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  930:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  94C:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  96C:  				Call  SetAnimation  ( .Actor:Self 00000001 00320001 )
  984:  				Wait  10`
  990:  				Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  9A8:  			Case  ==  00000001
  9B4:  				Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  9D0:  				Add   *Var0  0000001E
  9E0:  				Set   *Var1  00000000
  9F0:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  A04:  				Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  A20:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  A40:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
  A58:  				Wait  20`
  A64:  				Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
  A78:  				Call  SetAnimation  ( .Actor:Self 00000001 00320010 )
  A90:  				Wait  10`
  A9C:  				Call  SetAnimation  ( .Actor:Self 00000001 00320007 )
  AB4:  			Default
  ABC:  				Call  SetGoalToTarget   ( .Actor:Self )
  ACC:  				Call  GetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  AE8:  				Add   *VarA  0000001E
  AF8:  				Set   *VarB  00000000
  B08:  				Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  B20:  				Mul   *Var0  FFFFFFFF
  B30:  				Call  AddCoin       ( *Var0 )
  B40:  				Thread
  B48:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .True )
  B64:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  B80:  					Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  B9C:  					Call  SetPartPos        ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  BBC:  					Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[1.0] )
  BD4:  					Add   *VarB  0000001E
  BE4:  					Call  JumpPartTo        ( .Actor:Self 00000002 *VarA *VarB *VarC  22` .True )
  C0C:  					Call  SetPartFlagBits   ( .Actor:Self 00000002 00100000 .False )
  C28:  				EndThread
  C30:  				Thread
  C38:  					Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  C50:  					Loop  *Var0
  C5C:  						Call  PlaySoundAtActor  ( .Actor:Self 00000212 )
  C70:  						Wait  1`
  C7C:  					EndLoop
  C84:  				EndThread
  C8C:  				Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  CA0:  				Call  SetGoalPos    ( .Actor:Self *VarA *VarB *VarC )
  CBC:  				Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  CDC:  				Call  SetIdleAnimations     ( .Actor:Self 00000001 $IdleAnimations_8021D55C )
  CF4:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000E )
  D0C:  				Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  D24:  				Wait  3`
  D30:  				Call  SetAnimation  ( .Actor:Self 00000001 0032000F )
  D48:  				Wait  10`
  D54:  				Call  SetAnimation  ( .Actor:Self 00000001 00320008 )
  D6C:  		EndSwitch
  D74:  		Call  UseBattleCamPreset    ( 00000002 )
  D84:  		Call  YieldTurn ( )
  D90:  		Call  SetGoalToHome ( .Actor:Self )
  DA0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  DB4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  63B: Wait 24`
   63C:  Call  SetAnimation      ( .Actor:Self 00000001 0032000D )
  654:  Call  SetGoalToTarget   ( .Actor:Self )
  664:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  678:  Call  RunToGoal ( .Actor:Self  0` .False )
  690:  Call  ResetAllActorSounds   ( .Actor:Self )
  6A0:  Wait  2`
  6AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000001 00000020 )
  D74:  		Call  UseBattleCamPreset    ( 00000002 )
  D84:  		Call  YieldTurn ( )
  D90:  		Call  SetGoalToHome ( .Actor:Self )
  DA0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  DB4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  DCC:  	EndCaseGroup
  DD4:  EndSwitch
  DDC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  DF0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  E04:  Return
  E0C:  End
}

@	$Formation_00
{
	$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
	$Flubba 00000002 00000009 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_01
{
	$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000009 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_02
{
	$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000008 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_04
{
	$Pokey 00000001 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000009 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_05
{
	$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_07
{
	$Pokey 00000000 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000008 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_09
{
	$BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
	$Flubba 00000002 00000009 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_0A
{
	$BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000009 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_0B
{
	$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000007 00000000 00000000 00000000 00000000
}

@	$Formation_0D
{
	$BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000009 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000008 00000000 00000000 00000000 00000000
}

@	$Formation_0E
{
	$BanditA 00000000 0000000A 00000000 00000000 00000000 00000000
	$BanditA 00000001 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000008 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000007 00000000 00000000 00000000 00000000
}


#new:Formation $Formation_11
{
	$Flubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$Flubba 00000001 00000009 00000000 00000000 00000000 00000000
	$Pokey 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_12
{
	$Flubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$Flubba 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_13
{
	$Flubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$BanditA 00000003 00000007 00000000 00000000 00000000 00000000
}

#new:Formation $Formation_14
{
	$Flubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$Pokey 00000001 00000009 00000000 00000000 00000000 00000000
	$BanditA 00000002 00000008 00000000 00000000 00000000 00000000
	$Pokey 00000003 00000007 00000000 00000000 00000000 00000000
}

@	$FormationTable
{
	$SJIS_80220148 00000003 $Formation_00 $Stage_8021F90C 00000000
	$SJIS_8022013C 00000003 $Formation_01 $Stage_8021F90C 00000000
	$SJIS_80220130 00000004 $Formation_02 $Stage_8021F90C 00000000
	$SJIS_80220120 00000004 $Formation_03 $Stage_8021F90C 00000000
	$SJIS_80220110 00000003 $Formation_04 $Stage_8021F90C 00000000
	$SJIS_802200FC 00000004 $Formation_05 $Stage_8021F90C 00000000
	$SJIS_802200E8 00000004 $Formation_06 $Stage_8021F90C 00000000
	$SJIS_802200D0 00000004 $Formation_07 $Stage_8021F90C 00000000
	$SJIS_802200B4 00000004 $Formation_08 $Stage_8021F90C 00000000
	$SJIS_802200A8 00000003 $Formation_09 $Stage_8021F90C 00000000
	$SJIS_8022009C 00000003 $Formation_0A $Stage_8021F90C 00000000
	$SJIS_80220090 00000004 $Formation_0B $Stage_8021F90C 00000000
	$SJIS_80220084 00000004 $Formation_0C $Stage_8021F90C 00000000
	$SJIS_80220074 00000003 $Formation_0D $Stage_8021F90C 00000000
	$SJIS_80220060 00000004 $Formation_0E $Stage_8021F90C 00000000
	$SJIS_8022004C 00000004 $Formation_0F $Stage_8021F90C 00000000
	$SJIS_80220030 00000003 $Formation_10 $Stage_8021F90C 00000000
	00000000 00000003 $Formation_11 $Stage_8021F90C 00000000
	00000000 00000003 $Formation_12 $Stage_8021F90C 00000000
	00000000 00000004 $Formation_13 $Stage_8021F90C 00000000
	00000000 00000004 $Formation_14 $Stage_8021F90C 00000000
	00000000 00000000 00000000 00000000 00000000
}