#delete $Goomba
#delete $IdleAnimations_8021D254
#delete $IdleAnimations_8021D2A0
#delete $Script_Init_8021D2EC
#delete $Script_Idle_8021D338
#delete $Script_HandleEvent_8021D614
#delete $FloatTable_8021DCD4
#delete $Script_TakeTurn_8021DE40
#delete $IdleAnimations_8021EB10
#delete $DefenseTable_8021EB5C
#delete $StatusTable_8021EB68
#delete $PartsTable_8021EC14
#delete $Clubba
#delete $Script_Init_8021EC60
#delete $Script_Idle_8021ECAC
#delete $Script_HandleEvent_8021ECBC
#delete $Script_TakeTurn_8021F1CC
#delete $DefenseTable_8021F720
#delete $StatusTable_8021F72C
#delete $PartsTable_8021F7D8
#delete $Fuzzy
#delete $IdleAnimations_8021F824
#delete $Script_Init_8021F870
#delete $Script_Idle_8021F8BC
#delete $Script_HandleEvent_8021F8CC
#delete $Script_TakeTurn_8021FF30
#delete $IdleAnimations_80220FD0
#delete $IdleAnimations_8022101C
#delete $DefenseTable_80221028
#delete $StatusTable_80221034
#delete $PartsTable_802210E0
#delete $HammerBros
#delete $Script_Init_802211E0
#delete $Script_Idle_80221244
#delete $Script_HandleEvent_802213A0
#delete $Script_802218B4
#delete $Script_8022212C
#delete $Script_80222378
#delete $Script_80222570
#delete $Script_TakeTurn_80222DCC
#delete $DefenseTable_80222E60
#delete $StatusTable_80222E6C
#delete $PartsTable_80222F18
#delete $Pokey
#delete $IdleAnimations_80223018
#delete $IdleAnimations_80223054
#delete $IdleAnimations_80223090
#delete $IdleAnimations_802230CC
#delete $IdleAnimations_80223108
#delete $Script_Init_80223114
#delete $Script_Idle_80223290
#delete $Script_HandleEvent_802232A0
#delete $Script_80223F98
#delete $Script_80224A94
#delete $Script_TakeTurn_80224BF8
#delete $Script_80225724
#delete $Vector3D_802259E4
#delete $SpecialFormation_802259F0
#delete $Script_80225A0C
#delete $Script_80226170
#delete $Script_80226B30
#delete $Script_80226C5C
#delete $Script_80227154
#delete $Script_80227440
#delete $Script_8022788C
#delete $Script_80227D64
#delete $IdleAnimations_802280F0
#delete $IdleAnimations_8022813C
#delete $IdleAnimations_80228188
#delete $IdleAnimations_802281D4
#delete $DefenseTable_80228220
#delete $DefenseTable_80228234
#delete $DefenseTable_80228240
#delete $StatusTable_80228254
#delete $StatusTable_80228300
#delete $PartsTable_8022839C
#delete $Koopatrol
#delete $Script_Init_802283E8
#delete $Script_NextTurn_80228538
#delete $Script_802285A4
#delete $Script_Idle_8022875C
#delete $IntTable_80228BEC
#delete $Script_HandleEvent_80228C44
#delete $Script_80229E34
#delete $Script_8022AB88
#delete $Script_8022B8AC
#delete $Vector3D_8022BBBC
#delete $SpecialFormation_8022BBC8
#delete $Script_8022BBE4
#delete $Script_8022C204
#delete $Script_TakeTurn_8022C454

#import SuperGoomba.bpat
#import LazyBones.bpat
#import BombshellKoopa.bpat
#import KPA_HammerBros.bpat
#import KPA_Koopatrol.bpat
#import Flubba.bpat

@	$ShyGuy
{
	[Level]        18`b
	[MaxHP]         8`b
}


@	$BigLanternGhost
{
	[Level]        50`b
	[MaxHP]        60`b
}



@	$StatusTable_80218DC8
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      20`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   30`
	.Status:Shrink      0`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -2`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -2`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod      -2`
	.Status:End
}



@	$Script_TakeTurn_8021AF4C
{
    0:  Call  GetActorVar   ( .Actor:Self 0000000C *Var0 )
   18:  If  *Var0  >  00000000
   28:  	Sub   *Var0  00000001
   38:  	Call  SetActorVar   ( .Actor:Self 0000000C *Var0 )
   50:  EndIf
   58:  Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
   70:  Switch  *Var0
   7C:  	Case  ==  00000002
   88:  		Call  GetActorVar   ( .Actor:Self 0000000C *Var0 )
   A0:  		If  *Var0  >  00000000
   B0:  			Call  SetActorVar   ( .Actor:Self 0000000B 00000000 )
   C8:  		EndIf
   D0:  	Case  ==  00000001
   DC:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   F4:  		If  *Var0  <  00000006
  104:  			Call  SetActorVar   ( .Actor:Self 0000000B 00000000 )
  11C:  		EndIf
  124:  EndSwitch
  12C:  Call  GetActorVar   ( .Actor:Self 0000000B *Var0 )
  144:  Switch  *Var0
  150:  	Case  ==  00000002
  15C:  		ExecWait  $Script_8021A3E4 %Shine attack
  168:  	Case  ==  00000001
  174:  		ExecWait  $Script_8021AB14 %Blow Out Light
  175:			ExecWait  $Script_80219C00 %Stomp Attack
  180:  	Default
  188:  		ExecWait  $Script_80219C00 %Stomp Attack
  194:  EndSwitch
  19C:  Return
  1A4:  End
}


%Stomp attack is much faster

@	$Script_80219C00
{
  [11C]  Call  SetActorSpeed     ( .Actor:Self *Fixed[9.0] )
  [194]  Wait  4`
  [224]  			Wait  4`
  [250]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  [324]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  [4B0]  	Wait  3`
  [4DC]  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  [53C]  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000007 00000020 )
  [620]  			Wait  2`
  [688]  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  [764]  		Wait  4`
}


%After the shine attack, Big Lantern Ghost
%will become electrified.
%Borrowed from Y Magikoopa script.

#new:Script $Script_Electrify
{
	0:  Wait 10`
   28:  Call  SetActorVar       ( .Actor:Self 00000007 *Var0 )
   40:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  100:  	Call  UseBattleCamPreset    ( 00000013 )
  110:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  	Sub   *Var0  00000006 
  13C:  	Add   *Var1  00000027 
  14C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  164:  	Call  SetBattleCamZoom      (  294` )
  174:  	Call  SetBattleCamOffsetZ   (  0` )
  184:  	Call  MoveBattleCamOver     (  40` )
  19C:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  32C:  Call  PlaySoundAtActor  ( .Actor:Self 000002F0 )
  19D: 	If       *Var3 !&  00080000
  19E: 		Add      *Var[1] 00000010
  19F:	Else
  1A0:		Add      *Var[1] 00000006
  1A1:	EndIf
  1F8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  214:  	Add   *Var0  00000016 
  224:  	Add   *Var1  00000087 
  234:  	Sub   *Var2  00000003 
  3D4:  	Call  PlayEffect    ( ~FX:SnakingStatic *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  654:  Wait  5`
  1C0:  Call  PlaySoundAtActor  ( .Actor:Self 000003D2 )
  6D4:  Thread
  6DC:  	Call  8026BF48  ( 00000001 )
  6EC:  	Call  ElectrifyActor ( .Actor:Self 00000002 )
  700:  	Call  8026BF48  ( 00000000 )
  710:  EndThread
  718:  Call  WaitForBuffDone ( )
  724:  Call  UseBattleCamPreset    ( 00000002 )
  734:  Wait  5`
  740:  Return
  748:  End
}


%The shine attack is faster and electrifies
%Big Lantern Ghost after he finishes.

@	$Script_8021A3E4
{
    0:  Call  SetActorVar       ( .Actor:Self 0000000B 00000000 )
   18:  Call  SetActorVar       ( .Actor:Self 0000000C 00000003 )
   30:  Call  UseIdleAnimation  ( .Actor:Self .False )
   44:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   58:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   6C:  Call  UseBattleCamPreset    ( 0000000D )
   7C:  Call  SetBattleCamZoom  (  240` )
   8C:  Call  BattleCamTargetActor  ( .Actor:Self )
   9C:  Call  MoveBattleCamOver (  20` )
   AC:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   C4:  Call  SetGoalToTarget   ( .Actor:Self )
   D4:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   F0:  Add   *Var0  00000050
  100:  Set   *Var1  00000000
  110:  Call  SetActorSpeed     ( .Actor:Self *Fixed[6.0] )
  124:  Call  SetAnimation      ( .Actor:Self 00000001 006D0006 )
  13C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  158:  Call  RunToGoal ( .Actor:Self  0` .False )
  170:  Call  SetAnimation      ( .Actor:Self 00000001 006D0001 )
  188:  Wait  20`
  194:  Call  UseBattleCamPreset    ( 00000005 )
  1A4:  Call  SetBattleCamZoom  (  350` )
  1B4:  Call  SetBattleCamOffsetZ   (  35` )
  1C4:  Call  BattleCamTargetActor  ( .Actor:Self )
  1D4:  Call  MoveBattleCamOver (  8` )
  1E4:  Call  PlaySoundAtActor  ( .Actor:Self 000002EB )
  1F8:  Call  SetAnimation      ( .Actor:Self 00000001 006D000F )
  210:  Call  GetActorVar       ( .Actor:Self 00000000 *Var5 )
  228:  Call  SetActorVar       ( .Actor:Self 00000000 0000000B )
  240:  Call  GetActorVar       ( .Actor:Self 00000002 *Var0 )
  258:  Call  GetActorVar       ( .Actor:Self 00000003 *Var1 )
  270:  Call  GetActorVar       ( .Actor:Self 00000004 *Var2 )
  288:  Add   *Var1  0000000A
  298:  Add   *Var2  00000002
  2A8:  Thread
  2B0:  	Wait  1`
  2BC:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 *Var1 *Var2 *Fixed[1.0] *VarB 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  300:  	Wait  30`
  30C:  	Call  RemoveEffect  ( *VarB )
  31C:  EndThread
  324:  Thread
  32C:  	Wait  1`
  338:  	Call  PlayEffect    ( 0000004F 00000001 *Var0 *Var1 *Var2 *Fixed[1.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndThread
  384:  Wait  3`
  390:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  3B4:  Switch  *VarA
  3C0:  	CaseOR  ==  .HitResult:Miss % 6
  3CC:  	CaseOR  ==  .HitResult:Lucky % 5
  3D8:  		If  *VarA  ==  .HitResult:Lucky % 5
  3E8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  40C:  		EndIf
  414:  		Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  428:  		Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  44C:  		Switch  *VarA
  458:  			Case  ==  .HitResult:Miss % 6
  464:  			Default
  46C:  				Call  ActorExists   ( .Actor:Partner *Var0 )
  480:  				If  *Var0  ==  .True
  490:  					Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  4A4:  					Call  SetGoalToTarget   ( .Actor:Self )
  4B4:  					Call  EnemyDamageTarget ( .Actor:Self *VarD ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
  4DC:  				EndIf
  4E4:  		EndSwitch
  4EC:  	EndCaseGroup
  4F4:  	Default
  4FC:  		Wait  2`
  508:  		Call  SetGoalToTarget   ( .Actor:Self )
  518:  		Call  EnemyDamageTarget ( .Actor:Self *VarE ~Flags:DamageType:NoOtherDamagePopups 0000FFFF 00000000 00000002 00000020 )
  540:  		Wait  2`
  54C:  		Call  ActorExists       ( .Actor:Partner *Var0 )
  560:  		If  *Var0  ==  .True
  570:  			Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
  584:  			Call  SetGoalToTarget   ( .Actor:Self )
  594:  			Call  EnemyDamageTarget ( .Actor:Self *VarD ~Flags:DamageType:NoOtherDamagePopups 0000FFFF 00000000 00000002 00000020 )
  5BC:  		EndIf
  5C4:  EndSwitch
  5CC:  Wait  15`
  5D8:  Call  SetActorVar   ( .Actor:Self 00000000 *Var5 )
  5F0:  Thread
  5F8:  	Call  GetActorVar   ( .Actor:Self 0000000D *Var0 )
  610:  	Wait  3`
  61C:  	Switch  *Var0
  628:  		Case  ==  00000000
  634:  			Call  PlaySoundAtActor  ( .Actor:Self 000003AA )
  648:  		Case  ==  00000001
  654:  			Call  PlaySoundAtActor  ( .Actor:Self 000003A9 )
  668:  		Case  ==  00000002
  674:  			Call  PlaySoundAtActor  ( .Actor:Self 000003A8 )
  688:  		Case  ==  00000003
  694:  			Call  PlaySoundAtActor  ( .Actor:Self 000003A7 )
  6A8:  	EndSwitch
  6B0:  EndThread
  6B8:  Call  SetAnimation      ( .Actor:Self 00000001 006D0014 )
  6D0:  Wait  20`
  6DC:  Call  UseBattleCamPreset    ( 00000002 )
  6EC:  ExecWait  $Script_8021B0F8
  6ED:  Wait 1`
  6EF:  ExecWait  $Script_Electrify
  6F8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  70C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  720:  Return
  728:  End
}

%1 Goomba, now replaced with 3 Super Goombas.
@	$Formation_01
{
	$SuperGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$SuperGoomba 00000002 00000009 00000000 00000000 00000000 00000000
	$SuperGoomba 00000003 00000008 00000000 00000000 00000000 00000000
}

%Unused formation, but I'm gonna edit it so Star Rod doesn't get mad about missing actors.
@ $Formation_02
{
	$SuperGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$SuperGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

%2 Clubbas, now replaced with 4 Flubbas.
@ $Formation_03
{
	$Flubba 00000000 0000000A 00000000 00000000 00000000 00000000
	$Flubba 00000001 00000009 00000000 00000000 00000000 00000000
	$Flubba 00000002 00000008 00000000 00000000 00000000 00000000
	$Flubba 00000003 00000007 00000000 00000000 00000000 00000000
}

%Unused formation, but I'm gonna edit it so Star Rod doesn't get mad about missing actors.
@ $Formation_04
{
	$SuperGoomba 00000001 0000000A 00000000 00000000 00000000 00000000
	$SuperGoomba 00000002 00000009 00000000 00000000 00000000 00000000
}

%2 Pokeys, now replaced with 3 Lazy Bones.
@ $Formation_08
{
	$BombshellKoopa 00000000 0000000A 00000000 00000000 00000000 00000000
	$BombshellKoopa 00000001 00000009 00000000 00000000 00000000 00000000
	$BombshellKoopa 00000002 00000008 00000000 00000000 00000000 00000000
	$BombshellKoopa 00000003 00000007 00000000 00000000 00000000 00000000
}

%Unused formation, but I'm gonna edit it so Star Rod doesn't get mad about missing actors.
@ $Formation_06
{
	$KPA_HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000
	$KPA_HammerBros 00000002 00000009 00000000 00000000 00000000 00000000
}

@ $Formation_07
{
	$KPA_HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000
	$KPA_HammerBros 00000002 00000009 00000000 00000000 00000000 00000000
}

%4 Fuzzies, now replaced with 4 Bombshell Koopas.
@ $Formation_05
{
	$LazyBones 00000001 0000000A 00000000 00000000 00000000 00000000
	$LazyBones 00000002 00000009 00000000 00000000 00000000 00000000
	$LazyBones 00000003 00000008 00000000 00000000 00000000 00000000
}

@ $Formation_09
{
	$KPA_Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000
	$KPA_Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000
}

@ $Formation_0A
{
	$ShyGuy 00000001 0000000A 00000000 00000000 00000000 00000000
	$ShyGuy 00000002 00000009 00000000 00000000 00000000 00000000
	$ShyGuy 00000003 00000008 00000000 00000000 00000000 00000000
}

@	$FormationTable
{
	$SJIS_8022EE60 00000001 $Formation_00 $Stage_8021B4A0 00000000
	$SJIS_8022EE48 00000003 $Formation_01 $Stage_8021B62C 00000000
	$SJIS_8022EE2C 00000002 $Formation_02 $Stage_8021B62C 00000000
	$SJIS_8022EE10 00000004 $Formation_03 $Stage_8021B62C 00000000
	$SJIS_8022EDF4 00000002 $Formation_04 $Stage_8021B62C 00000000
	$SJIS_8022EDD8 00000003 $Formation_05 $Stage_8021B62C 00000000
	$SJIS_8022EDB8 00000002 $Formation_06 $Stage_8021B62C 00000000
	$SJIS_8022ED98 00000002 $Formation_07 $Stage_8021B62C 00000000
	$SJIS_8022ED80 00000004 $Formation_08 $Stage_8021B62C 00000000
	$SJIS_8022ED64 00000002 $Formation_09 $Stage_8021B62C 00000000
	$SJIS_8022ED58 00000003 $Formation_0A $Stage_8021B398 00000000
	00000000 00000000 00000000 00000000 00000000
}