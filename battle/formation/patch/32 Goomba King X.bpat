% Script File: 01 Area KMR Part 2.bscr
% Decoded from: 439A90 to 447440 (01 Area KMR Part 2)


%Changed kmr_bt06 to kmr_bt07 for new battle background.


#new:DefenseTable $DefenseTable_BlueGoomba
{
	.Element:Normal 00000001
	.Element:End
}

#new:StatusTable $StatusTable_BlueGoomba
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   50`
	.Status:Shrink     50`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod    -2`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -2`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -2`
	.Status:ShrinkTurnMod    -2`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_8021D4B8
{
	00800000 01000000 001800FF $IdleAnimations_8021D504 $DefenseTable_BlueGoomba 00000000 00000000 00FD0000 00000000
}

#new:Actor $BlueGoomba2
{
	% stats
	[Index]        DCb
	[Level]         0`b
	[MaxHP]        70`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_BlueGoomba
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021D4B8
	[Script]      $Script_Init_8021EDB8
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  50`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]    8`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021D504
{
	.Status:Normal    00620A02
	.Status:Stone     00620A00
	.Status:Sleep     00620A0D
	.Status:Poison    00620A02
	.Status:Stop      00620A00
	.Status:Static    00620A02
	.Status:Paralyze  00620A00
	.Status:Dizzy     00620A0C
	.Status:Fear      00620A0C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021D550
{
	.Status:Normal    00620A06
	.Status:Stone     00620A00
	.Status:Sleep     00620A0D
	.Status:Poison    00620A02
	.Status:Stop      00620A00
	.Status:Static    00620A06
	.Status:Paralyze  00620A00
	.Status:Dizzy     00620A0C
	.Status:Fear      00620A0C
	.Status:End
}

#new:Script $Script_8021D59C
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_BlueGoomba )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021D5E8 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021D8C4 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021D5E8
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D550 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D504 )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D550 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021D504 )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_8021D8C4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00620A09
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  00620A0E
   DC:  		SetConst  *Var2  00620A0F
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  00620A0E
  124:  		SetConst  *Var2  00620A0F
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  00620A0F
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00620A09
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00620A09
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00620A09
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  00620A09
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00620A09
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 00620A0C )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00620A02 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  00620A09
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00620A09
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00620A02
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00620A09
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00620A09
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00620A06 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00620A02
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00620A06
  5C4:  		SetConst  *Var2  00620A09
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00620A06
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00620A09
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 00620A02 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}


#new:Script $Script_TakeTurn_BlueGoomba
{
	ExecWait $Script_BlueGoombaHeadbonk
	If  *GB_EnemyDefense  == 00000001
			ExecWait $Script_BlueGoombaBuff
	EndIf
	Set   *GB_EnemyDefense  00000001
	Return
	End
}

#new:Script $Script_BlueGoombaHeadbonk
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00620A06 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00620A02 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  1`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00620A08 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_8021868C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00620A08 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 00620A0D )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00620A09 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00620A08 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00620A08 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 00620A0C )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[18.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  1`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00620A02 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_8021868C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00620A08 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 00620A08 )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000B 00000020 )
  9D4:  Switch  *Var0
  9E0:  	CaseOR  ==  .HitResult:Hit % 0
  9EC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00620A02 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00620A02 )
  BE4:  		Wait  1`
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00620A06 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C80:  	EndCaseGroup
  C88:  EndSwitch
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}


#new:Script $Script_BlueGoombaBuff
{
   10:  Label  A
   1C:  Call  EnemyCreateTargetList ( 00008002 )
   2C:  Call  InitTargetIterator ( )
   38:  Label  0
   44:  Call  GetOwnerTarget    ( *Var0 *Var1 )
   58:  Call  GetIndexFromHome  ( *Var0 *Var1 )
   6C:  Call  GetBattleVar      ( 00000002 *Var2 )
  120:  Call  ChooseNextTarget  ( .Iter:Next *Var0 )
  134:  If  *Var0  !=  FFFFFFFF 
  144:  	Goto  0
  150:  EndIf
  1A0:  Call  CountPlayerTargets    ( .Actor:Self 00008002 *Var0 )
  1B8:  If  *Var0  ==  00000001 
  1C8:  	ExecWait  $Script_BlueGoombaHeadbonk
  1D4:  	Return
  1DC:  EndIf
  1F0:  Return
  1F8:  Label  64
  204:  Call  SetActorVar       ( .Actor:Self 0000000A 00000000 )
  21C:  Call  SetActorVar       ( .Actor:Self 0000000B 00000005 )
  234:  Call  AddActorVar       ( .Actor:Self 00000006 00000001 )
  24C:  Call  UseIdleAnimation  ( .Actor:Self .False )
  260:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  274:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  288:  Call  UseBattleCamPreset    ( 0000000E )
  298:  Call  BattleCamTargetActor  ( .Actor:Self )
  2A8:  Call  MoveBattleCamOver (  15` )
  2B8:  Wait  15`
  2E8:  	Call  SetAnimation  ( .Actor:Self 00000001 00620A0A )
  328:  Wait  5`
  334:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
  348:  Call  GetActorFlags     ( .Actor:Self *Var0 )
  35C:  If  *Var0  !&  00000200 
  36C:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  388:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  39C:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  3AC:  		Sub   *Var0  00000006 
  3BC:  		Add   *Var1  0000000C 
  3CC:  		Sub   *Var2  00000002 
  3DC:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  	Else
  428:  		Sub   *Var0  00000010 
  438:  		Add   *Var1  0000001F 
  448:  		Sub   *Var2  00000002 
  458:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  49C:  	EndIf
  4A4:  Else
  4AC:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4C8:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  4DC:  	If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
  4EC:  		Sub   *Var0  0000000C 
  4FC:  		Add   *Var1  0000000E 
  50C:  		Sub   *Var2  00000002 
  51C:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.12] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  560:  	Else
  568:  		Sub   *Var0  0000001E 
  578:  		Add   *Var1  00000024 
  588:  		Sub   *Var2  00000002 
  598:  		Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 *Var1 *Var2 *Fixed[0.3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5DC:  	EndIf
  5E4:  EndIf
  5EC:  Wait  30`
  5F8:  Call  SetAnimation  ( .Actor:Self 00000001 00620A0D )
  65C:  Wait  5`
  668:  Thread
  670:  	Wait  10`
  67C:  	Call  PlaySoundAtActor  ( *Var8 000002DD )
  690:  EndThread
  698:  Thread
  6A0:  	Call  8026BF48      ( 00000001 )
  6B0:  	Call  BoostDefense  ( *Var8 00000002 )
  6C4:  	Call  8026BF48      ( 00000000 )
  6D4:  EndThread
  6DC:  Call  WaitForBuffDone ( )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Wait  10`
  704:  Call  YieldTurn ( )
  710:  Call  EnableIdleScript      ( .Actor:Self 00000001 )
  724:  Call  UseIdleAnimation      ( .Actor:Self .True )
		Return
		End
}


#new:Script $Script_Init_8021EDB8
{
    0:  ExecWait  $Script_8021D59C
   20:  Call  $Function_80218780 ( )
		Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
		Set   *GB_EnemyDefense  00000000
   2C:  Return
   34:  End
}

#new:DefenseTable $DefenseTable_RedGoomba
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8021EE0C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      50`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      50`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   50`
	.Status:Shrink     50`
	.Status:Stop       50`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -2`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -2`
	.Status:ShrinkTurnMod    -2`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_8021EEB8
{
	00800000 01000000 001800FF $IdleAnimations_8021EF04 $DefenseTable_RedGoomba 00000000 00000000 00FD0000 00000000
}

#new:Actor $RedGoomba2
{
	% stats
	[Index]        DDb
	[Level]         0`b
	[MaxHP]        80`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8021EE0C
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_8021EEB8
	[Script]      $Script_Init_802207B8
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  50`b
	[SpinSmash]     0`b % weight (0-4)
	% ui positions
	[Size]         32`b  32`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]    8`b  25`b % dx dy
}

#new:IdleAnimations $IdleAnimations_8021EF04
{
	.Status:Normal    00620902
	.Status:Stone     00620900
	.Status:Sleep     0062090D
	.Status:Poison    00620902
	.Status:Stop      00620900
	.Status:Static    00620902
	.Status:Paralyze  00620900
	.Status:Dizzy     0062090C
	.Status:Fear      0062090C
	.Status:End
}

#new:IdleAnimations $IdleAnimations_8021EF50
{
	.Status:Normal    00620906
	.Status:Stone     00620900
	.Status:Sleep     0062090D
	.Status:Poison    00620902
	.Status:Stop      00620900
	.Status:Static    00620906
	.Status:Paralyze  00620900
	.Status:Dizzy     0062090C
	.Status:Fear      0062090C
	.Status:End
}

#new:Script $Script_8021EF9C
{
    0:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_RedGoomba )
   14:  Call  BindIdle  ( .Actor:Self $Script_Idle_8021EFE8 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8021F2C4 )
   3C:  Return
   44:  End
}

#new:Script $Script_Idle_8021EFE8
{
    0:  Label  A
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Loop  *Var0
   3C:  	Label  0
   48:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
   5C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  		Wait  1`
   78:  		Goto  0
   84:  	EndIf
   8C:  	Wait  1`
   98:  EndLoop
   A0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   BC:  Add   *Var0  00000005
   CC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   E0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021EF50 )
   F8:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  114:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  128:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021EF04 )
  140:  Loop  00000014
  14C:  	Label  1
  158:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  16C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  17C:  		Wait  1`
  188:  		Goto  1
  194:  	EndIf
  19C:  	Wait  1`
  1A8:  EndLoop
  1B0:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  1CC:  Sub   *Var0  00000005
  1DC:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1F0:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021EF50 )
  208:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  224:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  238:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8021EF04 )
  250:  Loop  00000050
  25C:  	Label  2
  268:  	Call  GetStatusFlags    ( .Actor:Self *Var1 )
  27C:  	If  *Var1  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  28C:  		Wait  1`
  298:  		Goto  2
  2A4:  	EndIf
  2AC:  	Wait  1`
  2B8:  EndLoop
  2C0:  Goto  A
  2CC:  Return
  2D4:  End
}

#new:Script $Script_HandleEvent_8021F2C4
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	CaseOR  ==  .Event:HitCombo % 9
   70:  	CaseOR  ==  .Event:Hit % A
   7C:  		SetConst  *Var0  00000001
   8C:  		SetConst  *Var1  00620909
   9C:  		ExecWait  DoNormalHit
   A8:  	EndCaseGroup
   B0:  	Case  ==  .Event:BurnHit % E
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  0062090E
   DC:  		SetConst  *Var2  0062090F
   EC:  		ExecWait  DoBurnHit
   F8:  	Case  ==  .Event:BurnDeath % 24
  104:  		SetConst  *Var0  00000001
  114:  		SetConst  *Var1  0062090E
  124:  		SetConst  *Var2  0062090F
  134:  		ExecWait  DoBurnHit
  140:  		SetConst  *Var0  00000001
  150:  		SetConst  *Var1  0062090F
  160:  		ExecWait  DoDeath
  16C:  		Return
  174:  	Case  ==  .Event:SpinSmashHit % B
  180:  		SetConst  *Var0  00000001
  190:  		SetConst  *Var1  00620909
  1A0:  		ExecWait  DoSpinSmashHit
  1AC:  	Case  ==  .Event:SpinSmashDeath % 21
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00620909
  1D8:  		ExecWait  DoSpinSmashHit
  1E4:  		SetConst  *Var0  00000001
  1F4:  		SetConst  *Var1  00620909
  204:  		ExecWait  DoDeath
  210:  		Return
  218:  	Case  ==  .Event:ShockHit % 2F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  00620909
  244:  		ExecWait  DoShockHit
  250:  		SetConst  *Var0  00000001
  260:  		SetConst  *Var1  00620909
  270:  		ExecWait  DoJumpBack
  27C:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  29C:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  2B4:  		Call  SetAnimation  ( .Actor:Self 00000001 0062090C )
  2CC:  		Call  SetGoalToHome ( .Actor:Self )
  2DC:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  2F0:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  308:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  320:  		Wait  5`
  32C:  		Call  SetAnimation  ( .Actor:Self 00000001 00620902 )
  344:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  358:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  378:  	Case  ==  .Event:ShockDeath % 26
  384:  		SetConst  *Var0  00000001
  394:  		SetConst  *Var1  00620909
  3A4:  		ExecWait  DoShockHit
  3B0:  		SetConst  *Var0  00000001
  3C0:  		SetConst  *Var1  00620909
  3D0:  		ExecWait  DoDeath
  3DC:  		Return
  3E4:  	Case  ==  .Event:StarBeam % 13
  3F0:  	CaseOR  ==  00000017 % 17
  3FC:  	CaseOR  ==  .Event:Immune % 19
  408:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00620902
  434:  		ExecWait  DoImmune
  440:  	EndCaseGroup
  448:  	Case  ==  .Event:Death % 20
  454:  		SetConst  *Var0  00000001
  464:  		SetConst  *Var1  00620909
  474:  		ExecWait  DoNormalHit
  480:  		Wait  10`
  48C:  		SetConst  *Var0  00000001
  49C:  		SetConst  *Var1  00620909
  4AC:  		ExecWait  DoDeath
  4B8:  		Return
  4C0:  	Case  ==  .Event:EndFirstStrike % 35
  4CC:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  4E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00620906 )
  4FC:  		Call  SetGoalToHome ( .Actor:Self )
  50C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  520:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  538:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  550:  		Call  HPBarToHome   ( .Actor:Self )
  560:  	Case  ==  .Event:RecoverStatus % 31
  56C:  		SetConst  *Var0  00000001
  57C:  		SetConst  *Var1  00620902
  58C:  		ExecWait  DoRecover
  598:  	Case  ==  .Event:ScareAway % 39
  5A4:  		SetConst  *Var0  00000001
  5B4:  		SetConst  *Var1  00620906
  5C4:  		SetConst  *Var2  00620909
  5D4:  		ExecWait  DoScareAway
  5E0:  		Return
  5E8:  	Case  ==  .Event:BeginAirLift % 3A
  5F4:  		SetConst  *Var0  00000001
  604:  		SetConst  *Var1  00620906
  614:  		ExecWait  DoAirLift
  620:  	Case  ==  .Event:BlowAway % 16
  62C:  		SetConst  *Var0  00000001
  63C:  		SetConst  *Var1  00620909
  64C:  		ExecWait  DoBlowAway
  658:  		Return
  660:  	Default
  668:  EndSwitch
  670:  Call  SetAnimation      ( .Actor:Self 00000001 00620902 )
  688:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  69C:  Call  UseIdleAnimation  ( .Actor:Self .True )
  6B0:  Return
  6B8:  End
}

#new:Script $Script_TakeTurn_RedGoomba
{
    ExecWait $Script_RedGoombaHeadbonk
	Return
	End
}

%Red Goomba's headbonk hits twice.

#new:Script $Script_RedGoombaHeadbonk
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  UseBattleCamPreset    ( 0000003F )
   4C:  Call  BattleCamTargetActor  ( .Actor:Self )
   5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   74:  Call  SetAnimation      ( .Actor:Self 00000001 00620906 )
   8C:  Call  SetGoalToTarget   ( .Actor:Self )
   9C:  Call  AddGoalPos        ( .Actor:Self  50`  0`  0` )
   B8:  Call  SetActorSpeed     ( .Actor:Self *Fixed[14.0] )
   CC:  Call  RunToGoal ( .Actor:Self  0` .False )
   E4:  Call  SetAnimation      ( .Actor:Self 00000001 00620902 )
   FC:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFF 00000000 )
  118:  Wait  1`
  124:  Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  140:  Wait  1`
  14C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  168:  Call  SetAnimation      ( .Actor:Self 00000001 00620908 )
  180:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1A4:  Switch  *Var0
  1B0:  	CaseOR  ==  .HitResult:Miss % 6
  1BC:  	CaseOR  ==  .HitResult:Lucky % 5
  1C8:  		Set   *VarA  *Var0
  1D8:  		Call  SetGoalToTarget   ( .Actor:Self )
  1E8:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  		Sub   *Var0  0000000A
  214:  		Set   *Var1  0000000A
  224:  		Add   *Var2  00000003
  234:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  250:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
  264:  		Thread
  26C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  288:  			Set   *Var0  00000000
  298:  			Loop  00000010
  2A4:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  2C0:  				Call  $Function_8021893C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  2E0:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  2FC:  				Set   *Var1  *Var4
  30C:  				Set   *Var2  *Var5
  31C:  				Set   *Var3  *Var6
  32C:  				Wait  1`
  338:  			EndLoop
  340:  		EndThread
  348:  		Thread
  350:  			Wait  6`
  35C:  			Call  SetAnimation  ( .Actor:Self 00000001 00620908 )
  374:  		EndThread
  37C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  39C:  		Call  SetAnimation  ( .Actor:Self 00000001 0062090D )
  3B4:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  3D0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000005 00000000 )
  3EC:  		Wait  1`
  3F8:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  414:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 FFFFFFFE 00000000 )
  430:  		Wait  1`
  43C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  458:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000007 00000000 )
  474:  		Call  SetAnimation  ( .Actor:Self 00000001 00620909 )
  48C:  		Wait  5`
  498:  		If  *VarA  ==  .HitResult:Lucky % 5
  4A8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  4CC:  		EndIf
  4D4:  		Wait  5`
  4E0:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  4FC:  		Call  SetAnimation      ( .Actor:Self 00000001 00620908 )
  514:  		Call  SetGoalToTarget   ( .Actor:Self )
  524:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  540:  		Add   *Var0  00000014
  550:  		Set   *Var1  00000000
  560:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  57C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  590:  		Thread
  598:  			Wait  4`
  5A4:  			Set   *Var0  000000B4
  5B4:  			Loop  00000004
  5C0:  				Sub   *Var0  0000002D
  5D0:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
  5EC:  				Wait  1`
  5F8:  			EndLoop
  600:  			Call  SetAnimation  ( .Actor:Self 00000001 00620908 )
  618:  		EndThread
  620:  		Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  640:  		Call  SetAnimation      ( .Actor:Self 00000001 0062090C )
  658:  		Wait  5`
  664:  		Call  UseBattleCamPreset    ( 00000002 )
  674:  		Call  YieldTurn ( )
  680:  		Call  SetActorYaw       ( .Actor:Self  180` )
  694:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  6B0:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  6C8:  		Call  SetGoalToHome     ( .Actor:Self )
  6D8:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[8.0] )
  6EC:  		Call  RunToGoal ( .Actor:Self  0` .False )
  704:  		Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  71C:  		Call  SetActorYaw       ( .Actor:Self  0` )
  730:  		Wait  5`
  73C:  		Call  SetAnimation      ( .Actor:Self 00000001 00620902 )
  754:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  768:  		Call  JumpToGoal        ( .Actor:Self  5` .False .True .False )
  788:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  7A0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  7B4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7C8:  		Return
  7D0:  	EndCaseGroup
  7D8:  	Default
  7E0:  		Call  SetGoalToTarget       ( .Actor:Self )
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.2] )
				ExecWait  $Script_RedGoombaHeadbonkPart2
  9A4:  EndSwitch
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 ) %First hit
  7F0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.3] )
				ExecWait  $Script_RedGoombaHeadbonkPart2
  9AC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 ) %Second hit
		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
		If  *Var0  ==  00000000 
				Call  GetActorHP    ( .Actor:Self *Var0 )
				If  *Var0  <=  00000020` 
					Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
					ExecWait  $Script_RedGoombaHeadbonkPart2
					Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 0000000A 00000020 ) %Third hit if low on HP.
				EndIf
			EndIf
  9F8:  		Call  UseBattleCamPreset    ( 00000002 )
  A08:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  A24:  		Wait  1`
  A30:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  A4C:  		Wait  1`
  A58:  		Call  SetActorRotation      ( .Actor:Self 00000000 00000000 00000000 )
  A74:  		Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  A90:  		Call  SetAnimation  ( .Actor:Self 00000001 00620902 )
  AA8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AC4:  		Add   *Var0  00000028
  AD4:  		Set   *Var1  00000000
  AE4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  AF8:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B14:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  B34:  		Add   *Var0  0000001E
  B44:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B60:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  B80:  		Add   *Var0  00000014
  B90:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BAC:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  BCC:  		Call  SetAnimation  ( .Actor:Self 00000001 00620902 )
  BE4:  		Wait  3`
  BF0:  		Call  YieldTurn ( )
  BFC:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[2.0] )
  C14:  		Call  SetAnimation  ( .Actor:Self 00000001 00620906 )
  C2C:  		Call  SetGoalToHome ( .Actor:Self )
  C3C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  C50:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  C68:  		Call  SetAnimationRate      ( .Actor:Self 00000001 *Fixed[1.0] )
  C90:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CA4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CB8:  Return
  CC0:  End
}

%This gets used like three times, so I'm just gonna do this to
%save on space and declutter the bpat.
#new:Script $Script_RedGoombaHeadbonkPart2
{
  804:  		Thread
  80C:  			Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var0 )
  828:  			Set   *Var0  00000000
  838:  			Loop  00000010
  844:  				Call  GetActorPos   ( .Actor:Self *Var4 *Var5 *Var6 )
  860:  				Call  $Function_8021893C    ( *Var1 *Var2 *Var4 *Var5 *Var0 )
  880:  				Call  SetActorRotation      ( .Actor:Self 00000000 00000000 *Var0 )
  89C:  				Set   *Var1  *Var4
  8AC:  				Set   *Var2  *Var5
  8BC:  				Set   *Var3  *Var6
  8CC:  				Wait  1`
  8D8:  			EndLoop
  8E0:  		EndThread
  8E8:  		Thread
  8F0:  			Wait  6`
  8FC:  			Call  SetAnimation  ( .Actor:Self 00000001 00620908 )
  914:  		EndThread
  91C:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  93C:  		Call  SetAnimation  ( .Actor:Self 00000001 00620908 )
  954:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  970:  		Wait  1`
  97C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.3] *Fixed[0.5] *Fixed[1.0] )
  998:  		Wait  1`
				Return
				End
}

#new:Script $Script_Init_802207B8
{
    0:  ExecWait  $Script_8021EF9C
   20:  Call  $Function_80218A30 ( )
   2C:  Return
   34:  End
}

#new:IdleAnimations $IdleAnimations_80220800
{
	.Status:Normal    00630501
	.Status:Stone     00630500
	.Status:Sleep     00630508
	.Status:Poison    00630500
	.Status:Stop      00630500
	.Status:Static    00630500
	.Status:Paralyze  00630500
	.Status:Dizzy     00630507
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80220844
{
	.Status:Normal    00630504
	.Status:Stone     00630500
	.Status:Sleep     00630508
	.Status:Poison    00630500
	.Status:Stop      00630500
	.Status:Static    00630500
	.Status:Paralyze  00630500
	.Status:Dizzy     00630507
	.Status:End
}


#new:DefenseTable $DefenseTable_80220910
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_8022091C
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      30`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      30`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   30`
	.Status:Shrink     30`
	.Status:Stop       30`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -2`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -2`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod    -2`
	.Status:ParalyzeTurnMod  -2`
	.Status:ShrinkTurnMod    -2`
	.Status:StopTurnMod      -2`
	.Status:End
}

#new:PartsTable $PartsTable_802209C8
{
	00020020 01000000 E70F00FF $IdleAnimations_80220800 $DefenseTable_80220910 00000000 00000000 00000000 00000000
	00800020 02000000 005000FF 00000000 $DefenseTable_80220910 00000000 00000000 00000000 00000000
}

#new:Actor $GoombaKing
{
	% stats
	[Index]        DEb
	[Level]         0`b
	[MaxHP]       120`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_8022091C
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_802209C8
	[Script]      $Script_Init_80220A38
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  50`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         56`b  80`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]   -6`b  38`b % dx dy
	[StatusIcon]   12`b  75`b % dx dy
}

#new:Script $Script_Init_80220A38
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80221530 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80220B50 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_80220F34 )
   50:  Exec  $Script_80222D9C *Var0
   60:  Call  SetActorVar   ( .Actor:Self 00000004 *Var0 )
   78:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   90:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   A8:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   D8:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   F0:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  108:  Return
  110:  End
}

#new:Script $Script_Idle_80220B50
{
    0:  Label  0
    C:  Call  RandInt   ( 00000050 *Var0 )
   20:  Add   *Var0  00000050
   30:  Wait  *Var0
   3C:  Label  1
   48:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   5C:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   6C:  	Wait  1`
   78:  	Goto  1
   84:  EndIf
   8C:  Call  SetGoalToHome     ( .Actor:Self )
   9C:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Add   *Var0  00000005
   C8:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
   DC:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220844 )
   F4:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  110:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  124:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220800 )
  13C:  Wait  20`
  148:  Label  2
  154:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  168:  If  *Var0  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  178:  	Wait  1`
  184:  	Goto  2
  190:  EndIf
  198:  Call  SetGoalToHome     ( .Actor:Self )
  1A8:  Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  1C4:  Call  SetActorIdleSpeed ( .Actor:Self *Fixed[1.0] )
  1D8:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220844 )
  1F0:  Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
  20C:  Call  IdleRunToGoal     ( .Actor:Self  0` )
  220:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80220800 )
  238:  Wait  80`
  244:  Goto  0
  250:  Return
  258:  End
}

#new:Script $Script_80220DB0
{
    0:  Call  UseBattleCamPreset    ( 00000002 )
   10:  Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   28:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   44:  Set   *Var1  00000000
   54:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   70:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.4] )
   84:  Call  AddGoalPos    ( .Actor:Self  30`  0`  0` )
   A0:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
   C0:  Call  PlaySoundAtActor      ( .Actor:Self 000020B4 )
   D4:  Call  AddGoalPos    ( .Actor:Self  15`  0`  0` )
   F0:  Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  110:  Call  PlaySoundAtActor      ( .Actor:Self 000020B4 )
  124:  Call  AddGoalPos    ( .Actor:Self  5`  0`  0` )
  140:  Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  160:  Call  PlaySoundAtActor      ( .Actor:Self 000020B4 )
  174:  Return
  17C:  End
}

#new:Script $Script_HandleEvent_80220F34
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   44:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   58:  Switch  *Var0
   64:  	Case  ==  .Event:HitCombo % 9
   70:  		SetConst  *Var0  00000001
   80:  		SetConst  *Var1  00630506
   90:  		ExecWait  DoNormalHit
   9C:  	Case  ==  .Event:Hit % A
   A8:  		SetConst  *Var0  00000001
   B8:  		SetConst  *Var1  00630506
   C8:  		ExecWait  DoNormalHit
   D4:  	Case  ==  .Event:BurnHit % E
   E0:  		SetConst  *Var0  00000001
   F0:  		SetConst  *Var1  0063050D
  100:  		SetConst  *Var2  0063050E
  110:  		ExecWait  DoBurnHit
  11C:  	Case  ==  .Event:SpinSmashHit % B
  128:  		SetConst  *Var0  00000001
  138:  		SetConst  *Var1  00630506
  148:  		ExecWait  DoSpinSmashHit
  154:  	Case  ==  .Event:ShockHit % 2F
  160:  		SetConst  *Var0  00000001
  170:  		SetConst  *Var1  00630506
  180:  		ExecWait  DoShockHit
  18C:  		SetConst  *Var0  00000001
  19C:  		SetConst  *Var1  00630506
  1AC:  		ExecWait  $Script_80220DB0
  1B8:  		SetConst  *Var0  00000001
  1C8:  		SetConst  *Var1  00630504
  1D8:  		ExecWait  DoReturnHome
  1E4:  	Case  ==  .Event:ShockDeath % 26
  1F0:  		SetConst  *Var0  00000001
  200:  		SetConst  *Var1  00630506
  210:  		ExecWait  DoShockHit
  21C:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  234:  		Kill  *Var0
  240:  		SetConst  *Var0  00000001
  250:  		SetConst  *Var1  00630506
  260:  		ExecWait  $Script_80222F50
  26C:  		Return
  274:  	CaseOR  ==  00000017 % 17
  280:  	CaseOR  ==  .Event:Immune % 19
  28C:  		SetConst  *Var0  00000001
  29C:  		SetConst  *Var1  00630501
  2AC:  		ExecWait  DoImmune
  2B8:  	EndCaseGroup
  2C0:  	Case  ==  .Event:Death % 20
  2CC:  		SetConst  *Var0  00000001
  2DC:  		SetConst  *Var1  00630506
  2EC:  		ExecWait  DoNormalHit
  2F8:  		Wait  10`
  304:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  31C:  		Kill  *Var0
  328:  		SetConst  *Var0  00000001
  338:  		SetConst  *Var1  00630506
  348:  		ExecWait  $Script_80222F50
  354:  		Return
  35C:  	Case  ==  .Event:BurnDeath % 24
  368:  		SetConst  *Var0  00000001
  378:  		SetConst  *Var1  0063050D
  388:  		SetConst  *Var2  0063050E
  398:  		ExecWait  DoBurnHit
  3A4:  		Wait  10`
  3B0:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  3C8:  		Kill  *Var0
  3D4:  		SetConst  *Var0  00000001
  3E4:  		SetConst  *Var1  0063050E
  3F4:  		ExecWait  $Script_80222F50
  400:  		Return
  408:  	Case  ==  .Event:SpinSmashDeath % 21
  414:  		SetConst  *Var0  00000001
  424:  		SetConst  *Var1  00630506
  434:  		ExecWait  DoSpinSmashHit
  440:  		Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
  458:  		Kill  *Var0
  464:  		SetConst  *Var0  00000001
  474:  		SetConst  *Var1  00630506
  484:  		ExecWait  $Script_80222F50
  490:  		Return
  498:  	Case  ==  .Event:SpikeContact % 2A
  4A4:  		Call  SetAnimation  ( .Actor:Self 00000001 00630506 )
  4BC:  		Wait  20`
  4C8:  		Call  SetAnimation  ( .Actor:Self 00000001 00630504 )
  4E0:  		Call  SetGoalToHome ( .Actor:Self )
  4F0:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  504:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  51C:  		Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  534:  	Case  ==  .Event:EndFirstStrike % 35
  540:  		SetConst  *Var0  00000001
  550:  		SetConst  *Var1  00630501
  560:  		ExecWait  DoReturnHome
  56C:  		Call  HPBarToHome   ( .Actor:Self )
  57C:  	Case  ==  .Event:RecoverStatus % 31
  588:  		SetConst  *Var0  00000001
  598:  		SetConst  *Var1  00630501
  5A8:  		ExecWait  DoRecover
  5B4:  	Default
  5BC:  EndSwitch
  5C4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  5D8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  5EC:  Return
  5F4:  End
}

#new:Script $Script_TakeTurn_80221530
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
   44:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   58:  Call  SetGoalToTarget   ( .Actor:Self )
   68:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   7C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   8C:  	Call  GetActorVar   ( .Actor:Enemy3 00000006 *Var0 )
   A4:  	If  *Var0  !=  00000000
   B4:  		Call  RandInt   ( 00000064 *Var1 )
   C8:  		If  *Var1  <  0000003C
   D8:  			Sub   *Var0  00000001
   E8:  			Call  SetActorVar   ( .Actor:Enemy3 00000006 *Var0 )
  100:  			ExecWait  $Script_DropGoomnuts
  10C:  			Return
  114:  		EndIf
  11C:  	EndIf
  124:  EndIf
  12C:  ExecWait  $Script_GoombaKingKick
  138:  Return
  140:  Return
  148:  End
}

#new:Script $Script_GoombaKingKick
{
    0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   14:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   24:  	Call  UseBattleCamPreset    ( 0000003F )
   34:  	Call  AddBattleCamZoom      (  -100` )
   44:  	Call  SetBattleCamOffsetZ   (  20` )
   54:  	Call  BattleCamTargetActor  ( .Actor:Self )
   64:  	Call  MoveBattleCamOver     (  30` )
   74:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   8C:  Else
   94:  	Call  UseBattleCamPreset    ( 0000003F )
   A4:  	Call  AddBattleCamZoom      (  -100` )
   B4:  	Call  BattleCamTargetActor  ( .Actor:Self )
   C4:  	Call  MoveBattleCamOver     (  20` )
   D4:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   EC:  EndIf
   F4:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  108:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  11C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  12C:  	Call  SetGoalToTarget   ( .Actor:Self )
  13C:  	Call  AddGoalPos        ( .Actor:Self  32`  0`  0` )
  158:  Else
  160:  	Call  SetGoalToTarget   ( .Actor:Self )
  170:  	Call  AddGoalPos        ( .Actor:Self  12`  0`  0` )
  18C:  EndIf
  194:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  1A8:  Call  SetAnimation  ( .Actor:Self 00000001 00630504 )
  1C0:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1D8:  Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  1F0:  Wait  6`
  1FC:  Thread
  204:  	Call  PlaySoundAtActor  ( .Actor:Self 000020ED )
  218:  	Wait  10`
  224:  	Call  PlaySoundAtActor  ( .Actor:Self 000020ED )
  238:  EndThread
  240:  Call  SetAnimation  ( .Actor:Self 00000001 00630505 )
  258:  Set   *Var0  00000000
  268:  Loop  00000014
  274:  	Add   *Var0  00000012
  284:  	Call  SetActorYaw   ( .Actor:Self *Var0 )
  298:  	Wait  1`
  2A4:  EndLoop
  2AC:  Call  SetActorYaw       ( .Actor:Self  0` )
  2C0:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000002 00000010 )
  2E4:  Switch  *VarA
  2F0:  	CaseOR  ==  .HitResult:Miss % 6
  2FC:  	CaseOR  ==  .HitResult:Lucky % 5
  308:  		If  *VarA  ==  .HitResult:Lucky % 5
  318:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  33C:  		EndIf
  344:  		Call  SetAnimation  ( .Actor:Self 00000001 00630507 )
  35C:  		Set   *Var0  00000000
  36C:  		Loop  00000014
  378:  			Add   *Var0  00000012
  388:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  39C:  			Wait  1`
  3A8:  		EndLoop
  3B0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  3C4:  		Call  UseBattleCamPreset    ( 00000002 )
  3D4:  		Call  MoveBattleCamOver (  20` )
  3E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  3FC:  		Call  SetGoalToHome ( .Actor:Self )
  40C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  420:  		Call  SetAnimation  ( .Actor:Self 00000001 00630504 )
  438:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  450:  		Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  468:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  47C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  490:  		Return
  498:  	EndCaseGroup
  4A0:  EndSwitch
  4A8:  Call  UseBattleCamPreset    ( 00000002 )
  4B8:  Call  MoveBattleCamOver (  20` )
  4C8:  Wait  2`
  4D4:  Call  SetGoalToTarget   ( .Actor:Self )
  4E4:  Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000000 0000000C 00000020 )
  50C:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  528:  Call  SetActorYaw       ( .Actor:Self  0` )
  53C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  1D8:  Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  1F0:  Wait  6`
  1FC:  Thread
  204:  	Call  PlaySoundAtActor  ( .Actor:Self 000020ED )
  218:  	Wait  10`
  224:  	Call  PlaySoundAtActor  ( .Actor:Self 000020ED )
  238:  EndThread
  240:  Call  SetAnimation  ( .Actor:Self 00000001 00630505 )
  258:  Set   *Var0  00000000
  268:  Loop  00000014
  274:  	Add   *Var0  00000012
  284:  	Call  SetActorYaw   ( .Actor:Self *Var0 )
  298:  	Wait  1`
  2A4:  EndLoop
  2AC:  Call  SetActorYaw       ( .Actor:Self  0` )
  2C0:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000002 00000010 )
  2E4:  Switch  *VarA
  2F0:  	CaseOR  ==  .HitResult:Miss % 6
  2FC:  	CaseOR  ==  .HitResult:Lucky % 5
  308:  		If  *VarA  ==  .HitResult:Lucky % 5
  318:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  33C:  		EndIf
  344:  		Call  SetAnimation  ( .Actor:Self 00000001 00630507 )
  35C:  		Set   *Var0  00000000
  36C:  		Loop  00000014
  378:  			Add   *Var0  00000012
  388:  			Call  SetActorYaw   ( .Actor:Self *Var0 )
  39C:  			Wait  1`
  3A8:  		EndLoop
  3B0:  		Call  SetActorYaw   ( .Actor:Self  0` )
  3C4:  		Call  UseBattleCamPreset    ( 00000002 )
  3D4:  		Call  MoveBattleCamOver (  20` )
  3E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  3FC:  		Call  SetGoalToHome ( .Actor:Self )
  40C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  420:  		Call  SetAnimation  ( .Actor:Self 00000001 00630504 )
  438:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  450:  		Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  468:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  47C:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  490:  		Return
  498:  	EndCaseGroup
  4A0:  EndSwitch
  4A8:  Call  UseBattleCamPreset    ( 00000002 )
  4B8:  Call  MoveBattleCamOver (  20` )
  4C8:  Wait  2`
  4D4:  Call  SetGoalToTarget   ( .Actor:Self )
  4E4:  Call  EnemyDamageTarget ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000000 0000000E 00000020 )
  50C:  Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  528:  Call  SetActorYaw       ( .Actor:Self  0` )
  53C:  Call  SetActorDispOffset    ( .Actor:Self 00000000 00000000 00000000 )
  558:  Call  SetAnimation      ( .Actor:Self 00000001 00630501 )
  570:  Switch  *VarA
  57C:  	Default
  584:  		Wait  10`
  590:  		Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  5A8:  		Call  SetGoalToHome ( .Actor:Self )
  5B8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  5CC:  		Call  SetAnimation  ( .Actor:Self 00000001 00630504 )
  5E4:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  5FC:  		Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  614:  EndSwitch
  61C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  630:  Call  UseIdleAnimation  ( .Actor:Self .True )
  644:  Return
  64C:  End
}

#new:Script $Script_DropGoomnuts
{
    0:  Call  UseBattleCamPreset    ( 0000000F )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  MoveBattleCamOver (  40` )
   30:  Wait  5`
   3C:  Call  8024ECF8  ( 00000000 00000001 00000000 )
   54:  Call  SetAnimation      ( .Actor:Self 00000001 00630509 )
   6C:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
   80:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   9C:  Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
   B8:  Call  JumpToGoal        ( .Actor:Self  20` .False .True .False )
   D8:  Call  PlaySoundAtActor  ( .Actor:Self 000020B4 )
   EC:  Call  UseBattleCamPreset    ( 00000002 )
   FC:  Call  MoveBattleCamOver (  30` )
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 00630500 )
  124:  Thread
  12C:  	Call  StartRumble       ( 0000000B )
  13C:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
  150:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  160:  		Call  ShakeCam  ( .Cam:Battle 00000000  10` *Fixed[5.0] )
  17C:  	EndIf
  184:  	Call  SetAnimation  ( .Actor:Self 00000001 00630501 )
  19C:  	Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFB0 0000007D 00000000 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFF1 00000087 00000000 00000055 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Call  PlayEffect    ( ~FX:DropLeaves:Random 00000064 00000067 00000000 00000046 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  268:  EndThread
  270:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000002 00000010 )
  294:  Switch  *VarA
  2A0:  	CaseOR  ==  .HitResult:Miss % 6
  2AC:  	CaseOR  ==  .HitResult:Lucky % 5
  2B8:  		Thread
  2C0:  			Wait  12`
  2CC:  			Call  PlaySoundAtPart   ( .Actor:Enemy3 00000003 00000301 )
  2E4:  		EndThread
  2EC:  		Thread
  2F4:  			Wait  10`
  300:  			Call  SetPartJumpGravity    ( .Actor:Enemy3 00000003 *Fixed[1.5] )
  318:  			Call  GetPartOffset ( .Actor:Enemy3 00000003 *Var0 *Var1 *Var2 )
  338:  			Call  FallPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  14` )
  35C:  			Sub   *Var0  0000000C
  36C:  			Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  10` .True )
  394:  			Sub   *Var0  00000007
  3A4:  			Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  7` .True )
  3CC:  			Loop  00000014
  3D8:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .False )
  3F4:  				Wait  1`
  400:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .True )
  41C:  				Wait  1`
  428:  			EndLoop
  430:  		EndThread
  438:  		Thread
  440:  			Wait  5`
  44C:  			Call  PlaySoundAtPart   ( .Actor:Enemy3 00000004 00000301 )
  464:  		EndThread
  46C:  		Thread
  474:  			Wait  3`
  480:  			Call  SetPartJumpGravity    ( .Actor:Enemy3 00000004 *Fixed[1.5] )
  498:  			Call  GetPartOffset ( .Actor:Enemy3 00000004 *Var0 *Var1 *Var2 )
  4B8:  			Call  FallPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  15` )
  4DC:  			Sub   *Var0  0000000C
  4EC:  			Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  10` .True )
  514:  			Sub   *Var0  00000007
  524:  			Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  7` .True )
  54C:  			Loop  00000014
  558:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .False )
  574:  				Wait  1`
  580:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .True )
  59C:  				Wait  1`
  5A8:  			EndLoop
  5B0:  		EndThread
  5B8:  		Thread
  5C0:  			Wait  17`
  5CC:  			Call  PlaySoundAtPart   ( .Actor:Enemy3 00000005 00000301 )
  5E4:  		EndThread
  5EC:  		Thread
  5F4:  			Wait  15`
  600:  			Call  SetPartJumpGravity    ( .Actor:Enemy3 00000005 *Fixed[1.5] )
  618:  			Call  GetPartOffset ( .Actor:Enemy3 00000005 *Var0 *Var1 *Var2 )
  638:  			Call  FallPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  17` )
  65C:  			Add   *Var0  0000000C
  66C:  			Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  10` .True )
  694:  			Add   *Var0  00000007
  6A4:  			Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  7` .True )
  6CC:  			Loop  00000014
  6D8:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .False )
  6F4:  				Wait  1`
  700:  				Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .True )
  71C:  				Wait  1`
  728:  			EndLoop
  730:  		EndThread
  738:  		Wait  15`
  744:  		If  *VarA  ==  .HitResult:Lucky % 5
  754:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  778:  		EndIf
  780:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  794:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  7A8:  		Return
  7B0:  	EndCaseGroup
  7B8:  EndSwitch
  7C0:  Thread
  7C8:  	Wait  12`
  7D4:  	Call  PlaySoundAtPart   ( .Actor:Enemy3 00000003 00000301 )
  7EC:  EndThread
  7F4:  Thread
  7FC:  	Wait  10`
  808:  	Call  SetPartJumpGravity    ( .Actor:Enemy3 00000003 *Fixed[1.5] )
  820:  	Call  GetPartOffset ( .Actor:Enemy3 00000003 *Var0 *Var1 *Var2 )
  840:  	Call  FallPartTo    ( .Actor:Enemy3 00000003 *Var0  35` *Var2  14` )
  864:  	Sub   *Var0  0000000C
  874:  	Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  10` .True )
  89C:  	Sub   *Var0  00000007
  8AC:  	Call  JumpPartTo    ( .Actor:Enemy3 00000003 *Var0  10` *Var2  7` .True )
  8D4:  	Loop  00000014
  8E0:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .False )
  8FC:  		Wait  1`
  908:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000003 00000001 .True )
  924:  		Wait  1`
  930:  	EndLoop
  938:  EndThread
  940:  Thread
  948:  	Wait  5`
  954:  	Call  PlaySoundAtPart   ( .Actor:Enemy3 00000004 00000301 )
  96C:  EndThread
  974:  Thread
  97C:  	Wait  3`
  988:  	Call  SetPartJumpGravity    ( .Actor:Enemy3 00000004 *Fixed[1.5] )
  9A0:  	Call  GetPartOffset ( .Actor:Enemy3 00000004 *Var0 *Var1 *Var2 )
  9C0:  	Call  FallPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  15` )
  9E4:  	Sub   *Var0  0000000C
  9F4:  	Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  10` .True )
  A1C:  	Sub   *Var0  00000007
  A2C:  	Call  JumpPartTo    ( .Actor:Enemy3 00000004 *Var0  10` *Var2  7` .True )
  A54:  	Loop  00000014
  A60:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .False )
  A7C:  		Wait  1`
  A88:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000004 00000001 .True )
  AA4:  		Wait  1`
  AB0:  	EndLoop
  AB8:  EndThread
  AC0:  Thread
  AC8:  	Wait  16`
  AD4:  	Call  PlaySoundAtPart   ( .Actor:Enemy3 00000005 00000301 )
  AEC:  EndThread
  AF4:  Thread
  AFC:  	Wait  14`
  B08:  	Call  SetPartJumpGravity    ( .Actor:Enemy3 00000005 *Fixed[1.5] )
  B20:  	Call  GetPartOffset ( .Actor:Enemy3 00000005 *Var0 *Var1 *Var2 )
  B40:  	Call  FallPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  17` )
  B64:  	Add   *Var0  0000000C
  B74:  	Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  10` .True )
  B9C:  	Add   *Var0  00000007
  BAC:  	Call  JumpPartTo    ( .Actor:Enemy3 00000005 *Var0  10` *Var2  7` .True )
  BD4:  	Loop  00000014
  BE0:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .False )
  BFC:  		Wait  1`
  C08:  		Call  SetPartFlagBits   ( .Actor:Enemy3 00000005 00000001 .True )
  C24:  		Wait  1`
  C30:  	EndLoop
  C38:  EndThread
  C40:  Wait  23`
  C4C:  Wait  2`
  C58:  Call  SetGoalToTarget   ( .Actor:Self )
  C68:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000010 00000020 )
  C90:  Switch  *Var0
  C9C:  	Case  ==  0000000A % A
  CA8:  		Return
  CB0:  EndSwitch
  CB8:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  CCC:  Call  UseIdleAnimation  ( .Actor:Self .True )
  CE0:  Return
  CE8:  End
}

#new:Script $Script_80222D9C
{
    0:  Label  0
    C:  Wait  1`
   18:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   30:  If  *Var0  !=  00630504
   40:  	Goto  0
   4C:  EndIf
   54:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   6C:  If  *Var0  !=  00630504
   7C:  	Goto  0
   88:  EndIf
   90:  Call  StartRumble   ( 00000001 )
   A0:  Call  8026DF88      ( FFFFFF81 00000001 *Var0 )
   B8:  If  *Var0  ==  00000001
   C8:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   E0:  	If  *Var0  ==  00000000
   F0:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  104:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  114:  			Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.2] )
  130:  		EndIf
  138:  	Else
  140:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  154:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  164:  			Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[0.7] )
  180:  		EndIf
  188:  	EndIf
  190:  EndIf
  198:  Goto  0
  1A4:  Return
  1AC:  End
}

#new:Script $Script_80222F50
{
    0:  Call  8027D32C  ( FFFFFF81 )
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  Set   *Var2  00000000
   34:  Call  SetAnimation      ( .Actor:Self *Var0 *Var1 )
   4C:  Wait  10`
   58:  Loop  00000018
   64:  	Call  SetActorYaw   ( .Actor:Self *Var2 )
   78:  	Add   *Var2  0000001E
   88:  	Wait  1`
   94:  EndLoop
   9C:  Call  SetActorYaw       ( .Actor:Self  0` )
   B0:  Call  GetActorPos       ( .Actor:Self *Var2 *Var3 *Var4 )
   CC:  Call  PlayEffect        ( ~FX:BigSmokePuff *Var2 *Var3 *Var4 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  110:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:Death )
  124:  Call  DropStarPoints    ( .Actor:Self )
  134:  Set   *Var3  00000000
  144:  Loop  0000000C
  150:  	Call  SetActorRotation  ( .Actor:Self *Var3 00000000 00000000 )
  16C:  	Add   *Var3  00000008
  17C:  	Wait  1`
  188:  EndLoop
  190:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
  1AC:  Call  SetActorFlagBits  ( .Actor:Self 00000004 .True )
  1C4:  Wait  30`
  1D0:  Call  ActorExists       ( .Actor:Enemy1 *Var0 )
  1E4:  If  *Var0  ==  .True
  1F4:  	Call  GetActorHP    ( .Actor:Enemy1 *Var0 )
  208:  EndIf
  210:  If  *Var0  !=  00000000
  220:  	Call  UseIdleAnimation  ( .Actor:Enemy1 .False )
  234:  	Call  EnableIdleScript  ( .Actor:Enemy1 00000000 )
  268:  	Call  EnableIdleScript  ( .Actor:Enemy1 00000001 )
  27C:  	Call  UseIdleAnimation  ( .Actor:Enemy1 .True )
  290:  EndIf
  298:  Call  ActorExists   ( .Actor:Enemy2 *Var0 )
  2AC:  If  *Var0  ==  .True
  2BC:  	Call  GetActorHP    ( .Actor:Enemy2 *Var0 )
  2D0:  EndIf
  2D8:  If  *Var0  !=  00000000
  2E8:  	Call  UseIdleAnimation  ( .Actor:Enemy2 .False )
  2FC:  	Call  EnableIdleScript  ( .Actor:Enemy2 00000000 )
  330:  	Call  EnableIdleScript  ( .Actor:Enemy2 00000001 )
  344:  	Call  UseIdleAnimation  ( .Actor:Enemy2 .True )
  358:  EndIf
  360:  Call  RemoveActor   ( .Actor:Self )
  370:  Return
  378:  End
}

#new:IdleAnimations $IdleAnimations_802232D0
{
	.Status:Normal    00640000
	.Status:End
}

#new:DefenseTable $DefenseTable_802232DC
{
	.Element:Normal 00000000
	.Element:Hammer 00000000
	.Element:End
}

#new:StatusTable $StatusTable_802232F0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink      0`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_8022339C
{
	00800000 01000000 000A00FF 00000000 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
	00120000 02000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
	00120000 03000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
	00120000 04000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
	00120000 05000000 000A00FF $IdleAnimations_802232D0 $DefenseTable_802232DC 00000000 00000000 00000000 00000000
}

#new:Actor $GoomnutTree
{
	% stats
	[Index]        93b
	[Level]         1`b
	[MaxHP]        -1`b
	[Coins]         0`b
	[Flags]       02004004
	[StatusTable] $StatusTable_802232F0
	% ai
	[PartsCount]    5`s
	[PartsTable]  $PartsTable_8022339C
	[Script]      $Script_Init_80223488
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]   0`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]          0`b   0`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]    0`b   0`b % dx dy
	[StatusIcon]    0`b   0`b % dx dy
}

#new:Script $Script_Init_80223488
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80223804 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80223678 )
   28:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80223688 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   54:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   6C:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   84:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   9C:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   B4:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000006 00000001 )
   E4:  Call  SetPartPos    ( .Actor:Self 00000002  10`  140`  10` )
  104:  Call  SetPartPos    ( .Actor:Self 00000003  -95`  140`  10` )
  124:  Call  SetPartPos    ( .Actor:Self 00000004  -115`  130`  0` )
  144:  Call  SetPartPos    ( .Actor:Self 00000005  -65`  118`  5` )
  164:  Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  184:  Call  SetPartScale  ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  1A4:  Call  SetPartScale  ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[1.0] )
  1C4:  Call  SetPartTargetFlagBits ( .Actor:Self 00000001 00000004 .True )
  1E0:  Return
  1E8:  End
}

#new:Script $Script_Idle_80223678
{
    0:  Return
    8:  End
}

#new:Script $Script_HandleEvent_80223688
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastElement    ( *VarE )
   38:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   4C:  Switch  *Var0
   58:  	CaseOR  ==  .Event:HitCombo % 9
   64:  	CaseOR  ==  00000017 % 17
   70:  		ExecWait  $Script_80223D90
   7C:  	EndCaseGroup
   84:  	CaseOR  ==  .Event:Hit % A
   90:  	CaseOR  ==  .Event:Immune % 19
   9C:  		ExecWait  $Script_80223D90
   A8:  		ExecWait  $Script_80223DBC
   B4:  	EndCaseGroup
   BC:  	Case  ==  .Event:SpinSmashHit % B
   C8:  		ExecWait  $Script_80223D90
   D4:  		ExecWait  $Script_80223DBC
   E0:  	Case  ==  .Event:Death % 20
   EC:  		ExecWait  $Script_80223D90
   F8:  	Case  ==  .Event:SpinSmashDeath % 21
  104:  		ExecWait  $Script_80223D90
  110:  	Case  ==  .Event:SpikeContact % 2A
  11C:  	Case  ==  .Event:ShockHit % 2F
  128:  	Case  ==  .Event:EndFirstStrike % 35
  134:  	Default
  13C:  EndSwitch
  144:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  158:  Call  UseIdleAnimation  ( .Actor:Self .True )
  16C:  Return
  174:  End
}

#new:Script $Script_TakeTurn_80223804
{
    0:  Switch  *Var0
    C:  	Case  ==  00000006
   18:  		Return
   20:  EndSwitch
   28:  Switch  *Var0
   34:  	Case  ==  00000000
   40:  	Case  ==  0000000A
   4C:  EndSwitch
   54:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   68:  Call  UseIdleAnimation  ( .Actor:Self .True )
   7C:  Return
   84:  End
}

#new:Script $Script_80223890
{
    0:  SetTimescale  *Fixed[2.0]
    C:  UseIntBuffer  *Var0
   18:  Get4Int  *Var1 *Var2 *Var3 *Var4
   30:  Get1Int  *Var5
   3C:  Call  GetActorPos   ( .Actor:Player *Var6 *VarF *Var8 )
   58:  Call  PlaySound     ( 00000165 )
   68:  Call  PlaySound     ( 00000166 )
   78:  Thread
   80:  	Set   *Flag[00]  .False
   90:  	If  *Var1  !=  00000000
   A0:  		Wait  1`
   AC:  		Loop  00000005
   B8:  			UseIntBuffer  *Var1
   C4:  			Get1Int  *Var2
   D0:  			Loop  *Var2
   DC:  				Get1Int  *Var3
   E8:  				Call  $Function_80218B80    ( *Var3 *Fixed[0.1] *Fixed[0.2] *VarF 00000000 )
  108:  				If  *Flag[00]  ==  .False
  118:  					Set   *Flag[00]  .True
  128:  					Call  PlaySoundAtModel  ( *Var3 00000166 00000000 )
  140:  				EndIf
  148:  			EndLoop
  150:  			Wait  1`
  15C:  			UseIntBuffer  *Var1
  168:  			Get1Int  *Var2
  174:  			Loop  *Var2
  180:  				Get1Int  *Var3
  18C:  				Call  $Function_80218B80    ( *Var3 *Fixed[0.1] *Fixed[-0.2] *VarF 00000000 )
  1AC:  			EndLoop
  1B4:  			Wait  1`
  1C0:  		EndLoop
  1C8:  		UseIntBuffer  *Var1
  1D4:  		Get1Int  *Var2
  1E0:  		Loop  *Var2
  1EC:  			Get1Int  *Var3
  1F8:  			Call  TranslateModel    ( *Var3 00000000 00000000 00000000 )
  214:  		EndLoop
  21C:  		Wait  1`
  228:  	EndIf
  230:  EndThread
  238:  Thread
  240:  	Set   *Flag[00]  .False
  250:  	If  *Var2  !=  00000000
  260:  		Loop  00000005
  26C:  			UseIntBuffer  *Var2
  278:  			Get1Int  *Var3
  284:  			Loop  *Var3
  290:  				Get1Int  *Var4
  29C:  				Call  $Function_80218B80    ( *Var4 *Fixed[0.1] *Fixed[0.2] *VarF 00000000 )
  2BC:  				If  *Flag[00]  ==  .False
  2CC:  					Set   *Flag[00]  .True
  2DC:  					Call  PlaySoundAtModel  ( *Var4 00000165 00000000 )
  2F4:  				EndIf
  2FC:  			EndLoop
  304:  			Wait  1`
  310:  			UseIntBuffer  *Var2
  31C:  			Get1Int  *Var3
  328:  			Loop  *Var3
  334:  				Get1Int  *Var4
  340:  				Call  $Function_80218B80    ( *Var4 *Fixed[0.1] *Fixed[-0.2] *VarF 00000000 )
  360:  			EndLoop
  368:  			Wait  1`
  374:  		EndLoop
  37C:  		UseIntBuffer  *Var2
  388:  		Get1Int  *Var3
  394:  		Loop  *Var3
  3A0:  			Get1Int  *Var4
  3AC:  			Call  TranslateModel    ( *Var4 00000000 00000000 00000000 )
  3C8:  		EndLoop
  3D0:  		Wait  1`
  3DC:  	EndIf
  3E4:  EndThread
  3EC:  Thread
  3F4:  	If  *Var4  !=  00000000
  404:  		UseIntBuffer  *Var4
  410:  		Get1Int  *Var5
  41C:  		Loop  *Var5
  428:  			Get3Int  *Var6 *Var7 *Var8
  43C:  			Call  PlayEffect    ( ~FX:DropLeaves:Random *Var6 *Var7 *Var8 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  480:  		EndLoop
  488:  	EndIf
  490:  EndThread
  498:  Wait  15`
  4A4:  Return
  4AC:  End
}

#new:Unknown $???_80223D44
{
	00000002 00000021 00000024
}

#new:Unknown $???_80223D50
{
	00000003 00000026 00000027 00000028
}

#new:Unknown $???_80223D60
{
	00000002 FFFFFFF6 0000008C 00000000 00000064 0000008C 00000000
}

#new:Unknown $???_80223D7C
{
	$???_80223D44 $???_80223D50 00000000 $???_80223D60 00000000
}

#new:Script $Script_80223D90
{
    0:  Set   *Var0  $???_80223D7C
   10:  ExecWait  $Script_80223890
   1C:  Return
   24:  End
}

#new:Script $Script_80223DBC
{
    0:  Call  PlayEffect    ( ~FX:DropLeaves:Random FFFFFFE7 00000078 00000000 0000005A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   44:  Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   5C:  If  *Var0  !=  00000000
   6C:  	Return
   74:  EndIf
   7C:  Call  UseBattleCamPreset    ( 0000000F )
   8C:  Call  BattleCamTargetActor  ( .Actor:Enemy0 )
   9C:  Wait  20`
   A8:  Call  SetActorVar   ( .Actor:Self 00000005 00000001 )
   C0:  Call  ActorExists   ( .Actor:Enemy0 *Var0 )
   D4:  If  *Var0  ==  .False
   E4:  	Call  SetGoalPos        ( .Actor:Self  10`  0`  10` )
  100:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  11C:  	Call  PlaySoundAtPart   ( .Actor:Self 00000002 00000301 )
  134:  	Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.8] )
  14C:  	Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[4.0] )
  164:  	Call  FallPartTo        ( .Actor:Self 00000002  10`  20`  10`  20` )
  188:  	Call  JumpPartTo        ( .Actor:Self 00000002  30`  20`  10`  10` .True )
  1B0:  	Call  JumpPartTo        ( .Actor:Self 00000002  40`  20`  10`  5` .True )
  1D8:  	Loop  00000014
  1E4:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  200:  		Wait  1`
  20C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  228:  		Wait  1`
  234:  	EndLoop
  23C:  	Return
  244:  EndIf
  24C:  Call  PlaySoundAtPart   ( .Actor:Self 00000002 00000301 )
  264:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.8] )
  27C:  Call  SetPartMoveSpeed  ( .Actor:Self 00000002 *Fixed[4.0] )
  294:  Call  GetStatusFlags    ( .Actor:Enemy0 *Var0 )
  2A8:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  2B8:  	Call  FallPartTo    ( .Actor:Self 00000002  10`  80`  10`  10` )
  2DC:  Else
  2E4:  	Call  FallPartTo    ( .Actor:Self 00000002  10`  32`  10`  10` )
  308:  EndIf
  310:  Call  UseBattleCamPreset    ( 00000002 )
  320:  Call  MoveBattleCamOver (  30` )
  330:  Call  SetOwnerTarget    ( .Actor:Enemy0 00000002 )
  344:  Call  SetGoalToTarget   ( .Actor:Self )
  354:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000006 00000020 )
  37C:  Call  ActorExists       ( .Actor:Enemy1 *Var0 )
  390:  If  *Var0  ==  .False
  3A0:  	Call  GetPartOffset ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  3C0:  	Add   *Var0  00000041
  3D0:  	Set   *Var1  00000014
  3E0:  	Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  3F8:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  420:  	Add   *Var0  0000000C
  430:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  8` .True )
  458:  	Loop  00000014
  464:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  480:  		Wait  1`
  48C:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  4A8:  		Wait  1`
  4B4:  	EndLoop
  4BC:  	Return
  4C4:  EndIf
  4CC:  Call  GetActorPos       ( .Actor:Enemy1 *Var0 *Var1 *Var2 )
  4E8:  Call  GetStatusFlags    ( .Actor:Enemy1 *Var3 )
  4FC:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  50C:  	Add   *Var1  00000032
  51C:  Else
  524:  	Add   *Var1  00000014
  534:  EndIf
  53C:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  554:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  57C:  Call  SetOwnerTarget    ( .Actor:Enemy1 00000001 )
  590:  Call  SetGoalToTarget   ( .Actor:Self )
  5A0:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000006 00000020 )
  5C8:  Call  ActorExists       ( .Actor:Enemy2 *Var0 )
  5DC:  If  *Var0  ==  .False
  5EC:  	Call  GetPartOffset ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  60C:  	Add   *Var0  00000023
  61C:  	Set   *Var1  00000014
  62C:  	Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  644:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  66C:  	Add   *Var0  0000000C
  67C:  	Call  JumpPartTo    ( .Actor:Self 00000002 *Var0 *Var1 *Var2  8` .True )
  6A4:  	Loop  00000014
  6B0:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  6CC:  		Wait  1`
  6D8:  		Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  6F4:  		Wait  1`
  700:  	EndLoop
  708:  	Return
  710:  EndIf
  718:  Call  GetActorPos       ( .Actor:Enemy2 *Var0 *Var1 *Var2 )
  734:  Call  GetStatusFlags    ( .Actor:Enemy2 *Var3 )
  748:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  758:  	Add   *Var1  00000032
  768:  Else
  770:  	Add   *Var1  00000014
  780:  EndIf
  788:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  7A0:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  7C8:  Call  SetOwnerTarget    ( .Actor:Enemy2 00000001 )
  7DC:  Call  SetGoalToTarget   ( .Actor:Self )
  7EC:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:IgnoreDefense 00000000 00000000 00000009 00000020 )
  814:  Call  GetPartOffset     ( .Actor:Self 00000002 *Var0 *Var1 *Var2 )
  834:  Add   *Var0  00000014
  844:  Set   *Var1  00000014
  854:  Call  SetPartJumpGravity    ( .Actor:Self 00000002 *Fixed[0.7] )
  86C:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  20` .True )
  894:  Add   *Var0  0000000C
  8A4:  Call  JumpPartTo        ( .Actor:Self 00000002 *Var0 *Var1 *Var2  8` .True )
  8CC:  Loop  00000014
  8D8:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  8F4:  	Wait  1`
  900:  	Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  91C:  	Wait  1`
  928:  EndLoop
  930:  Return
  938:  End
}

#new:Script $Script_BeforeBattle_80224700
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_80224720
{
    0:  Return
    8:  End
}

#new:Stage $Stage_80224730
{
	$ASCII_802258DC  % kmr_tex
	$ASCII_802258CC  % kmr_bt02_shape
	00000000
	$Script_BeforeBattle_80224700
	$Script_AfterBattle_80224720
	$ASCII_802258C4  % kmr_bg
	00000000
	00000000
	00000000
	00000000
}

#new:Script $Script_80224760
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var2
   20:  Mul   *Var7  0000000A
   30:  Label  0
   3C:  Add   *Var7  00000004
   4C:  If  *Var7  >  00000E0F
   5C:  	Sub   *Var7  00000E10
   6C:  EndIf
   74:  Call  $Function_80218D50    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   94:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
   D0:  Wait  1`
   DC:  Goto  0
   E8:  Return
   F0:  End
}

% Origin: HEURISTIC
#new:Script $Script_80224858
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *Var7  *Var2
   40:  Mul   *Var7  0000000A
   50:  Label  0
   5C:  Add   *Var7  00000004
   6C:  If  *Var7  >  00000E0F
   7C:  	Sub   *Var7  00000E10
   8C:  EndIf
   94:  Call  $Function_80218D50    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   B4:  AddF  *Var1  *VarB
   C4:  AddF  *Var2  *VarC
   D4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   F0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  110:  Wait  1`
  11C:  Goto  0
  128:  Return
  130:  End
}

% Origin: HEURISTIC
#new:Script $Script_80224990
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *VarD  *Var5
   40:  Set   *Var7  *Var2
   50:  Mul   *Var7  0000000A
   60:  Label  0
   6C:  Add   *Var7  00000004
   7C:  If  *Var7  >  00000E0F
   8C:  	Sub   *Var7  00000E10
   9C:  EndIf
   A4:  Call  $Function_80218D50    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   C4:  AddF  *Var0  *VarB
   D4:  AddF  *Var1  *VarC
   E4:  AddF  *Var2  *VarD
   F4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  110:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  130:  Wait  1`
  13C:  Goto  0
  148:  Return
  150:  End
}

#new:Script $Script_BeforeBattle_80224AE8
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000001
   20:  Set   *Var2  00000000
   30:  Exec  $Script_80224760
   3C:  Set   *Var0  00000004
   4C:  Set   *Var2  00000046
   5C:  Exec  $Script_80224760
   68:  Return
   70:  End
}

#new:Script $Script_AfterBattle_80224B60
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80224B70
{
	~Model:kmr_bt03:n2
	~Model:kmr_bt03:m4
	00000000
}

#new:Stage $Stage_80224B7C
{
	$ASCII_8022590C  % kmr_tex
	$ASCII_802258FC  % kmr_bt03_shape
	$ASCII_802258EC  % kmr_bt03_hit
	$Script_BeforeBattle_80224AE8
	$Script_AfterBattle_80224B60
	$ASCII_802258E4  % kmr_bg
	$ForegroundModelList_80224B70
	00000000
	00000000
	00000000
}

#new:Script $Script_80224BB0
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var2
   20:  Mul   *Var7  0000000A
   30:  Label  0
   3C:  Add   *Var7  00000004
   4C:  If  *Var7  >  00000E0F
   5C:  	Sub   *Var7  00000E10
   6C:  EndIf
   74:  Call  $Function_80218FC0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   94:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
   D0:  Wait  1`
   DC:  Goto  0
   E8:  Return
   F0:  End
}

% Origin: HEURISTIC
#new:Script $Script_80224CA8
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *Var7  *Var2
   40:  Mul   *Var7  0000000A
   50:  Label  0
   5C:  Add   *Var7  00000004
   6C:  If  *Var7  >  00000E0F
   7C:  	Sub   *Var7  00000E10
   8C:  EndIf
   94:  Call  $Function_80218FC0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   B4:  AddF  *Var1  *VarB
   C4:  AddF  *Var2  *VarC
   D4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   F0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  110:  Wait  1`
  11C:  Goto  0
  128:  Return
  130:  End
}

% Origin: HEURISTIC
#new:Script $Script_80224DE0
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *VarD  *Var5
   40:  Set   *Var7  *Var2
   50:  Mul   *Var7  0000000A
   60:  Label  0
   6C:  Add   *Var7  00000004
   7C:  If  *Var7  >  00000E0F
   8C:  	Sub   *Var7  00000E10
   9C:  EndIf
   A4:  Call  $Function_80218FC0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   C4:  AddF  *Var0  *VarB
   D4:  AddF  *Var1  *VarC
   E4:  AddF  *Var2  *VarD
   F4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  110:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  130:  Wait  1`
  13C:  Goto  0
  148:  Return
  150:  End
}

#new:Script $Script_BeforeBattle_80224F38
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000001
   20:  Set   *Var2  00000000
   30:  Exec  $Script_80224BB0
   3C:  Set   *Var0  00000004
   4C:  Set   *Var2  00000046
   5C:  Exec  $Script_80224BB0
   68:  Return
   70:  End
}

#new:Script $Script_AfterBattle_80224FB0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80224FC0
{
	~Model:kmr_bt04:m4
	~Model:kmr_bt04:n2
	00000000
}

#new:Stage $Stage_80224FCC
{
	$ASCII_8022593C  % kmr_tex
	$ASCII_8022592C  % kmr_bt04_shape
	$ASCII_8022591C  % kmr_bt04_hit
	$Script_BeforeBattle_80224F38
	$Script_AfterBattle_80224FB0
	$ASCII_80225914  % kmr_bg
	$ForegroundModelList_80224FC0
	00000000
	00000000
	00000000
}

% Origin: HEURISTIC
#new:Script $Script_80225000
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var2
   20:  Mul   *Var7  0000000A
   30:  Label  0
   3C:  Add   *Var7  00000004
   4C:  If  *Var7  >  00000E0F
   5C:  	Sub   *Var7  00000E10
   6C:  EndIf
   74:  Call  $Function_80219230    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   94:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
   D0:  Wait  1`
   DC:  Goto  0
   E8:  Return
   F0:  End
}

% Origin: HEURISTIC
#new:Script $Script_802250F8
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *Var7  *Var2
   40:  Mul   *Var7  0000000A
   50:  Label  0
   5C:  Add   *Var7  00000004
   6C:  If  *Var7  >  00000E0F
   7C:  	Sub   *Var7  00000E10
   8C:  EndIf
   94:  Call  $Function_80219230    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   B4:  AddF  *Var1  *VarB
   C4:  AddF  *Var2  *VarC
   D4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   F0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  110:  Wait  1`
  11C:  Goto  0
  128:  Return
  130:  End
}

% Origin: HEURISTIC
#new:Script $Script_80225230
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *VarD  *Var5
   40:  Set   *Var7  *Var2
   50:  Mul   *Var7  0000000A
   60:  Label  0
   6C:  Add   *Var7  00000004
   7C:  If  *Var7  >  00000E0F
   8C:  	Sub   *Var7  00000E10
   9C:  EndIf
   A4:  Call  $Function_80219230    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   C4:  AddF  *Var0  *VarB
   D4:  AddF  *Var1  *VarC
   E4:  AddF  *Var2  *VarD
   F4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  110:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  130:  Wait  1`
  13C:  Goto  0
  148:  Return
  150:  End
}

#new:Script $Script_BeforeBattle_80225388
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  EnableModel       ( ~Model:kmr_bt05:o302 .False )
   24:  Return
   2C:  End
}

#new:Script $Script_AfterBattle_802253BC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_802253CC
{
	~Model:kmr_bt05:n2
	~Model:kmr_bt05:m4
	00000000
}

#new:Stage $Stage_802253D8
{
	$ASCII_8022596C  % kmr_tex
	$ASCII_8022595C  % kmr_bt05_shape
	$ASCII_8022594C  % kmr_bt05_hit
	$Script_BeforeBattle_80225388
	$Script_AfterBattle_802253BC
	$ASCII_80225944  % kmr_bg
	$ForegroundModelList_802253CC
	00000000
	00000000
	00000000
}

#new:Script $Script_80225400
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var7  *Var2
   20:  Mul   *Var7  0000000A
   30:  Label  0
   3C:  Add   *Var7  00000004
   4C:  If  *Var7  >  00000E0F
   5C:  	Sub   *Var7  00000E10
   6C:  EndIf
   74:  Call  $Function_802194A0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   94:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   B0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
   D0:  Wait  1`
   DC:  Goto  0
   E8:  Return
   F0:  End
}

% Origin: HEURISTIC
#new:Script $Script_802254F8
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *Var7  *Var2
   40:  Mul   *Var7  0000000A
   50:  Label  0
   5C:  Add   *Var7  00000004
   6C:  If  *Var7  >  00000E0F
   7C:  	Sub   *Var7  00000E10
   8C:  EndIf
   94:  Call  $Function_802194A0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   B4:  AddF  *Var1  *VarB
   C4:  AddF  *Var2  *VarC
   D4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
   F0:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  110:  Wait  1`
  11C:  Goto  0
  128:  Return
  130:  End
}

% Origin: HEURISTIC
#new:Script $Script_80225630
{
    0:  Set   *VarA  *Var0
   10:  Set   *VarB  *Var3
   20:  Set   *VarC  *Var4
   30:  Set   *VarD  *Var5
   40:  Set   *Var7  *Var2
   50:  Mul   *Var7  0000000A
   60:  Label  0
   6C:  Add   *Var7  00000004
   7C:  If  *Var7  >  00000E0F
   8C:  	Sub   *Var7  00000E10
   9C:  EndIf
   A4:  Call  $Function_802194A0    ( *Var7 *Var0 *Var1 *Var2 *Var3 )
   C4:  AddF  *Var0  *VarB
   D4:  AddF  *Var1  *VarC
   E4:  AddF  *Var2  *VarD
   F4:  Call  TranslateModel        ( *VarA *Var0 *Var1 *Var2 )
  110:  Call  RotateModel   ( *VarA *Var3 00000000 00000001 00000000 )
  130:  Wait  1`
  13C:  Goto  0
  148:  Return
  150:  End
}

#new:Script $Script_BeforeBattle_80225788
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  $Function_80219708 ( )
   1C:  Set   *Var0  00000001
   2C:  Set   *Var2  00000000
   3C:  Exec  $Script_80225400
   48:  Set   *Var0  00000004
   58:  Set   *Var2  00000046
   68:  Exec  $Script_80225400
   74:  Return
   7C:  End
}

#new:Script $Script_AfterBattle_8022580C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_8022581C
{
	~Model:kmr_bt07:n2
	~Model:kmr_bt07:o303
	~Model:kmr_bt07:ha3
	00000000
}

#new:Stage $Stage_8022582C
{
	$ASCII_8022599C  % kmr_tex
	$ASCII_8022598C  % kmr_bt07_shape
	$ASCII_8022597C  % kmr_bt07_hit
	$Script_BeforeBattle_80225788
	$Script_AfterBattle_8022580C
	$ASCII_80225974  % kmr_bg
	$ForegroundModelList_8022581C
	00000000
	00000000
	00000000
}


#new:SJIS $SJIS_80225860
{
	クリキング,クリレッド,クリブルー % kurikingu,kurireddo,kuriburu-
}

#new:SJIS $SJIS_80225884
{
	クリレッド,クリブルー % kurireddo,kuriburu-
}

#new:ASCII $ASCII_8022589C
{
	"kmr_06"
}

#new:ASCII $ASCII_802258A4
{
	"kmr_05"
}

#new:ASCII $ASCII_802258AC
{
	"kmr_04"
}

#new:ASCII $ASCII_802258B4
{
	"kmr_03"
}

#new:ASCII $ASCII_802258BC
{
	"kmr_02"
}

#new:ASCII $ASCII_802258C4
{
	"kmr_bg"
}

#new:ASCII $ASCII_802258CC
{
	"kmr_bt02_shape"
}

#new:ASCII $ASCII_802258DC
{
	"kmr_tex"
}

#new:ASCII $ASCII_802258E4
{
	"kmr_bg"
}

#new:ASCII $ASCII_802258EC
{
	"kmr_bt03_hit"
}

#new:ASCII $ASCII_802258FC
{
	"kmr_bt03_shape"
}

#new:ASCII $ASCII_8022590C
{
	"kmr_tex"
}

#new:ASCII $ASCII_80225914
{
	"kmr_bg"
}

#new:ASCII $ASCII_8022591C
{
	"kmr_bt04_hit"
}

#new:ASCII $ASCII_8022592C
{
	"kmr_bt04_shape"
}

#new:ASCII $ASCII_8022593C
{
	"kmr_tex"
}

#new:ASCII $ASCII_80225944
{
	"kmr_bg"
}

#new:ASCII $ASCII_8022594C
{
	"kmr_bt05_hit"
}

#new:ASCII $ASCII_8022595C
{
	"kmr_bt05_shape"
}

#new:ASCII $ASCII_8022596C
{
	"kmr_tex"
}

#new:ASCII $ASCII_80225974
{
	"kmr_bg"
}

#new:ASCII $ASCII_8022597C
{
	"kmr_bt07_hit"
}

#new:ASCII $ASCII_8022598C
{
	"kmr_bt07_shape"
}

#new:ASCII $ASCII_8022599C
{
	"kmr_tex"
}


#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021A434
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021A434)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021A434)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021818C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218000
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218280
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021C244
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021C244)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021C244)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021840C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218280
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218500
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021DF84
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021DF84)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021DF84)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021868C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218500
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218780
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LW        A0, 8 (V0)
   14:  LBU       V1, 6 (A0)
   18:  LI        V0, 2
   1C:  SRLV      V1, V1, V0
   20:  SB        V1, 6 (A0)
   24:  LW        RA, 10 (SP)
   28:  JR        RA
   2C:  ADDIU     SP, SP, 18
}

#new:Function $Function_802187B0
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021F984
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021F984)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021F984)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_8021893C
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_802187B0
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218A30
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:get_actor
    C:  LW        A0, 148 (A0)
   10:  LW        A0, 8 (V0)
   14:  LBU       V1, 6 (A0)
   18:  LI        V0, 2
   1C:  SRLV      V1, V1, V0
   20:  SB        V1, 6 (A0)
   24:  LW        RA, 10 (SP)
   28:  JR        RA
   2C:  ADDIU     SP, SP, 18
}

% Origin: HEURISTIC
#new:Function $Function_80218A60
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 1C (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S2, 20 (SP)
   14:  SW        S0, 18 (SP)
   18:  LW        S0, C (S1)
   1C:  LW        A1, 0 (S0)
   20:  JAL       ~Func:get_variable
   24:  ADDIU     S0, S0, 4
   28:  LW        A1, 0 (S0)
   2C:  ADDIU     S0, S0, 4
   30:  COPY      A0, S1
   34:  JAL       ~Func:get_variable
   38:  COPY      S2, V0
   3C:  COPY      A0, S1
   40:  LW        A1, 0 (S0)
   44:  JAL       ~Func:get_variable
   48:  COPY      S0, V0
   4C:  MTC1      S2, F0
   50:  NOP
   54:  CVT.S.W   F0, F0
   58:  MFC1      A1, F0
   5C:  MTC1      S0, F0
   60:  NOP
   64:  CVT.S.W   F0, F0
   68:  MFC1      A2, F0
   6C:  MTC1      V0, F0
   70:  NOP
   74:  CVT.S.W   F0, F0
   78:  MFC1      A3, F0
   7C:  LI        A0, 2
   80:  JAL       ~Func:fx_land
   84:  SW        R0, 10 (SP)
   88:  LW        RA, 24 (SP)
   8C:  LW        S2, 20 (SP)
   90:  LW        S1, 1C (SP)
   94:  LW        S0, 18 (SP)
   98:  LI        V0, 2
   9C:  JR        RA
   A0:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218B10
{
    0:  ADDIU     SP, SP, FFD0
    4:  SDC1      F20, 18 (SP)
    8:  MTC1      A1, F20
    C:  SDC1      F22, 20 (SP)
   10:  MTC1      A2, F22
   14:  SW        S0, 10 (SP)
   18:  SDC1      F24, 28 (SP)
   1C:  MTC1      A3, F24
   20:  SW        RA, 14 (SP)
   24:  JAL       ~Func:guMtxIdentF
   28:  COPY      S0, A0
   2C:  MUL.S     F22, F20, F22
   30:  NOP
   34:  MUL.S     F20, F20, F24
   38:  NOP
   3C:  LIF       F0, 1.0
   44:  NOP
   48:  SWC1      F0, 14 (S0)
   4C:  SWC1      F22, 10 (S0)
   50:  SWC1      F20, 18 (S0)
   54:  LW        RA, 14 (SP)
   58:  LW        S0, 10 (SP)
   5C:  LDC1      F24, 28 (SP)
   60:  LDC1      F22, 20 (SP)
   64:  LDC1      F20, 18 (SP)
   68:  JR        RA
   6C:  ADDIU     SP, SP, 30
}

#new:Function $Function_80218B80
{
    0:  ADDIU     SP, SP, FF78
    4:  SW        S1, 54 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 5C (SP)
   10:  SW        S2, 58 (SP)
   14:  SW        S0, 50 (SP)
   18:  SDC1      F28, 80 (SP)
   1C:  SDC1      F26, 78 (SP)
   20:  SDC1      F24, 70 (SP)
   24:  SDC1      F22, 68 (SP)
   28:  SDC1      F20, 60 (SP)
   2C:  LW        S0, C (S1)
   30:  LW        A1, 0 (S0)
   34:  JAL       ~Func:get_variable
   38:  ADDIU     S0, S0, 4
   3C:  JAL       ~Func:get_model_list_index_from_tree_index
   40:  COPY      A0, V0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  COPY      A0, S1
   50:  JAL       ~Func:get_float_variable
   54:  COPY      S2, V0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  COPY      A0, S1
   64:  JAL       ~Func:get_float_variable
   68:  MOV.S     F28, F0
   6C:  LW        A1, 0 (S0)
   70:  ADDIU     S0, S0, 4
   74:  COPY      A0, S1
   78:  JAL       ~Func:get_float_variable
   7C:  MOV.S     F26, F0
   80:  COPY      A0, S1
   84:  LW        A1, 0 (S0)
   88:  JAL       ~Func:get_float_variable
   8C:  MOV.S     F22, F0
   90:  COPY      A0, S2
   94:  JAL       ~Func:get_model_from_list_index
   98:  MOV.S     F24, F0
   9C:  COPY      S1, V0
   A0:  LHU       V0, 0 (S1)
   A4:  ANDI      V0, V0, 400
   A8:  BNE       V0, R0, .o124
   AC:  ADDIU     S0, S1, 58
   B0:  MTC1      R0, F20
   B4:  MFC1      A2, F22
   B8:  MFC1      A1, F20
   BC:  MFC1      A3, F20
   C0:  JAL       ~Func:guTranslateF
   C4:  COPY      A0, S0
   C8:  MFC1      A1, F28
   CC:  MFC1      A2, F26
   D0:  MFC1      A3, F24
   D4:  JAL       $Function_80218B10
   D8:  ADDIU     A0, SP, 10
   DC:  ADDIU     A0, SP, 10
   E0:  COPY      A1, S0
   E4:  JAL       ~Func:guMtxCatF
   E8:  COPY      A2, S0
   EC:  ADDIU     A0, SP, 10
   F0:  NEG.S     F22, F22
   F4:  MFC1      A1, F20
   F8:  MFC1      A2, F22
   FC:  JAL       ~Func:guTranslateF
  100:  COPY      A3, A1
  104:  ADDIU     A0, SP, 10
  108:  COPY      A1, S0
  10C:  JAL       ~Func:guMtxCatF
  110:  COPY      A2, A1
  114:  LHU       V0, 0 (S1)
  118:  ORI       V0, V0, 1400
  11C:  BEQ       R0, R0, .o19C
  120:  SH        V0, 0 (S1)
        .o124
  124:  MTC1      R0, F20
  128:  MFC1      A2, F22
  12C:  MFC1      A1, F20
  130:  MFC1      A3, F20
  134:  JAL       ~Func:guTranslateF
  138:  ADDIU     A0, SP, 10
  13C:  ADDIU     A0, SP, 10
  140:  ADDIU     S0, S1, 58
  144:  COPY      A1, S0
  148:  JAL       ~Func:guMtxCatF
  14C:  COPY      A2, S0
  150:  MFC1      A1, F28
  154:  MFC1      A2, F26
  158:  MFC1      A3, F24
  15C:  JAL       $Function_80218B10
  160:  ADDIU     A0, SP, 10
  164:  ADDIU     A0, SP, 10
  168:  COPY      A1, S0
  16C:  JAL       ~Func:guMtxCatF
  170:  COPY      A2, S0
  174:  ADDIU     A0, SP, 10
  178:  NEG.S     F22, F22
  17C:  MFC1      A1, F20
  180:  MFC1      A2, F22
  184:  JAL       ~Func:guTranslateF
  188:  COPY      A3, A1
  18C:  ADDIU     A0, SP, 10
  190:  COPY      A1, S0
  194:  JAL       ~Func:guMtxCatF
  198:  COPY      A2, A1
        .o19C
  19C:  LW        RA, 5C (SP)
  1A0:  LW        S2, 58 (SP)
  1A4:  LW        S1, 54 (SP)
  1A8:  LW        S0, 50 (SP)
  1AC:  LDC1      F28, 80 (SP)
  1B0:  LDC1      F26, 78 (SP)
  1B4:  LDC1      F24, 70 (SP)
  1B8:  LDC1      F22, 68 (SP)
  1BC:  LDC1      F20, 60 (SP)
  1C0:  LI        V0, 2
  1C4:  JR        RA
  1C8:  ADDIU     SP, SP, 88
}

#new:Function $Function_80218D50
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       ~Func:get_variable
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIF       F20, 6.28318
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       ~Func:sin_rad
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       ~Func:sin_rad
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       ~Func:cos_rad
   F8:  ADD.S     F24, F24, F26
   FC:  COPY      A0, S4
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  COPY      A1, S1
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       ~Func:set_float_variable
  128:  ADD.S     F20, F20, F2
  12C:  COPY      A0, S4
  130:  MFC1      A2, F24
  134:  JAL       ~Func:set_float_variable
  138:  COPY      A1, S3
  13C:  COPY      A0, S4
  140:  MFC1      A2, F20
  144:  JAL       ~Func:set_float_variable
  148:  COPY      A1, S2
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  CLEAR     A2
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  LI        A2, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  COPY      A0, S4
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       ~Func:set_variable
  228:  COPY      A1, S0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  LI        V0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58
}

#new:Function $Function_80218FC0
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       ~Func:get_variable
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIF       F20, 6.28318
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       ~Func:sin_rad
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       ~Func:sin_rad
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       ~Func:cos_rad
   F8:  ADD.S     F24, F24, F26
   FC:  COPY      A0, S4
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  COPY      A1, S1
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       ~Func:set_float_variable
  128:  ADD.S     F20, F20, F2
  12C:  COPY      A0, S4
  130:  MFC1      A2, F24
  134:  JAL       ~Func:set_float_variable
  138:  COPY      A1, S3
  13C:  COPY      A0, S4
  140:  MFC1      A2, F20
  144:  JAL       ~Func:set_float_variable
  148:  COPY      A1, S2
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  CLEAR     A2
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  LI        A2, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  COPY      A0, S4
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       ~Func:set_variable
  228:  COPY      A1, S0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  LI        V0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58
}

% Origin: HEURISTIC
#new:Function $Function_80219230
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       ~Func:get_variable
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIF       F20, 6.28318
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       ~Func:sin_rad
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       ~Func:sin_rad
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       ~Func:cos_rad
   F8:  ADD.S     F24, F24, F26
   FC:  COPY      A0, S4
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  COPY      A1, S1
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       ~Func:set_float_variable
  128:  ADD.S     F20, F20, F2
  12C:  COPY      A0, S4
  130:  MFC1      A2, F24
  134:  JAL       ~Func:set_float_variable
  138:  COPY      A1, S3
  13C:  COPY      A0, S4
  140:  MFC1      A2, F20
  144:  JAL       ~Func:set_float_variable
  148:  COPY      A1, S2
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  CLEAR     A2
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  LI        A2, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  COPY      A0, S4
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       ~Func:set_variable
  228:  COPY      A1, S0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  LI        V0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58
}

#new:Function $Function_802194A0
{
    0:  ADDIU     SP, SP, FFA8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  SDC1      F30, 50 (SP)
   24:  SDC1      F28, 48 (SP)
   28:  SDC1      F26, 40 (SP)
   2C:  SDC1      F24, 38 (SP)
   30:  SDC1      F22, 30 (SP)
   34:  SDC1      F20, 28 (SP)
   38:  LW        S0, C (S4)
   3C:  LW        A1, 0 (S0)
   40:  JAL       ~Func:get_variable
   44:  ADDIU     S0, S0, 4
   48:  MTC1      V0, F0
   4C:  NOP
   50:  CVT.D.W   F0, F0
   54:  LW        S1, 0 (S0)
   58:  ADDIU     S0, S0, 4
   5C:  LIF       F3, 2.5625
   64:  MTC1      R0, F2
   68:  LIF       F20, 6.28318
   74:  LW        S3, 0 (S0)
   78:  DIV.D     F0, F0, F2
   7C:  CVT.S.D   F30, F0
   80:  MUL.S     F20, F30, F20
   84:  NOP
   88:  ADDIU     S0, S0, 4
   8C:  LW        S2, 0 (S0)
   90:  LIF       F0, 360.0
   98:  LW        S0, 4 (S0)
   9C:  DIV.S     F20, F20, F0
   A0:  JAL       ~Func:sin_rad
   A4:  MOV.S     F12, F20
   A8:  LIF       F12, 8.0
   B0:  NOP
   B4:  MUL.S     F12, F20, F12
   B8:  NOP
   BC:  LIF       F28, 150.0
   C4:  NOP
   C8:  MUL.S     F22, F0, F28
   CC:  NOP
   D0:  MTC1      R0, F26
   D4:  JAL       ~Func:sin_rad
   D8:  ADD.S     F22, F22, F26
   DC:  LIF       F2, 10.0
   E4:  NOP
   E8:  MUL.S     F24, F0, F2
   EC:  NOP
   F0:  MOV.S     F12, F20
   F4:  JAL       ~Func:cos_rad
   F8:  ADD.S     F24, F24, F26
   FC:  COPY      A0, S4
  100:  MUL.S     F20, F0, F28
  104:  NOP
  108:  COPY      A1, S1
  10C:  MFC1      A2, F22
  110:  LIF       F0, 20.0
  118:  LIF       F2, -50.0
  120:  DIV.S     F20, F20, F0
  124:  JAL       ~Func:set_float_variable
  128:  ADD.S     F20, F20, F2
  12C:  COPY      A0, S4
  130:  MFC1      A2, F24
  134:  JAL       ~Func:set_float_variable
  138:  COPY      A1, S3
  13C:  COPY      A0, S4
  140:  MFC1      A2, F20
  144:  JAL       ~Func:set_float_variable
  148:  COPY      A1, S2
  14C:  LIF       F0, 90.0
  154:  NOP
  158:  C.LT.S    F0, F30
  15C:  NOP
  160:  BC1F      .o190
  164:  CLEAR     A2
  168:  LIF       F0, 270.0
  170:  NOP
  174:  C.LT.S    F30, F0
  178:  NOP
  17C:  BC1TL     .o184
  180:  LI        A2, B4
        .o184
  184:  LIF       F0, 90.0
  18C:  NOP
        .o190
  190:  SUB.S     F0, F0, F30
  194:  ABS.S     F0, F0
  198:  TRUNC.W.S F4, F0
  19C:  MFC1      V0, F4
  1A0:  NOP
  1A4:  SLTI      V0, V0, 2D
  1A8:  BEQ       V0, R0, .o1CC
  1AC:  NOP
  1B0:  LIF       F0, 45.0
  1B8:  NOP
  1BC:  SUB.S     F0, F30, F0
  1C0:  ADD.S     F0, F0, F0
  1C4:  TRUNC.W.S F4, F0
  1C8:  MFC1      A2, F4
        .o1CC
  1CC:  LIF       F0, 270.0
  1D4:  NOP
  1D8:  SUB.S     F0, F0, F30
  1DC:  ABS.S     F0, F0
  1E0:  TRUNC.W.S F4, F0
  1E4:  MFC1      V0, F4
  1E8:  NOP
  1EC:  SLTI      V0, V0, 2D
  1F0:  BEQ       V0, R0, .o224
  1F4:  COPY      A0, S4
  1F8:  LIF       F0, 225.0
  200:  NOP
  204:  SUB.S     F0, F30, F0
  208:  ADD.S     F0, F0, F0
  20C:  LIF       F2, 180.0
  214:  NOP
  218:  ADD.S     F0, F0, F2
  21C:  TRUNC.W.S F4, F0
  220:  MFC1      A2, F4
        .o224
  224:  JAL       ~Func:set_variable
  228:  COPY      A1, S0
  22C:  LW        RA, 24 (SP)
  230:  LW        S4, 20 (SP)
  234:  LW        S3, 1C (SP)
  238:  LW        S2, 18 (SP)
  23C:  LW        S1, 14 (SP)
  240:  LW        S0, 10 (SP)
  244:  LDC1      F30, 50 (SP)
  248:  LDC1      F28, 48 (SP)
  24C:  LDC1      F26, 40 (SP)
  250:  LDC1      F24, 38 (SP)
  254:  LDC1      F22, 30 (SP)
  258:  LDC1      F20, 28 (SP)
  25C:  LI        V0, 2
  260:  JR        RA
  264:  ADDIU     SP, SP, 58
}

#new:Function $Function_80219708
{
    0:  ADDIU     SP, SP, FFE8
    4:  LI        A0, 3D4
    8:  SW        RA, 10 (SP)
    C:  JAL       ~Func:set_world_fog_dist
   10:  LI        A1, 3E8
   14:  LI        A0, F
   18:  LI        A1, 5
   1C:  LI        A2, 37
   20:  JAL       ~Func:set_world_fog_color
   24:  LI        A3, FF
   28:  JAL       ~Func:enable_world_fog
   2C:  NOP
   30:  LW        RA, 10 (SP)
   34:  LI        V0, 2
   38:  JR        RA
   3C:  ADDIU     SP, SP, 18
}


#new:FloatTable $FloatTable_8021A434
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:FloatTable $FloatTable_8021C244
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:FloatTable $FloatTable_8021DF84
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:FloatTable $FloatTable_8021F984
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}

#new:Vector3D $Vector3D_80219750
{
	14` 0` -10`
}

#new:Vector3D $Vector3D_8021975C
{
	54` 0` 32`
}

#new:Vector3D $Vector3D_802197A0
{
	10` 0` 10`
}

#new:Vector3D $Vector3D_802197AC
{
	70` 0` 30`
}

#new:Vector3D $Vector3D_802197B8
{
	125` 0` 20`
}

#new:Vector3D $Vector3D_802197C4
{
	-40` 0` -45`
}

#new:Formation $Formation_00
{
	$GoombaKing $Vector3D_802197A0 0000000A 00000000 00000000 00000000 00000000
	$RedGoomba2 $Vector3D_802197AC 0000000A 00000000 00000000 00000000 00000000
	$BlueGoomba2 $Vector3D_802197B8 0000000A 00000000 00000000 00000000 00000000
	$GoomnutTree $Vector3D_802197C4 0000000A 00000000 00000000 00000000 00000000
}

#new:FormationTable $FormationTable
{
	$SJIS_80225860 00000004 $Formation_00 $Stage_8022582C 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_802258BC $Stage_80224730
	$ASCII_802258B4 $Stage_80224B7C
	$ASCII_802258AC $Stage_80224FCC
	$ASCII_802258A4 $Stage_802253D8
	$ASCII_8022589C $Stage_8022582C
	00000000 00000000
}

#new:Function $Function_80218638_22 {
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, V0
   28:  LI        V0, FF81
   2C:  BNE       A0, V0, .o38
   30:  NOP
   34:  LW        A0, 148 (S1)
        .o38
   38:  JAL       ~Func:get_actor
   3C:  NOP
   40:  COPY      A0, V0
   44:  LBU       V1, 136 (A0)
   48:  LI        V0, 47
   4C:  BEQ       V1, V0, .o7C
   50:  SLT       V0, V1, V0
   54:  BNEL      V0, R0, .o9C
   58:  COPY      A0, S1
   5C:  SLTI      V0, V1, 65
   60:  BEQ       V0, R0, .o98
   64:  SLTI      V0, V1, 4D
   68:  BNE       V0, R0, .o9C
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  BEQ       R0, R0, .oA4
   78:  LI        A2, FFFF
        .o7C
   7C:  LW        V1, A8 (A0)
   80:  LI        V0, 1
   84:  BNE       V1, V0, .o9C
   88:  COPY      A0, S1
   8C:  LW        A1, 0 (S0)
   90:  BEQ       R0, R0, .oA4
   94:  LI        A2, FFFF
        .o98
   98:  COPY      A0, S1
        .o9C
   9C:  LW        A1, 0 (S0)
   A0:  CLEAR     A2
        .oA4
   A4:  JAL       ~Func:set_variable
   A8:  NOP
   AC:  LW        RA, 18 (SP)
   B0:  LW        S1, 14 (SP)
   B4:  LW        S0, 10 (SP)
   B8:  LI        V0, 2
   BC:  JR        RA
   C0:  ADDIU     SP, SP, 20
}