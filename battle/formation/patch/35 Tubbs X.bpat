% Script File: 0E Area ARN.bscr
% Decoded from: 4FEA50 to 50F020 (0E Area ARN)

#new:Function $Function_80218000
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218058
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021A4BC
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021A4BC)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021A4BC)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_802181E4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218058
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}


#new:Function $Function_802182E0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218338
{
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   4C:  LA        A3, $FloatTable_8021FD00
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   B4:  LTF       F2, V0 ($FloatTable_8021FD00)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   C8:  LTF       F0, V1 ($FloatTable_8021FD00)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_802184C4
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218338
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}


#new:Function $Function_802185C0
{
    0:  ADDIU     SP, SP, FFE0
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 18 (SP)
   10:  SW        S0, 10 (SP)
   14:  LW        S0, C (S1)
   18:  LW        A1, 0 (S0)
   1C:  JAL       ~Func:get_variable
   20:  ADDIU     S0, S0, 4
   24:  COPY      A0, S1
   28:  LW        A1, 0 (S0)
   2C:  JAL       ~Func:get_variable
   30:  COPY      S0, V0
   34:  COPY      A0, S0
   38:  JAL       ~Func:start_rumble
   3C:  COPY      A1, V0
   40:  LW        RA, 18 (SP)
   44:  LW        S1, 14 (SP)
   48:  LW        S0, 10 (SP)
   4C:  LI        V0, 2
   50:  JR        RA
   54:  ADDIU     SP, SP, 20
}

#new:Function $Function_80218618
{
    0:  ADDIU     SP, SP, FFE8
    4:  SW        S0, 10 (SP)
    8:  COPY      S0, A0
    C:  SW        RA, 14 (SP)
   10:  LW        V0, C (S0)
   14:  JAL       ~Func:get_variable
   18:  LW        A1, 0 (V0)
   1C:  LW        A0, 148 (S0)
   20:  JAL       ~Func:get_actor
   24:  COPY      S0, V0
   28:  BNE       S0, R0, .o40
   2C:  NOP
   30:  LW        V1, 8 (V0)
   34:  LI        V0, 4
   38:  BEQ       R0, R0, .o48
   3C:  SB        V0, 1D (V1)
        .o40
   40:  LW        V0, 8 (V0)
   44:  SB        R0, 1D (V0)
        .o48
   48:  LW        RA, 14 (SP)
   4C:  LW        S0, 10 (SP)
   50:  LI        V0, 2
   54:  JR        RA
   58:  ADDIU     SP, SP, 18
}


#new:Function $Function_80218680
{
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S4, 20 (SP)
   14:  SW        S3, 1C (SP)
   18:  SW        S2, 18 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S0, C (S1)
   24:  LW        A1, 0 (S0)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S0, S0, 4
   30:  LW        A1, 0 (S0)
   34:  ADDIU     S0, S0, 4
   38:  COPY      A0, S1
   3C:  JAL       ~Func:get_variable
   40:  COPY      S2, V0
   44:  LW        A1, 0 (S0)
   48:  ADDIU     S0, S0, 4
   4C:  COPY      A0, S1
   50:  JAL       ~Func:get_variable
   54:  COPY      S4, V0
   58:  LW        A1, 0 (S0)
   5C:  ADDIU     S0, S0, 4
   60:  COPY      A0, S1
   64:  JAL       ~Func:get_variable
   68:  COPY      S3, V0
   6C:  COPY      A0, S1
   70:  LW        A1, 0 (S0)
   74:  JAL       ~Func:get_float_variable
   78:  COPY      S0, V0
   7C:  LW        V0, C (S2)
   80:  MTC1      S4, F2
   84:  NOP
   88:  CVT.S.W   F2, F2
   8C:  SWC1      F2, 4 (V0)
   90:  LW        V0, C (S2)
   94:  MTC1      S3, F2
   98:  NOP
   9C:  CVT.S.W   F2, F2
   A0:  SWC1      F2, 8 (V0)
   A4:  LW        V0, C (S2)
   A8:  MTC1      S0, F2
   AC:  NOP
   B0:  CVT.S.W   F2, F2
   B4:  SWC1      F2, C (V0)
   B8:  LW        V1, C (S2)
   BC:  SWC1      F0, 34 (V1)
   C0:  LW        RA, 24 (SP)
   C4:  LW        S4, 20 (SP)
   C8:  LW        S3, 1C (SP)
   CC:  LW        S2, 18 (SP)
   D0:  LW        S1, 14 (SP)
   D4:  LW        S0, 10 (SP)
   D8:  LI        V0, 2
   DC:  JR        RA
   E0:  ADDIU     SP, SP, 28
}

#new:IdleAnimations $IdleAnimations_80223BC0
{
	.Status:Normal    006C0001
	.Status:Stone     006C0000
	.Status:Sleep     006C0004
	.Status:Poison    006C0001
	.Status:Stop      006C0000
	.Status:Static    006C0000
	.Status:Paralyze  006C0000
	.Status:Paralyze  006C0000
	.Status:Dizzy     006C000D
	.Status:Dizzy     006C000D
	.Status:Fear      006C000A
	.Status:End
}

#new:IdleAnimations $IdleAnimations_80223C1C
{
	.Status:Normal    006C000B
	.Status:Stone     006C0000
	.Status:Sleep     006C0004
	.Status:Poison    006C000B
	.Status:Stop      006C0000
	.Status:Static    006C0000
	.Status:Paralyze  006C0000
	.Status:Paralyze  006C0000
	.Status:Dizzy     006C000D
	.Status:Dizzy     006C000D
	.Status:Fear      006C000A
	.Status:End
}

#new:DefenseTable $DefenseTable_80223C78
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80223C84
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep       0`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy       0`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze    0`
	.Status:Shrink     90`
	.Status:Stop        0`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}

#new:PartsTable $PartsTable_80223D30
{
	00020000 01000000 001800FF $IdleAnimations_80223BC0 $DefenseTable_80223C78 00000000 00000000 00F60000 00000000
	80800001 02003600 00E200FF $IdleAnimations_80223BC0 $DefenseTable_80223C78 00000000 00000000 00F60000 00000000
}

#new:Actor $TubbasHeart
{
	% stats
	[Index]        A5b
	[Level]         0`b
	[MaxHP]       120`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80223C84
	% ai
	[PartsCount]    2`s
	[PartsTable]  $PartsTable_80223D30
	[Script]      $Script_Init_80223DA0
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  50`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         30`b  30`b % width height
	[HealthBar]     5`b   0`b % dx dy
	[StatusTurn]  -10`b  20`b % dx dy
	[StatusIcon]   10`b  20`b % dx dy
}

#new:Script $Script_Init_80223DA0
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   48:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   60:  Call  SetActorVar   ( .Actor:Self 00000004 00000000 )
   78:  Call  SetActorVar   ( .Actor:Self 00000005 00000000 )
   90:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802245C8 )
   A4:  Call  BindIdle      ( .Actor:Self $Script_Idle_80223E98 )
   B8:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80224038 )
   CC:  Call  SetPartTargetFlagBits ( .Actor:Self 00000002 00000002 .True )
   E8:  Return
   F0:  End
}

#new:Script $Script_Idle_80223E98
{
    0:  Label  0
    C:  Call  ActorExists   ( .Actor:Self *Var0 )
   20:  If  *Var0  !=  .False
   30:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   48:  	If  *Var0  !=  00000000
   58:  		Call  GetActorPos       ( .Actor:Self *Var1 *Var2 *Var3 )
   74:  		Call  GetStatusFlags    ( .Actor:Self *Var4 )
   88:  		If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
   98:  			Add   *Var2  0000000F
   A8:  			SetF  *Var4  *Fixed[1.0]
   B8:  		Else
   C0:  			Add   *Var2  00000006
   D0:  			SetF  *Var4  *Fixed[0.4]
   E0:  		EndIf
   E8:  		Call  $Function_80218680    ( *Var0 *Var1 *Var2 *Var3 *Var4 )
  108:  	EndIf
  110:  EndIf
  118:  Wait  1`
  124:  Goto  0
  130:  Return
  138:  End
}

#new:Script $Script_80223FD8
{
    0:  Set   *Var1  006C000E
   10:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   28:  If  *Var0  !=  00000000
   38:  	Set   *Var1  006C000B
   48:  EndIf
   50:  Return
   58:  End
}

#new:Script $Script_HandleEvent_80224038
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetActorScale     ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   30:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   44:  Switch  *Var0
   50:  	CaseOR  ==  .Event:HitCombo % 9
   5C:  	CaseOR  ==  .Event:Hit % A
   68:  		ExecWait  $Script_80223FD8
   74:  		SetConst  *Var0  00000001
   84:  		ExecWait  DoNormalHit
   90:  	EndCaseGroup
   98:  	Case  ==  .Event:BeginFirstStrike % 38
   A4:  	CaseOR  ==  .Event:BurnHit % E
   B0:  	CaseOR  ==  .Event:BurnDeath % 24
   BC:  		SetConst  *Var0  00000001
   CC:  		SetConst  *Var1  006C0010
   DC:  		SetConst  *Var2  006C0011
   EC:  		ExecWait  DoBurnHit
   F8:  	EndCaseGroup
  100:  	Case  ==  .Event:SpinSmashHit % B
  10C:  		ExecWait  $Script_80223FD8
  118:  		SetConst  *Var0  00000001
  128:  		ExecWait  DoSpinSmashHit
  134:  	CaseOR  ==  .Event:ShockHit % 2F
  140:  	CaseOR  ==  .Event:ShockDeath % 26
  14C:  		ExecWait  $Script_80223FD8
  158:  		SetConst  *Var0  00000001
  168:  		ExecWait  DoShockHit
  174:  		ExecWait  $Script_80223FD8
  180:  		SetConst  *Var0  00000001
  190:  		ExecWait  DoJumpBack
  19C:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  1B4:  		ExecWait  $Script_802244DC
  1C0:  	EndCaseGroup
  1C8:  	CaseOR  ==  00000017 % 17
  1D4:  	CaseOR  ==  .Event:Immune % 19
  1E0:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  1EC:  		Set   *Var1  006C0001
  1FC:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  214:  		If  *Var0  !=  00000000
  224:  			Set   *Var1  006C000B
  234:  		EndIf
  23C:  		SetConst  *Var0  00000001
  24C:  		ExecWait  DoImmune
  258:  	EndCaseGroup
  260:  	CaseOR  ==  .Event:Death % 20
  26C:  		ExecWait  $Script_80223FD8
  278:  		SetConst  *Var0  00000001
  288:  		ExecWait  DoNormalHit
  294:  	EndCaseGroup
  29C:  	Case  ==  .Event:SpinSmashDeath % 21
  2A8:  		ExecWait  $Script_80223FD8
  2B4:  		SetConst  *Var0  00000001
  2C4:  		ExecWait  DoSpinSmashHit
  2D0:  	Case  ==  .Event:SpikeContact % 2A
  2DC:  	Case  ==  .Event:BurnContact % 2C
  2E8:  	Case  ==  .Event:EndFirstStrike % 35
  2F4:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  30C:  		ExecWait  $Script_802244DC
  318:  		Call  HPBarToHome   ( .Actor:Self )
  328:  	Case  ==  .Event:RecoverStatus % 31
  334:  		SetConst  *Var0  00000001
  344:  		SetConst  *Var1  006C0001
  354:  		ExecWait  DoRecover
  360:  	Default
  368:  EndSwitch
  370:  Call  GetActorHP    ( .Actor:Self *Var0 )
  384:  If  *Var0  <=  00000005
  394:  	ExecWait  $Script_TubbaHeartDeath
  3A0:  	Return
  3A8:  Else
  3B0:  	Call  UseIdleAnimation  ( .Actor:Self .True )
  3C4:  EndIf
  3CC:  Return
  3D4:  End
}

#new:Script $Script_TubbaHeartDeath
{
    0:  Call  UseBattleCamPreset    ( 0000000E )
   10:  Call  BattleCamTargetActor  ( .Actor:Self )
   20:  Call  MoveBattleCamOver (  40` )
   30:  Wait  40`
   5C:  Call  UseBattleCamPreset    ( 00000002 )
   6C:  Call  MoveBattleCamOver (  25` )
   7C:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
   94:  Call  SetBattleFlagBits ( 00060000 .True )
   B8:  Return
   C0:  End
}

#new:Script $Script_802244DC
{
    0:  Call  SetActorSpeed ( .Actor:Self *Fixed[12.0] )
   14:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.7] )
   28:  Call  SetGoalToHome ( .Actor:Self )
   38:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   54:  Sub   *Var0  0000002D
   64:  Set   *Var1  00000000
   74:  ExecWait  8029C12C
   80:  Call  SetGoalToHome ( .Actor:Self )
   90:  Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
   B0:  Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
   C8:  Call  SetActorYaw   ( .Actor:Self  0` )
   DC:  Return
   E4:  End
}

#new:Script $Script_TakeTurn_802245C8
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   28:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
   4C:  If  *Var0  !=  .HitResult:Miss % 6
   5C:  	Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   74:  	If  *Var0  !&  00000001
   84:  		Call  GetCurrentPartnerID   ( *Var0 )
   94:  		If  *Var0  ==  .Partner:Bow % 9
   A4:  			Call  802535B4  ( 00000000 )
   B4:  			ConstOR  *Var0 00000003
   C4:  			Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
  228:  			Call  GetActorVar       ( .Actor:Self 00000000 *Var0 )
  240:  			If  *Var0  ==  00000000
  250:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  268:  				If  *Var0  !=  00000000
  278:  					Call  802535B4  ( 00000001 )
  288:  				EndIf
  290:  			Else
  298:  				Call  802535B4  ( 00000001 )
  2A8:  			EndIf
  2B0:  		EndIf
  2B8:  	EndIf
  2C0:  EndIf
  2C8:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  2E0:  Switch  *Var0
  2EC:  	Case  ==  00000000
  39C:  		ExecWait  $Script_80225258
  3A8:  		Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  3C0:  		Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  3D8:  		If  *Var0  &  00000002
  3E8:  			Call  802535B4  ( 00000001 )
  3F8:  		EndIf
  400:  	Case  ==  00000001
  40C:  		ExecWait  $Script_HeartSqueeze
  418:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  430:  		If  *Var0  ==  00000000
  440:  			Call  GetActorVar   ( .Actor:Self 00000005 *Var1 )
  458:  			Add   *Var1  00000001
  468:  			Call  SetActorVar   ( .Actor:Self 00000005 *Var1 )
  480:  			If  *Var1  >=  00000002
  490:  				Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
  4A8:  			Else
  4B0:  				Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  4C8:  			EndIf
  4D0:  		EndIf
  4D8:  	Case  ==  00000002
  4E4:  		Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
  4FC:  		ExecWait  $Script_HeartTackle
  508:  EndSwitch
  510:  Call  GetActorVar       ( .Actor:Self 00000002 *Var0 )
  528:  ConstAND  *Var0 FFFFFFFD
  538:  Call  SetActorVar       ( .Actor:Self 00000002 *Var0 )
  550:  Call  UseIdleAnimation  ( .Actor:Self .True )
  564:  Return
  56C:  End
}

#new:Script $Script_HeartTackle
{
    0:  Call  SetTargetActor        ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  BattleCamTargetActor  ( .Actor:Self )
   34:  Call  8024ECF8      ( FFFFFFFF 00000001 00000000 )
   4C:  Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
   64:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
   78:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   94:  Sub   *Var0  0000002D
   A4:  Set   *Var1  00000000
   B4:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   D0:  Call  JumpToGoal    ( .Actor:Self  12` .False .True .False )
   F0:  Call  SetGoalToTarget       ( .Actor:Self )
  100:  Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  11C:  Add   *Var0  00000028
  12C:  Set   *Var1  00000000
  13C:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  150:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  164:  ExecWait  8029C12C
  170:  Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
  188:  Call  SetAnimation  ( .Actor:Self 00000001 006C0016 )
  1A0:  Wait  5`
  1AC:  Call  SetAnimation  ( .Actor:Self 00000001 006C0015 )
  1C4:  Call  EnemyTestTarget       ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  1E8:  Switch  *Var0
  1F4:  	CaseOR  ==  .HitResult:Miss % 6
  200:  	CaseOR  ==  .HitResult:Lucky % 5
  20C:  		Set   *VarA  *Var0
  21C:  		Call  SetGoalToTarget       ( .Actor:Self )
  22C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  248:  		Sub   *Var0  0000001E
  258:  		Set   *Var1  00000000
  268:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.5] )
  27C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  298:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  2B8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2D4:  		Sub   *Var0  00000014
  2E4:  		Set   *Var1  00000000
  2F4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  308:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  324:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  344:  		Sub   *Var0  0000000A
  354:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  370:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  390:  		Wait  20`
  39C:  		Call  UseBattleCamPreset    ( 00000002 )
  3AC:  		If  *VarA  ==  .HitResult:Lucky % 5
  3BC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3E0:  		EndIf
  3E8:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  400:  		ExecWait  $Script_802244DC
  40C:  		Return
  414:  	EndCaseGroup
  41C:  	Default
  424:  		Call  SetGoalToTarget       ( .Actor:Self )
  434:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.3] )
  448:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  468:  EndSwitch
  470:  Wait  2`
  47C:  Call  SetGoalToTarget   ( .Actor:Self )
  48C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
  4B4:  Set   *VarF  *Var0
  4C4:  Switch  *VarF
  4D0:  	CaseOR  ==  .HitResult:Hit % 0
  4DC:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  4E8:  	CaseOR  ==  0000000A % A
  4F4:  		Call  UseBattleCamPreset    ( 00000002 )
  504:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0001 )
  51C:  		Call  SetActorScale ( .Actor:Self *Fixed[1.1] *Fixed[0.8] *Fixed[1.0] )
  538:  		Wait  1`
  544:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  560:  		Wait  1`
  56C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  588:  		Add   *Var0  0000001E
  598:  		Set   *Var1  00000000
  5A8:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  5BC:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  5D8:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  5F8:  		Add   *Var0  00000014
  608:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  624:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  644:  		Add   *Var0  0000000A
  654:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  670:  		Call  JumpToGoal    ( .Actor:Self  4` .False .True .False )
  690:  		Wait  8`
  69C:  		If  *VarF  ==  0000000A % A
  6AC:  			Return
  6B4:  		EndIf
  6BC:  		Call  UseBattleCamPreset    ( 00000002 )
  6CC:  		Call  YieldTurn ( )
  6D8:  		Call  SetAnimation  ( .Actor:Self 00000001 006C0003 )
  6F0:  		ExecWait  $Script_802244DC
  6FC:  	EndCaseGroup
  704:  EndSwitch
  70C:  Return
  714:  End
}

#new:Script $Script_80225258
{
    0:  Call  UseBattleCamPreset    ( 00000013 )
   10:  Call  SetBattleCamTarget    (  85`  50`  0` )
   28:  Call  SetBattleCamZoom  (  280` )
   38:  Call  SetBattleCamOffsetZ   (  0` )
   48:  Call  MoveBattleCamOver (  40` )
   58:  Wait  40`
   64:  Call  SetAnimation      ( .Actor:Self 00000001 006C000B )
   7C:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   98:  Call  GetStatusFlags    ( .Actor:Self *Var4 )
   AC:  If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
   BC:  	Add   *Var1  0000000F
   CC:  	SetF  *Var3  *Fixed[1.0]
   DC:  Else
   E4:  	Add   *Var1  00000006
   F4:  	SetF  *Var3  *Fixed[0.4]
  104:  EndIf
  10C:  Call  PlayEffect    ( ~FX:GatherMagic:Dark *Var0 *Var1 *Var2 *Var3 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  150:  Call  PlayEffect    ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Var3 0000003C 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  194:  Call  PlaySoundAtActor      ( .Actor:Self 000020F7 )
  1A8:  Wait  60`
  1B4:  Call  UseBattleCamPreset    ( 00000002 )
  1C4:  Call  MoveBattleCamOver     (  20` )
  1D4:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  1E8:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  204:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  220:  Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  240:  Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  258:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  274:  Call  GetStatusFlags        ( .Actor:Self *Var4 )
  288:  If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  298:  	Add   *Var1  0000000F
  2A8:  	SetF  *Var3  *Fixed[1.0]
  2B8:  Else
  2C0:  	Add   *Var1  00000006
  2D0:  	SetF  *Var3  *Fixed[0.4]
  2E0:  EndIf
  2E8:  Call  PlayEffect        ( ~FX:EnergyOut:ShortStreaks *Var0 *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  32C:  Call  SetActorVar       ( .Actor:Self 00000004 *VarF )
  344:  Call  EnableActorGlow   ( .Actor:Self .True )
  358:  Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223C1C )
  370:  Return
  378:  End
}

#new:Script $Script_HeartSqueeze
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 00000013 )
   24:  Call  SetBattleCamTarget    (  85`  50`  0` )
   3C:  Call  SetBattleCamZoom  (  280` )
   4C:  Call  SetBattleCamOffsetZ   (  0` )
   5C:  Call  MoveBattleCamOver (  20` )
   6C:  Wait  20`
   78:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   8C:  Call  SetAnimation      ( .Actor:Self 00000001 006C000C )
   A4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   D4:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   E4:  	Add   *Var1  00000010
   F4:  Else
   FC:  	Add   *Var1  00000006
  10C:  EndIf
  114:  Call  PlayEffect        ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  158:  Wait  60`
  164:  Call  UseBattleCamPreset    ( 00000002 )
  174:  Call  MoveBattleCamOver (  20` )
  184:  Call  SetAnimation      ( .Actor:Self 00000001 006C000B )
  19C:  Thread
  1A4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1C0:  	Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
  1D4:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1F0:  	Call  JumpToGoal    ( .Actor:Self  18` .False .True .False )
  210:  EndThread
  218:  Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  230:  Sub   *Var0  00000001
  240:  Call  SetActorVar   ( .Actor:Self 00000001 *Var0 )
  258:  If  *Var0  ==  00000000
  268:  	Call  EnableActorGlow   ( .Actor:Self .False )
  27C:  	Call  GetActorVar       ( .Actor:Self 00000004 *Var0 )
  294:  	Call  RemoveEffect      ( *Var0 )
  2A4:  	Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
  2BC:  	Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_80223BC0 )
  2D4:  EndIf
  2DC:  Call  PlaySound ( 000020F9 )
  2EC:  Call  SetGoalToTarget   ( .Actor:Self )
  2FC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  320:  Switch  *VarA
  32C:  	CaseOR  ==  .HitResult:Miss % 6
  338:  	CaseOR  ==  .HitResult:Lucky % 5
  344:  		Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  360:  		Add   *Var1  00000005
  370:  		Call  PlayEffect    ( ~FX:HeartAttack:Miss *Var0 *Var1 *Var2 *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3B4:  		Wait  145`
  3C0:  		If  *VarA  ==  .HitResult:Lucky % 5
  3D0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3F4:  		Else
  3FC:  		EndIf
  404:  		Return
  40C:  	EndCaseGroup
  414:  EndSwitch
  41C:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  438:  Add   *Var1  00000005
  448:  Call  PlayEffect    ( ~FX:HeartAttack:Success *Var0 *Var1 *Var2 *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  48C:  Thread
  494:  	Wait  160`
  4A0:  	Call  PlaySound ( 000020FC )
  4B0:  EndThread
  4B8:  Call  UseIdleAnimation  ( .Actor:Player .False )
  4CC:  Call  SetAnimation      ( .Actor:Player 00000000 0001002B )
  4E4:  Wait  30`
  4F0:  Call  UseBattleCamPreset    ( 00000013 )
  500:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  51C:  Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  534:  Call  SetBattleCamZoom  (  300` )
  544:  Call  SetBattleCamOffsetZ   (  35` )
  554:  Call  MoveBattleCamOver (  50` )
  564:  Wait  56`
  570:  Call  PlaySoundAtActor  ( .Actor:Player 000003DB )
  584:  Call  SetAnimation      ( .Actor:Player 00000000 0003000C )
  59C:  Wait  37`
  5A8:  Call  PlaySoundAtActor  ( .Actor:Player 000003DB )
  5BC:  Wait  22`
  5C8:  Call  UseBattleCamPreset    ( 00000002 )
  5D8:  Call  MoveBattleCamOver (  10` )
  5E8:  Call  PlaySoundAtActor  ( .Actor:Player 000020FB )
  5FC:  Call  UseIdleAnimation  ( .Actor:Player .True )
  610:  Wait  2`
  61C:  Call  SetGoalToTarget   ( .Actor:Self )
  62C:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 0000000C 00000020 )
  654:  Return
  65C:  End
}


#new:IdleAnimations $IdleAnimations_80225C40
{
	.Status:Normal    006B0001
	.Status:Stone     006B0000
	.Status:Sleep     006B0018
	.Status:Poison    006B0001
	.Status:Stop      006B0000
	.Status:Static    006B0000
	.Status:Paralyze  006B0000
	.Status:Paralyze  006B0000
	.Status:Dizzy     006B0018
	.Status:Fear      006B0000
	.Status:End
}

#new:DefenseTable $DefenseTable_Tubbs
{
	.Element:Normal 00000000
	.Element:End
}

#new:StatusTable $StatusTable_80225CA0
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep      40`
	.Status:Poison      0`
	.Status:Frozen      0`
	.Status:Dizzy      40`
	.Status:Fear        0`
	.Status:Static      0`
	.Status:Paralyze   40`
	.Status:Shrink     50`
	.Status:Stop       40`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod     -1`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod     -1`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod  -1`
	.Status:ShrinkTurnMod    -1`
	.Status:StopTurnMod      -1`
	.Status:End
}

#new:PartsTable $PartsTable_80225D4C
{
	00800000 01000000 F14B00FF $IdleAnimations_80225C40 $DefenseTable_Tubbs 00000000 00000000 00F60000 00000000
}

#new:Actor $TubbaBlubba
{
	% stats
	[Index]        A3b
	[Level]         0`b
	[MaxHP]       150`b
	[Coins]         0`b
	[Flags]       00000000
	[StatusTable] $StatusTable_80225CA0
	% ai
	[PartsCount]    1`s
	[PartsTable]  $PartsTable_80225D4C
	[Script]      $Script_Init_80225D98
	% move effectiveness
	[Escape]        0`b
	[Item]          0`b
	[AirLift]       0`b
	[Hurricane]     0`b % Bow's "Spook" as well
	[UpAndAway]     0`b
	[PowerBounce]  40`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]        110`b 100`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -33`b  78`b % dx dy
	[StatusIcon]   10`b  75`b % dx dy
}

#new:Script $Script_Init_80225D98
{
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_802264AC )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_80225F58 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_802260D0 )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   54:  Exec  $Script_80225E08
   60:  Return
   68:  End
}

#new:Script $Script_80225E08
{
    0:  Label  0
    C:  Wait  1`
   18:  Call  ActorExists   ( .Actor:Self *Var0 )
   2C:  If  *Var0  ==  .False
   3C:  	Return
   44:  EndIf
   4C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   60:  If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
   70:  	Goto  0
   7C:  EndIf
   84:  Call  GetAnimation  ( .Actor:Self 00000001 *Var0 )
   9C:  If  *Var0  ==  006B0006
   AC:  	Goto  1
   B8:  EndIf
   C0:  If  *Var0  ==  006B0007
   D0:  	Goto  1
   DC:  EndIf
   E4:  Goto  0
   F0:  Label  1
   FC:  Call  StartRumble   ( 00000001 )
  10C:  Call  ShakeCam      ( .Cam:Battle 00000000  2` *Fixed[0.5] )
  128:  Wait  1`
  134:  Goto  0
  140:  Return
  148:  End
}

#new:Script $Script_Idle_80225F58
{
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_80225F8C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000008 *Var0 )
   18:  If  *Var0  ==  00000000
   28:  	Return
   30:  EndIf
   38:  Return
   40:  End
}

#new:Script $Script_80225FD4
{
    0:  Set   *Var1  006B0001
   10:  ExecWait  $Script_80225F8C
   1C:  Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
   34:  Call  SetGoalToHome ( .Actor:Self )
   44:  Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
   58:  Set   *Var1  006B0006
   68:  ExecWait  $Script_80225F8C
   74:  Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
   8C:  Call  RunToGoal     ( .Actor:Self  0` .False )
   A4:  Set   *Var1  006B0001
   B4:  ExecWait  $Script_80225F8C
   C0:  Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
   D8:  Call  SetActorYaw   ( .Actor:Self  0` )
   EC:  Return
   F4:  End
}

#new:Script $Script_HandleEvent_802260D0
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *VarA )
   3C:  Switch  *VarA
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  006B0014
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  006B0014
   C0:  		SetConst  *Var2  FFFFFFFF
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  006B0014
  108:  		SetConst  *Var2  FFFFFFFF
  118:  		ExecWait  DoBurnHit
  124:  		ExecWait  $Script_80227878
  130:  		Return
  138:  	Case  ==  .Event:SpinSmashHit % B
  144:  		SetConst  *Var0  00000001
  154:  		SetConst  *Var1  006B0014
  164:  		ExecWait  DoSpinSmashHit
  170:  	Case  ==  .Event:ShockHit % 2F
  17C:  		Call  UseBattleCamPreset    ( 00000002 )
  18C:  		Call  MoveBattleCamOver     (  20` )
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  006B0014
  1BC:  		ExecWait  DoShockHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  006B0014
  1E8:  		ExecWait  DoJumpBack
  1F4:  		ExecWait  $Script_80225FD4
  200:  	CaseOR  ==  00000017 % 17
  20C:  	CaseOR  ==  .Event:Immune % 19
  218:  	CaseOR  ==  .Event:AirLiftFailed % 1F
  224:  		SetConst  *Var0  00000001
  234:  		SetConst  *Var1  006B0001
  244:  		ExecWait  DoImmune
  250:  	EndCaseGroup
  258:  	Case  ==  .Event:ShockDeath % 26
  264:  		Call  UseBattleCamPreset    ( 00000002 )
  274:  		Call  MoveBattleCamOver     (  20` )
  284:  		SetConst  *Var0  00000001
  294:  		SetConst  *Var1  006B0014
  2A4:  		ExecWait  DoShockHit
  2B0:  		ExecWait  $Script_80227878
  2BC:  		Return
  2C4:  	Case  ==  .Event:Death % 20
  2D0:  		SetConst  *Var0  00000001
  2E0:  		SetConst  *Var1  006B0014
  2F0:  		ExecWait  DoNormalHit
  2FC:  		ExecWait  $Script_80227878
  308:  		Return
  310:  	Case  ==  .Event:SpinSmashDeath % 21
  31C:  		SetConst  *Var0  00000001
  32C:  		SetConst  *Var1  006B0014
  33C:  		ExecWait  DoSpinSmashHit
  348:  		ExecWait  $Script_80227878
  354:  		Return
  35C:  	Case  ==  .Event:RecoverStatus % 31
  368:  		SetConst  *Var0  00000001
  378:  		SetConst  *Var1  006B0001
  388:  		ExecWait  DoRecover
  394:  	Default
  39C:  EndSwitch
  3A4:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B8:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3CC:  Return
  3D4:  End
}

#new:Script $Script_TakeTurn_802264AC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  RandInt   ( 00000064 *Var0 )
   3C:  If  *Var0  <  0000003C
   4C:  	ExecWait  $Script_80226558
   58:  Else
   60:  	ExecWait  $Script_80226B88
   6C:  EndIf
   74:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
   88:  Call  UseIdleAnimation  ( .Actor:Self .True )
   9C:  Return
   A4:  End
}

#new:Script $Script_80226558
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  SetBattleCamZoom  (  150` )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Set   *Var1  006B0006
   6C:  ExecWait  $Script_80225F8C
   78:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
   B4:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
   C4:  	Call  AddGoalPos    ( .Actor:Self  50`  0`  0` )
   E0:  Else
   E8:  	Call  AddGoalPos    ( .Actor:Self  20`  0`  0` )
  104:  EndIf
  10C:  Call  SetActorSpeed ( .Actor:Self *Fixed[4.0] )
  120:  Call  RunToGoal     ( .Actor:Self  0` .False )
  138:  Call  SetAnimation  ( .Actor:Self 00000001 006B0015 )
  150:  Wait  8`
  15C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  170:  Call  SetAnimation  ( .Actor:Self 00000001 006B0016 )
  188:  Wait  20`
  194:  Call  SetAnimation  ( .Actor:Self 00000001 006B0017 )
  1AC:  Wait  3`
  1B8:  Call  SetGoalToTarget   ( .Actor:Self )
  1C8:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  1DC:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  1EC:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  208:  	Set   *Var1  00000000
  218:  	Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  25C:  	Thread
  264:  		Call  StartRumble   ( 00000001 )
  274:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[15.0] )
  290:  	EndThread
  298:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  2AC:  EndIf
  2B4:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  2D8:  Switch  *VarA
  2E4:  	CaseOR  ==  .HitResult:Miss % 6
  2F0:  	CaseOR  ==  .HitResult:Lucky % 5
  2FC:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  318:  		Call  PlayEffect        ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  35C:  		Wait  30`
  368:  		Set   *Var1  006B0001
  378:  		ExecWait  $Script_80225F8C
  384:  		Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
  39C:  		Call  UseBattleCamPreset    ( 00000002 )
  3AC:  		Call  MoveBattleCamOver (  20` )
  3BC:  		If  *VarA  ==  00000005
  3CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3F0:  		EndIf
  3F8:  		ExecWait  $Script_80225FD4
  404:  		Return
  40C:  	EndCaseGroup
  414:  	Default
  41C:  EndSwitch
  424:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  438:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  448:  	Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  464:  	Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  4A8:  EndIf
  4B0:  Wait  2`
  4BC:  Call  SetGoalToTarget   ( .Actor:Self )
  4CC:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  4DC:  	Call  80269EAC  ( 00000017 )
  4EC:  EndIf
  4F4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000004 00000020 )
  51C:  Call  UseBattleCamPreset    ( 0000003F )
  52C:  Call  SetBattleCamZoom  (  200` )
  53C:  Call  BattleCamTargetActor  ( .Actor:Self )
  54C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  564:  Call  MoveBattleCamOver (  30` )
  574:  Switch  *VarF
  580:  	CaseOR  ==  .HitResult:Hit % 0
  58C:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  598:  		Wait  30`
  5A4:  		Set   *Var1  006B0001
  5B4:  		ExecWait  $Script_80225F8C
  5C0:  		Call  SetAnimation  ( .Actor:Self 00000001 *Var1 )
  5D8:  		Call  UseBattleCamPreset    ( 00000002 )
  5E8:  		Call  MoveBattleCamOver     (  20` )
  5F8:  		Call  YieldTurn ( )
  604:  		ExecWait  $Script_80225FD4
  610:  	EndCaseGroup
  618:  EndSwitch
  620:  Return
  628:  End
}

#new:Script $Script_80226B88
{
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  UseBattleCamPreset    ( 0000003F )
   24:  Call  SetBattleCamZoom  (  150` )
   34:  Call  BattleCamTargetActor  ( .Actor:Self )
   44:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   5C:  Set   *Var1  006B0006
   6C:  ExecWait  $Script_80225F8C
   78:  Call  SetAnimation      ( .Actor:Self 00000001 *Var1 )
   90:  Call  SetGoalToTarget   ( .Actor:Self )
   A0:  Call  AddGoalPos        ( .Actor:Self  70`  0`  0` )
   BC:  Call  SetActorSpeed     ( .Actor:Self *Fixed[4.0] )
   D0:  Call  RunToGoal ( .Actor:Self  0` .False )
   E8:  Call  SetAnimation      ( .Actor:Self 00000001 006B000A )
  100:  Wait  8`
  10C:  Call  SetAnimation      ( .Actor:Self 00000001 006B000B )
  124:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000003E7 00000000 )
  140:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  164:  Switch  *Var0
  170:  	CaseOR  ==  .HitResult:Miss % 6
  17C:  	CaseOR  ==  .HitResult:Lucky % 5
  188:  		Set   *VarA  *Var0
  198:  		Thread
  1A0:  			Wait  12`
  1AC:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
  1C4:  		EndThread
  1CC:  		Call  SetGoalToTarget       ( .Actor:Self )
  1DC:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  1F8:  		Sub   *Var0  0000000F
  208:  		Set   *Var1  00000000
  218:  		Add   *Var2  00000005
  228:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  23C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  258:  		Call  JumpToGoal    ( .Actor:Self  23` .False .True .False )
  278:  		Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  28C:  		Call  PlayEffect    ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D0:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
  2E8:  		Thread
  2F0:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  30C:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  350:  		EndThread
  358:  		Thread
  360:  			Call  StartRumble   ( 00000001 )
  370:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  38C:  		EndThread
  394:  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  3A8:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  3C4:  		Sub   *Var0  00000014
  3D4:  		Set   *Var1  00000000
  3E4:  		Add   *Var2  00000005
  3F4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  408:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  424:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  444:  		Call  StartRumble   ( 00000001 )
  454:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  470:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  48C:  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  4D0:  		If  *VarA  ==  .HitResult:Lucky % 5
  4E0:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  504:  		EndIf
  50C:  		Call  UseBattleCamPreset    ( 00000002 )
  51C:  		Call  MoveBattleCamOver     (  20` )
  52C:  		Wait  8`
  538:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
  550:  		Wait  4`
  55C:  		ExecWait  $Script_80225FD4
  568:  		Return
  570:  	EndCaseGroup
  578:  	Default
  580:  		Thread
  588:  			Wait  9`
  594:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000C )
  5AC:  		EndThread
  5B4:  		Call  SetGoalToTarget       ( .Actor:Self )
  5C4:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  5D8:  		Call  JumpToGoal    ( .Actor:Self  16` .False .True .False )
  5F8:  EndSwitch
  600:  Wait  2`
  60C:  Call  SetGoalToTarget   ( .Actor:Self )
  61C:  Call  GetStatusFlags    ( .Actor:Self *Var5 )
  630:  If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  640:  	Call  80269EAC  ( 00000018 )
  650:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  664:  EndIf
  66C:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 00000006 00000020 )
  694:  Call  UseBattleCamPreset    ( 0000003F )
  6A4:  Call  SetBattleCamZoom  (  200` )
  6B4:  Call  BattleCamTargetActor  ( .Actor:Self )
  6C4:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  6DC:  Call  MoveBattleCamOver (  30` )
  6EC:  Switch  *VarF
  6F8:  	CaseOR  ==  .HitResult:Hit % 0
  704:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  710:  		Call  GetStatusFlags    ( .Actor:Self *Var5 )
  724:  		If  *Var5  &  ~Flags:StatusFlags:Shrink % 80000
  734:  			Goto  1
  740:  		EndIf
  748:  		Call  GetBattleFlags    ( *Var0 )
  758:  		If  *Var0  !&  80000000
  768:  			Call  GetStatusFlags    ( .Actor:Player *Var0 )
  77C:  			If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
  78C:  				Call  LandJump  ( .Actor:Self )
  79C:  			Else
  7A4:  				Goto  1
  7B0:  			EndIf
  7B8:  		Else
  7C0:  			Goto  1
  7CC:  		EndIf
  7D4:  		Label  0
  7E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7FC:  		Call  PlayEffect    ( ~FX:ShockWave:White *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  840:  		Call  SetAnimation  ( .Actor:Self 00000001 006B000D )
  858:  		Thread
  860:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  87C:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  8C0:  		EndThread
  8C8:  		Thread
  8D0:  			Call  StartRumble   ( 00000001 )
  8E0:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  8FC:  		EndThread
  904:  		Call  ResetActorSounds      ( .Actor:Self .ActorSound:Jump )
  918:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  934:  		Sub   *Var0  00000014
  944:  		Set   *Var1  00000000
  954:  		Add   *Var2  00000005
  964:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.0] )
  978:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  994:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  9B4:  		Call  StartRumble   ( 00000001 )
  9C4:  		Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  9E0:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  9FC:  		Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  A40:  		Goto  2
  A4C:  		Label  1
  A58:  		Call  GetStatusFlags        ( .Actor:Self *Var5 )
  A6C:  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  A7C:  			Wait  3`
  A88:  			Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  AA4:  			Call  PlayEffect    ( ~FX:ShockWave:LargeWhite *Var0 00000000 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AE8:  			Call  StartRumble   ( 00000001 )
  AF8:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  B14:  		EndIf
  B1C:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B38:  		Add   *Var0  00000028
  B48:  		Set   *Var1  00000000
  B58:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  B6C:  		Thread
  B74:  			Wait  8`
  B80:  			Call  SetAnimation  ( .Actor:Self 00000001 006B000E )
  B98:  		EndThread
  BA0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BBC:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  BDC:  		If  *Var5  !&  ~Flags:StatusFlags:Shrink % 80000
  BEC:  			Call  StartRumble   ( 00000001 )
  BFC:  			Call  ShakeCam      ( .Cam:Battle 00000000  5` *Fixed[3.0] )
  C18:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  C34:  			Call  PlayEffect    ( ~FX:SmokeImpact:Large *Var0 *Var1 *Var2 0000003C 00000008 0000000A 00000014 00000000 00000000 00000000 00000000 00000000 )
  C78:  			Wait  8`
  C84:  		EndIf
  C8C:  		Label  2
  C98:  		Call  UseBattleCamPreset    ( 00000002 )
  CA8:  		Call  MoveBattleCamOver     (  20` )
  CB8:  		Call  YieldTurn ( )
  CC4:  		ExecWait  $Script_80225FD4
  CD0:  	EndCaseGroup
  CD8:  EndSwitch
  CE0:  Return
  CE8:  End
}

#new:Script $Script_80227878
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 006B0014 )
   18:  Call  ActorSpeak    ( 000E00C9 .Actor:Self 00000001 006B0014 006B0014 ) % Eeeeoooow!!
   38:  Set   *Var0  00000001
   48:  Set   *Var1  006B0014
   58:  ExecWait  DoDeath
   64:  Return
   6C:  End
}


#new:Script $Script_BeforeBattle_802278F0
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_80227910
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227920
{
	FFFFFFFF
	~Model:arn_bt01:iwa4
	00000000
}

#new:Stage $Stage_8022792C
{
	$ASCII_802282D8  % arn_tex
	$ASCII_802282C8  % arn_bt01_shape
	$ASCII_802282B8  % arn_bt01_hit
	$Script_BeforeBattle_802278F0
	$Script_AfterBattle_80227910
	$ASCII_802282B0  % arn_bg
	$ForegroundModelList_80227920
	00000000
	00000000
	00000000
}


#new:Script $Script_80227960
{
    0:  Set   *VarA  *Var0
   10:  Set   *Var0  00000000
   20:  Label  0
   2C:  Add   *Var0  00000001
   3C:  If  *Var0  >  00000167
   4C:  	Sub   *Var0  00000168
   5C:  EndIf
   64:  Call  RotateModel   ( *VarA *Var0 00000000 00000000 00000001 )
   84:  Wait  1`
   90:  Goto  0
   9C:  Return
   A4:  End
}

#new:Script $Script_BeforeBattle_80227A0C
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Set   *Var0  00000008
   20:  ExecWait  $Script_80227960
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80227A48
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227A58
{
	FFFFFFFF
	~Model:arn_bt02:iwa4
	00000000
}

#new:Stage $Stage_80227A64
{
	$ASCII_80228308  % arn_tex
	$ASCII_802282F8  % arn_bt07_shape
	$ASCII_802282E8  % arn_bt07_hit
	$Script_BeforeBattle_80227A0C
	$Script_AfterBattle_80227A48
	$ASCII_802282E0  % arn_bg
	$ForegroundModelList_80227A58
	00000000
	00000000
	00000000
}


#new:Script $Script_BeforeBattle_80227A90
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_80227AB0
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227AC0
{
	FFFFFFFF
	~Model:arn_bt03:iwa4
	00000000
}

#new:Stage $Stage_80227ACC
{
	$ASCII_80228338  % arn_tex
	$ASCII_80228328  % arn_bt03_shape
	$ASCII_80228318  % arn_bt03_hit
	$Script_BeforeBattle_80227A90
	$Script_AfterBattle_80227AB0
	$ASCII_80228310  % arn_bg
	$ForegroundModelList_80227AC0
	00000000
	00000000
	00000000
}


#new:Script $Script_BeforeBattle_80227B00
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80227B3C
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227B4C
{
	~Model:arn_bt04:o349
	00000000
}

#new:Stage $Stage_80227B54
{
	$ASCII_80228360  % arn_tex
	$ASCII_80228350  % arn_bt04_shape
	$ASCII_80228340  % arn_bt04_hit
	$Script_BeforeBattle_80227B00
	$Script_AfterBattle_80227B3C
	00000000
	$ForegroundModelList_80227B4C
	00000000
	00000000
	00000000
}


#new:Script $Script_BeforeBattle_80227B80
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Call  SetCamBGColor     ( .Cam:Battle  0`  0`  0` )
   2C:  Return
   34:  End
}

#new:Script $Script_AfterBattle_80227BBC
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227BCC
{
	~Model:arn_bt05:o354
	00000000
}

#new:Stage $Stage_80227BD4
{
	$ASCII_80228388  % arn_tex
	$ASCII_80228378  % arn_bt05_shape
	$ASCII_80228368  % arn_bt05_hit
	$Script_BeforeBattle_80227B80
	$Script_AfterBattle_80227BBC
	00000000
	$ForegroundModelList_80227BCC
	00000000
	00000000
	00000000
}


#new:Script $Script_BeforeBattle_80227C00
{
    0:  Call  SetSpriteShading  ( FFFFFFFF )
   10:  Return
   18:  End
}

#new:Script $Script_AfterBattle_80227C20
{
    0:  Return
    8:  End
}

#new:ForegroundModelList $ForegroundModelList_80227C30
{
	~Model:arn_bt06:kabe3
	00000000
}

#new:Stage $Stage_80227C38
{
	$ASCII_802283B0  % arn_tex
	$ASCII_802283A0  % arn_bt06_shape
	$ASCII_80228390  % arn_bt06_hit
	$Script_BeforeBattle_80227C00
	$Script_AfterBattle_80227C20
	00000000
	$ForegroundModelList_80227C30
	00000000
	00000000
	00000000
}

#new:Vector3D $Vector3D_802280C0
{
	65` 0` 0`
}

#new:Formation $Formation_00
{
	$TubbasHeart $Vector3D_802280C0 0000000A 00000000 00000000 00000000 00000000
	$TubbaBlubba $Vector3D_802280E8 0000000A 00000000 00000000 00000000 00000000
}

#new:Vector3D $Vector3D_802280E8
{
	100` 0` 10`
}

#new:FormationTable $FormationTable
{
	$SJIS_802283B8 00000002 $Formation_00 $Stage_8022792C 00000000
	00000000 00000000 00000000 00000000 00000000
}

#new:StageTable $StageTable
{
	$ASCII_802285BC $Stage_8022792C
	$ASCII_802285B4 $Stage_80227A64
	$ASCII_802285AC $Stage_80227ACC
	$ASCII_802285A4 $Stage_80227B54
	$ASCII_8022859C $Stage_80227BD4
	$ASCII_80228594 $Stage_80227C38
	00000000 00000000
}

#new:ASCII $ASCII_802282B0
{
	"arn_bg"
}

#new:ASCII $ASCII_802282B8
{
	"arn_bt01_hit"
}

#new:ASCII $ASCII_802282C8
{
	"arn_bt01_shape"
}

#new:ASCII $ASCII_802282D8
{
	"arn_tex"
}

#new:ASCII $ASCII_802282E0
{
	"arn_bg"
}

#new:ASCII $ASCII_802282E8
{
	"arn_bt07_hit"
}

#new:ASCII $ASCII_802282F8
{
	"arn_bt07_shape"
}

#new:ASCII $ASCII_80228308
{
	"arn_tex"
}

#new:ASCII $ASCII_80228310
{
	"arn_bg"
}

#new:ASCII $ASCII_80228318
{
	"arn_bt03_hit"
}

#new:ASCII $ASCII_80228328
{
	"arn_bt03_shape"
}

#new:ASCII $ASCII_80228338
{
	"arn_tex"
}

#new:ASCII $ASCII_80228340
{
	"arn_bt04_hit"
}

#new:ASCII $ASCII_80228350
{
	"arn_bt04_shape"
}

#new:ASCII $ASCII_80228360
{
	"arn_tex"
}

#new:ASCII $ASCII_80228368
{
	"arn_bt05_hit"
}

#new:ASCII $ASCII_80228378
{
	"arn_bt05_shape"
}

#new:ASCII $ASCII_80228388
{
	"arn_tex"
}

#new:ASCII $ASCII_80228390
{
	"arn_bt06_hit"
}

#new:ASCII $ASCII_802283A0
{
	"arn_bt06_shape"
}

#new:ASCII $ASCII_802283B0
{
	"arn_tex"
}

#new:SJIS $SJIS_802283B8
{
	ドガボン % dogabon
}

#new:SJIS $SJIS_802283C4
{
	ドガボンしんぞう % dogabonshinzou
}

#new:SJIS $SJIS_802283D8
{
	ハイパーシンエモンx2,ハイパークリボーx2 % haipa-shin'emonx2,haipa-kuribo-x2
}

#new:SJIS $SJIS_80228400
{
	ハイパーシンエモン,ハイパークリボーx2 % haipa-shin'emon,haipa-kuribo-x2
}

#new:SJIS $SJIS_80228428
{
	ハイパーシンエモンx3 % haipa-shin'emonx3
}

#new:SJIS $SJIS_80228440
{
	ハイパーシンエモンx2 % haipa-shin'emonx2
}

#new:SJIS $SJIS_80228458
{
	ハイパーシンエモン % haipa-shin'emon
}

#new:SJIS $SJIS_8022846C
{
	ハイパーパタクリボーx4 % haipa-patakuribo-x4
}

#new:SJIS $SJIS_80228484
{
	ハイパーパタクリボーx3 % haipa-patakuribo-x3
}

#new:SJIS $SJIS_8022849C
{
	ハイパーパタクリボーx2 % haipa-patakuribo-x2
}

#new:SJIS $SJIS_802284B4
{
	ハイパーパタクリボー % haipa-patakuribo-
}

#new:SJIS $SJIS_802284CC
{
	ハイパークリボーx2,ハイパーパタクリボー,ハイパークリボー % haipa-kuribo-x2,haipa-patakuribo-,haipa-kuribo-
}

#new:SJIS $SJIS_80228508
{
	ハイパークリボーx3,ハイパーパタクリボー % haipa-kuribo-x3,haipa-patakuribo-
}

#new:SJIS $SJIS_80228530
{
	ハイパークリボーx2,ハイパーパタクリボー % haipa-kuribo-x2,haipa-patakuribo-
}

#new:SJIS $SJIS_80228558
{
	ハイパークリボーx３ % haipa-kuribo-x3
}

#new:SJIS $SJIS_8022856C
{
	ハイパークリボーx２ % haipa-kuribo-x2
}

#new:SJIS $SJIS_80228580
{
	ハイパークリボー % haipa-kuribo-
}

#new:ASCII $ASCII_80228594
{
	"arn_06"
}

#new:ASCII $ASCII_8022859C
{
	"arn_05"
}

#new:ASCII $ASCII_802285A4
{
	"arn_04"
}

#new:ASCII $ASCII_802285AC
{
	"arn_03"
}

#new:ASCII $ASCII_802285B4
{
	"arn_02"
}

#new:ASCII $ASCII_802285BC
{
	"arn_01"
}



#new:FloatTable $FloatTable_8021A4BC
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}


#new:FloatTable $FloatTable_8021FD00
{
	0.0      0.017452 0.034899 0.052336 0.069756 0.087156 0.104528 0.121869
	0.139173 0.156434 0.173648 0.190809 0.207912 0.224951 0.241922 0.258819
	0.275637 0.292372 0.309017 0.325568 0.34202  0.358368 0.374607 0.390731
	0.406737 0.422618 0.438371 0.45399  0.469472 0.48481  0.5      0.515038
	0.529919 0.544639 0.559193 0.573576 0.587785 0.601815 0.615661 0.62932
	0.642788 0.656059 0.669131 0.681998 0.694658 0.707107 0.71934  0.731354
	0.743145 0.75471  0.766044 0.777146 0.788011 0.798636 0.809017 0.819152
	0.829038 0.838671 0.848048 0.857167 0.866025 0.87462  0.882948 0.891007
	0.898794 0.906308 0.913545 0.920505 0.927184 0.93358  0.939693 0.945519
	0.951057 0.956305 0.961262 0.965926 0.970296 0.97437  0.978148 0.981627
	0.984808 0.987688 0.990268 0.992546 0.994522 0.996195 0.997564 0.99863
	0.999391 0.999848 1.0
}