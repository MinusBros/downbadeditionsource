%We don't really need the unused Bowser 
%and the Intro Bowser anymore.

#delete $IdleAnimations_8021D2E0
#delete $DefenseTable_8021D334
#delete $StatusTable_8021D340
#delete $PartsTable_8021D3EC
#delete $UnusedBowser
#delete $Script_Init_8021D438
#delete $Script_Idle_8021D4CC
#delete $Script_HandleEvent_8021D500
#delete $Script_8021D80C
#delete $Script_8021D838
#delete $Script_TakeTurn_8021D880
#delete $Script_8021DA28
#delete $Script_8021DAFC
#delete $Script_8021DEB0
#delete $Script_8021E504
#delete $Script_8021E93C
#delete $Script_8021EEF8
#delete $Script_8021F024
#delete $IdleAnimations_8021F1C0
#delete $DefenseTable_8021F214
#delete $DefenseTable_8021F220
#delete $StatusTable_8021F22C
#delete $StatusTable_8021F2D8
#delete $PartsTable_8021F384
#delete $IntroBowser
#delete $Script_Init_8021F3D0
#delete $Script_Idle_8021F53C
#delete $Script_NextTurn_8021F598
#delete $Script_HandleEvent_8021F800
#delete $Script_8021FBA0
#delete $Script_8021FBCC
#delete $Script_TakeTurn_8021FC14
#delete $Script_IntroClawSwipe
#delete $Script_IntroFireBreath
#delete $Script_IntroUseStarRod
#delete $Script_80220820
#delete $Script_80220974
#delete $Script_80220990
#delete $Script_80221128
#delete $Script_80221328



#new:Script $ShowMessage1
{
	Call  ActorSpeak        ( 001F004D .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Akuma no Midarana Inazuma (Devil's Horny Lightning)
	Return 
	End
}

#new:Script $ShowMessage2
{
	Call  ActorSpeak        ( 001F004E .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Han-Kirisuto no Tatchi (Touch of the Demi-Christ)
	Return
	End
}

#new:Script $ShowMessage3
{
	Call  ActorSpeak        ( 001F004F .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Seiyoku to Jigoku (Sexual Desire Inferno)
	Return 
	End
}

#new:Script $ShowMessage4
{
	Call  ActorSpeak        ( 001F0050 .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Rikon Bīmu-ha (Divorce Beam Wave)
	Return
	End
}

#new:Script $ShowMessage5
{
	Call  ActorSpeak        ( 001F0051 .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Kakushitsu no Chikyū Funsai (Horny Earth Crush)
	Return
	End
}

#new:Script $ShowMessage6
{
	Call  ActorSpeak        ( 001F005F .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Wakusei no Yokubou (Lust of the Planet)
	Return
	End
}

#new:Script $ShowMessage7
{
	Call  ActorSpeak        ( 001F0060 .Actor:Enemy0 00000001 FFFFFFFF FFFFFFFF ) %Tsumi o Uwagaki Suru (Overwrite Sins)
	Return
	End
}

#new:Function $Function_BowserFireRecolor
{
    0:  ADDIU        SP, SP, FFE8
    4:  SW            RA, 10 (SP)
    8:  LW            V0, C (A0)
    C:  JAL            ~Func:get_variable
   10:  LW            A1, 0 (V0)
   14:  LW            V1, C (V0)
   18:  LIO            AT, 3D23D70A
   20:  MTC1        AT, F0
   24:  NOP
   28:  SWC1        F0, 38 (V1)
   2C:  SWC1        F0, 30 (V1)
   30:  LW            V1, C (V0)
   34:  LIF            F0, 1.875
   3C:  NOP
   40:  SWC1        F0, 34 (V1)
   44:  LW            V1, C (V0)
   48:  LIO            AT, 3D4CCCCD
   50:  MTC1        AT, F0
   54:  NOP
   58:  SWC1        F0, 3C (V1)
        %offsets 64, 68, 6C control a different color (the middle color?)        (original = 000000FF 000000AA 0000002A)        Note that these colors sometimes influence the colors of the other fireballs
        %targeting 320/5/100 HSV = FFF2FB
        LI            AT, FF
        SW            AT, 64 (V1)
        LI            AT, F2
        SW            AT, 68 (V1)
        LI            AT, FB
        SW            AT, 6C (V1)
        %offsets 70, 74, 78 for r g and b (of the boundary color?)    (original = 000000F3 00000030 00000000)
        %targeting 70/10/100 HSV = FBFFE6
        LI            AT, FB
        SW            AT, 70 (V1)
        LI            AT, FF
        SW            AT, 74 (V1)
        LI            AT, E6
        SW            AT, 78 (V1)
   5C:  LW            RA, 10 (SP)
   60:  ADDIU        V0, R0, 2
   64:  JR            RA
   68:  ADDIU        SP, SP, 18
}

@	$Bowser1
{
	[MaxHP]       150`b
	[PowerBounce]  50`b
	[Size]         85`b  92`b % width height
	[PowerBounce]   3`b
}

%Honestly surprised Bower doesn't have any unique
%sleeping or dizzy animations, so I decided to
%give him some.

@	$IdleAnimations_802214B0
{
	.Status:Normal    00810002
	.Status:Stone     00810000
	.Status:Sleep     00810025
	.Status:Poison    00810002
	.Status:Stop      00810000
	.Status:Static    00810000
	.Status:Paralyze  00810000
	.Status:Paralyze  00810000
	.Status:Dizzy     0081000B
	.Status:Dizzy     0081000B
	.Status:End
}


%Bower gets multiple actions per turn.
%When he Star Rods, he will immediately 
%go for Breath afterwards.

@	$Script_Init_802216C0
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000004 00000003 )
   48:  Call  SetActorVar   ( .Actor:Self 00000005 00000003 )
   60:  Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
   78:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   90:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   A8:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000007 00000001 )
   D8:  Call  SetActorVar   ( .Actor:Self 0000000E 00000000 )
		Call  SetActorScale ( .Actor:Self *Fixed[1.05] *Fixed[1.05] *Fixed[1.0] )
   F0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80222B48 )
  104:  Call  BindIdle      ( .Actor:Self $Script_Idle_80221844 )
  118:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80221B18 )
  12C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_80221970 )
  140:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000064 00000000 00000000 00000000 )
  168:  Exec  $Script_80222E2C
  174:  Return
  17C:  End
}


@	$Script_HandleEvent_80221B18
{
  [950]  			Loop  00000002
  [9B0]  				Wait  5`
  [A24]  				Wait  5`
  [A38]  			Wait  10`
  [AB4]  		Wait  10`
}

@	$Script_80223E20
{
    0:  Call  AddActorVar   ( .Actor:Self 00000000 00000001 )
   18:  Call  AddActorVar   ( .Actor:Self 00000004 00000001 )
   30:  Call  AddActorVar   ( .Actor:Self 00000005 00000001 )
   48:  Call  AddActorVar   ( .Actor:Self 00000002 00000001 )
   60:  Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
   78:  Call  AddActorVar   ( .Actor:Self 00000006 00000001 )
   90:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   A8:  If  *Var0  ==  00000002
   B8:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   CC:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   DC:  		Call  UseBattleCamPreset    ( 00000013 )
   EC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  		Sub   *Var0  0000000F
  118:  		Add   *Var1  0000003C
  128:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  140:  		Call  SetBattleCamZoom      (  420` )
  150:  		Call  SetBattleCamOffsetZ   (  0` )
  160:  		Call  MoveBattleCamOver     (  30` )
  170:  	Else
  178:  		Call  UseBattleCamPreset    ( 00000013 )
  188:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1A4:  		Sub   *Var0  00000006
  1B4:  		Add   *Var1  00000018
  1C4:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  1DC:  		Call  SetBattleCamZoom      (  420` )
  1EC:  		Call  SetBattleCamOffsetZ   (  0` )
  1FC:  		Call  MoveBattleCamOver     (  30` )
  20C:  	EndIf
  214:  	ExecWait  $Script_UseStarRod1
			Exec $ShowMessage3
			ExecWait  $Script_FireBreath1
  220:  	Return
  228:  EndIf
  230:  Call  GetActorHP    ( .Actor:Self *Var0 )
  244:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  258:  Mul   *Var0  00000064
  268:  Div   *Var0  *Var1
  278:  Call  $Function_80219CD4    ( *Var2 )
  288:  Sub   *Var2  *Var0
  298:  If  *Var2  >  0000001E
  2A8:  	Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  2C0:  	If  *Var0  !=  00000000
  2D0:  		Call  RandInt   ( 00000064 *Var0 )
  2E4:  		If  *Var0  <  00000050
  2F4:  			Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  30C:  			If  *Var0  >  00000001
  31C:  				Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
						Exec $ShowMessage3
						ExecWait  $Script_FireBreath1
						Exec $ShowMessage7
  334:  				ExecWait  $Script_HealSelf1
  340:  				Return
  348:  			Else
  350:  				Call  RandInt   ( 00000064 *Var0 )
  364:  				If  *Var0  <  00000000
  374:  					Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
							Exec $ShowMessage4
							ExecWait  $Script_Shockwave1
							Exec $ShowMessage7
  38C:  					ExecWait  $Script_HealSelf1
  398:  					Return
  3A0:  				EndIf
  3A8:  			EndIf
  3B0:  		EndIf
  3B8:  	EndIf
  3C0:  EndIf
  3C8:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  3E0:  If  *Var0  >  00000001
  3F0:  	Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  408:  	If  *Var0  !&  00040000
  418:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  430:  		Switch  *Var0
  43C:  			Case  ==  00000001
  448:  				Set   *Var0  00000000
  458:  			Case  ==  00000002
  464:  				Set   *Var0  00000014
  474:  			Case  ==  00000003
  480:  				Set   *Var0  0000001E
  490:  			Default
  498:  				Set   *Var0  00000064
  4A8:  		EndSwitch
  4B0:  		Call  RandInt   ( 00000064 *Var1 )
  4C4:  		If  *Var1  <  *Var0
					
  4D4:  			ExecWait  $Script_UseStarRod1
					Exec $ShowMessage3
					ExecWait  $Script_FireBreath1
  4E0:  			Return
  4E8:  		EndIf
  4F0:  	EndIf
  4F8:  EndIf
  500:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  518:  If  *Var0  <  00000003
  528:  	ExecWait  $Script_80224570
  534:  	Return
  53C:  EndIf
  544:  ExecWait  $Script_80224380
  550:  Return
  558:  End
}


@	$Script_80224380
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  <=  00000003
   28:  	ExecWait  $Script_80224570
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   5C:  If  *Var0  >=  00000006
   6C:  	Call  RandInt   ( 00000014 *Var0 )
   80:  	If  *Var0  <  00000014
				Exec  $ShowMessage4
   90:  		ExecWait  $Script_Shockwave1
				Exec  $ShowMessage5
				ExecWait  $Script_DisableJump1
   9C:  	Else
				Exec  $ShowMessage4
   A4:  		ExecWait  $Script_Shockwave1
				ExecWait  $Script_ClawSwipe1
   B0:  	EndIf
   B8:  	Return
   C0:  EndIf
   C8:  Call  RandInt   ( 00000064 *Var0 )
   DC:  If  *Var0  <  0000004B
   EC:  	Call  $Function_80219C74    ( *Var0 *Var1 )
  100:  	If  *Var0  >  00000000
				Exec $ShowMessage4
  110:  		ExecWait  $Script_Shockwave1
				Exec $ShowMessage5
				ExecWait  $Script_DisableJump1
  11C:  		Return
  124:  	EndIf
  12C:  	If  *Var1  >  00000000
				Exec $ShowMessage4
  13C:  		ExecWait  $Script_Shockwave1
				ExecWait  $Script_ClawSwipe1
  148:  		Return
  150:  	EndIf
  158:  EndIf
  160:  Call  RandInt   ( 00000064 *Var0 )
  174:  If  *Var0  <  00000014
  184:  	If  *Var0  <  00000014
				Exec $ShowMessage4
  194:  		ExecWait  $Script_Shockwave1
				ExecWait  $Script_ClawSwipe1
  1A0:  	Else
				Exec $ShowMessage4
  1A8:  		ExecWait  $Script_Shockwave1
				Exec $ShowMessage5
				ExecWait  $Script_DisableJump1
  1B4:  	EndIf
  1BC:  	Return
  1C4:  EndIf
  1CC:  ExecWait  $Script_80224570
  1D8:  Return
  1E0:  Return
  1E8:  End
}


@	$Script_80224570
{
    0:  Call  RandInt   ( 00000050 *Var0 )
   14:  If  *Var0  <  00000014
   24:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   3C:  	If  *Var0  >=  00000002
				Exec $ShowMessage5
   4C:  		ExecWait  $Script_DisableJump1
				Exec $ShowMessage3
				ExecWait  $Script_FireBreath1
   58:  		Return
   60:  	EndIf
   68:  EndIf
   70:  Call  RandInt   ( 0000003C *Var0 )
   84:  If  *Var0  <  00000014
   94:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   AC:  	If  *Var0  >=  00000002
   BC:  		ExecWait  $Script_ClawSwipe1
				Exec $ShowMessage3
				ExecWait  $Script_FireBreath1
   C8:  		Return
   D0:  	EndIf
   D8:  EndIf
		Exec $ShowMessage3
   E0:  ExecWait  $Script_FireBreath1
		Call  RandInt   ( 00000001 *Var0 )
		If  *Var0  ==  00000000
			Exec $ShowMessage5
			ExecWait  $Script_DisableJump1
		Else 
			ExecWait  $Script_ClawSwipe1
		EndIf
   EC:  Return
   F4:  End
}

@	$Script_NextTurn_80221970
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  GetBattlePhase    ( *Var0 )
   24:  Switch  *Var0
   30:  	Case  ==  0000000A
   3C:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
   54:  		If  *Var0  !&  00000001
   64:  			ConstOR  *Var0 00000001
   74:  			Call  SetActorVar       ( .Actor:Self 00000001 *Var0 )
   8C:  			Call  802535B4  ( 00000000 )
   9C:  			Call  UseBattleCamPreset    ( 0000000D )
   AC:  			Call  BattleCamTargetActor  ( .Actor:Self )
   BC:  			Call  MoveBattleCamOver (  20` )
   CC:  			Wait  5`
   D8:  			Call  UseIdleAnimation  ( .Actor:Self .False )
   EC:  			Call  ActorSpeak        ( 00130073 .Actor:Self 00000001 00810005 00810002 ) % Gwaaaah ha ha ha!!! All right, Mario! Let's see yo ...
  10C:  			Call  SetAnimation      ( .Actor:Self 00000001 00810002 )
  124:  			Call  UseBattleCamPreset    ( 00000002 )
  134:  			Call  MoveBattleCamOver (  20` )
  144:  			Wait  5`
					Call  GetCurrentPartnerID   ( *Var0 )
					If  *Var0  ==  .Partner:Goombario % 1
	  404:  			Call  UseBattleCamPreset    ( 0000000E )
	  148:  			Call  BattleCamTargetActor  ( .Actor:Partner )
	  158:  			Call  MoveBattleCamOver (  25` )
	  168:  			Wait  15`
	  174:  			Call  UseIdleAnimation  ( .Actor:Partner .False )
	  188:  			Call  SetAnimation      ( .Actor:Partner 00000001 000D0004 )
	  1A0:  			Call  ActorSpeak        ( 001300C5 .Actor:Partner 00000001 0009000F 000D0001 ) % Extra Goombarius fluff
						Call  UseIdleAnimation  ( .Actor:Partner .True )
					EndIf
  150:  			Call  802535B4  ( 00000001 )
  160:  		EndIf
  168:  EndSwitch
  170:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  184:  Call  UseIdleAnimation  ( .Actor:Self .True )
  198:  Return
  1A0:  End
}

@	$Script_HandleEvent_80221B18
{
  [524]  				Wait  15`
  [9B0]  				Wait  3`
  [A24]  				Wait  3`
  [A38]  			Wait  10`
  [AB4]  		Wait  10`
}


@	$Script_802227E0
{
    0:  Call  8027D32C  ( FFFFFF81 )
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  If  *Var1  !=  FFFFFFFF
   34:  	Call  SetAnimation  ( .Actor:Self *Var0 *Var1 )
   4C:  	Wait  10`
   58:  EndIf
   60:  Call  80269E80  ( *Var5 )
   70:  Switch  *Var5
   7C:  	CaseOR  ==  0000000A
   88:  	CaseOR  ==  0000000E
   94:  	CaseOR  ==  0000000C
   A0:  	CaseOR  ==  00000010
   AC:  	CaseOR  ==  0000000B
   B8:  	CaseOR  ==  0000000F
   C4:  	CaseOR  ==  0000000D
   D0:  	CaseOR  ==  00000011
   DC:  	CaseOR  ==  00000002
   E8:  	EndCaseGroup
   F0:  	Default
   F8:  		Set   *Flag[00]  .False
  108:  		Call  GetOriginalActorType  ( .Actor:Self *Var1 )
  11C:  		Switch  *Var1
  128:  			CaseOR  ==  0000000D
  134:  			CaseOR  ==  0000000F
  140:  			CaseOR  ==  0000004A
  14C:  			EndCaseGroup
  154:  			Default
  15C:  		EndSwitch
  164:  		If  *Var2  !=  FFFFCFC7
  174:  			Set   *Var2  00000000
  184:  			Loop  00000018
  190:  				Call  SetActorYaw   ( .Actor:Self *Var2 )
  1A4:  				Add   *Var2  0000001E
  1B4:  				Wait  1`
  1C0:  			EndLoop
  1C8:  			Call  SetActorYaw   ( .Actor:Self  0` )
  1DC:  		EndIf
  1E4:  EndSwitch
  1EC:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  208:  Add   *Var1  0000000A
  218:  Add   *Var2  0000000A
  280:  
  568:  Wait  15`
  574:  Call  PlaySoundAtActor  ( .Actor:Self 00002129 )
  588:  Call  SetAnimation      ( .Actor:Self 00000001 0081001C )
  5A0:  Thread
  %5A8:  	Call  $Function_8021B950_23 ( 000000B4 00000010 )
  5BC:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  5D8:  EndThread
  5E0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5FC:  Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  640:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.93] *Fixed[1.0] )
  660:  Wait  1`
  66C:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[0.85] *Fixed[1.0] )
  68C:  Wait  1`
  698:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[0.8] *Fixed[1.0] )
  6B8:  Wait  1`
  6C4:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.75] *Fixed[1.0] )
  6E4:  Wait  1`
  6F0:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[0.87] *Fixed[1.0] )
  710:  Wait  1`
  71C:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.92] *Fixed[1.0] )
  73C:  Wait  1`
  748:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
		Call  DropStarPoints    ( .Actor:Self )
  768:  Wait  30`
  774:  Call  SetActorSize  ( .Actor:Self  52`  115` )
  300:  Call  UseBattleCamPreset    ( 00000002 )
		Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  310:  ExecWait  ForceNextTarget
  32C:  Return
  334:  End
}

@	$Script_80222E48
{
  [144]  Wait  60`
  [398]  Wait  10`
  [444]  Wait  1`
  [5E0]  Wait  69`
  [708]  Wait  10`
}

@	$Script_80222E48
{
		Exec  $ShowMessage6
    0:  Call  $Function_802192FC ( )
    C:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   20:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   3C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   4C:  	Add   *Var0  0000000F
   5C:  	Add   *Var1  0000005A
   6C:  	Thread
   74:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
   88:  		Add   *Var2  0000000A
   98:  		Call  $Function_80219444    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.05] )
   B8:  	EndThread
   C0:  Else
   C8:  	Add   *Var0  00000006
   D8:  	Add   *Var1  00000024
   E8:  	Thread
   F0:  		Call  PlaySoundAtActor      ( .Actor:Self 00002123 )
  104:  		Add   *Var2  0000000A
  114:  		Call  $Function_80219444    ( *Var0 *Var1 *Var2 *Fixed[2.5] *Fixed[0.02] )
  134:  	EndThread
  13C:  EndIf
  144:  Wait  60`
  150:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  16C:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  17C:  	Add   *Var0  0000000F
  18C:  	Sub   *Var2  00000003
  19C:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 0000005A *Var2 *Fixed[1.0] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1E0:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 0000005A *Var2 *Fixed[1.0] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  224:  	Sub   *Var2  00000003
  234:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 0000005A *Var2 *Fixed[1.0] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Else
  280:  	Add   *Var0  00000006
  290:  	Sub   *Var2  00000003
  2A0:  	Call  PlayEffect    ( ~FX:LightRays:SharpA *Var0 00000024 *Var2 *Fixed[0.4] *VarF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2E4:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000024 *Var2 *Fixed[0.4] *VarE 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  328:  	Sub   *Var2  00000003
  338:  	Call  PlayEffect    ( 0000003C 00000002 *Var0 00000024 *Var2 *Fixed[0.4] *VarD 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  37C:  EndIf
  384:  Call  PlaySoundAtActor  ( .Actor:Self 00002121 )
  398:  Wait  10`
  3A4:  Call  RemoveEffect      ( *VarF )
  3B4:  Call  RemoveEffect      ( *VarE )
  3C4:  Call  RemoveEffect      ( *VarD )
  3D4:  Call  SetPartEventBits  ( .Actor:Self 00000001 00040000 .True )
  3F0:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  40C:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_80221510 )
  424:  Call  SetStatusTable    ( .Actor:Self $StatusTable_802215C8 )
  438:  Call  $Function_80219414 ( )
  444:  Wait  2`
  450:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  464:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  474:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  490:  	Add   *Var1  00000028
  4A0:  	Add   *Var2  0000000C
  4B0:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 00000046 00000050 00000019 0000003C 00000000 00000000 00000000 00000000 00000000 )
  4F4:  Else
  4FC:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  518:  	Add   *Var1  00000010
  528:  	Add   *Var2  0000000C
  538:  	Call  PlayEffect    ( ~FX:RainbowShimmer *Var0 *Var1 *Var2 0000001C 00000020 0000000A 0000003C 00000000 00000000 00000000 00000000 00000000 )
  57C:  EndIf
  584:  Call  PlaySoundAtActor  ( .Actor:Self 00002125 )
  598:  Thread
  5A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5BC:  	Call  $Function_80219818    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
  5D8:  EndThread
  5E0:  Wait  75`
  5EC:  Thread
  5F4:  	Call  $Function_80219394 ( )
  600:  EndThread
  608:  Call  SetAnimation      ( .Actor:Self 00000001 00810008 )
  620:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  634:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  650:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  660:  	Add   *Var1  00000028
  670:  Else
  678:  	Add   *Var1  00000010
  688:  EndIf
  690:  Call  PlayEffect        ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 *Fixed[1.0] 0000000F 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  6D4:  Call  PlaySoundAtActor  ( .Actor:Self 00002124 )
  6E8:  Call  UseBattleCamPreset    ( 00000002 )
  6F8:  Call  MoveBattleCamOver (  39` )
  708:  Wait  10`
  714:  Return
  71C:  End
}


@	$Script_HealSelf1
{
  [428]  Wait  15`
}

@	$Script_802257EC
{
   [20]  	Wait  1`
   [4C]  		Call  ShakeCam  ( .Cam:Battle 00000000  2` *Fixed[4.0] )
   [68]  		Wait  2`
}

%This is now a double claw swipe.
@	$Script_ClawSwipe1
{
		Exec  $ShowMessage2
    0:  Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  200` )
   70:  	Call  BattleCamTargetActor  ( .Actor:Self )
   80:  	Call  MoveBattleCamOver     (  40` )
   90:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:  	Call  UseBattleCamPreset    ( 0000003F )
   C0:  	Call  SetBattleCamZoom      (  160` )
   D0:  	Call  SetBattleCamOffsetZ   (  5` )
   E0:  	Call  BattleCamTargetActor  ( .Actor:Self )
   F0:  	Call  MoveBattleCamOver     (  40` )
  100:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
  138:  Call  SetGoalToTarget   ( .Actor:Self )
  148:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  15C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  16C:  	Call  AddGoalPos    ( .Actor:Self  40`  0`  0` )
  188:  Else
  190:  	Call  AddGoalPos    ( .Actor:Self  16`  0`  0` )
  1AC:  EndIf
  1B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[10.5] )
  1C8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1E0:  Call  SetAnimation  ( .Actor:Self 00000001 00810009 )
  1F8:  Wait  12`
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00810015 )
  21C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  230:  Wait  1`
  23C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  260:  Switch  *VarA
  26C:  	CaseOR  ==  .HitResult:Miss % 6
  278:  	CaseOR  ==  .HitResult:Lucky % 5
  284:  		Wait  20`
  290:  		Call  UseBattleCamPreset    ( 00000002 )
  2A0:  		Call  MoveBattleCamOver     (  20` )
  2B0:  		ExecWait  $Script_802257EC
  2BC:  		If  *VarA  ==  00000005
  2CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2F0:  			Wait  30`
  2FC:  		Else
  304:  			Wait  30`
  310:  		EndIf
  318:  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  32C:  		Set   *Var1  00810003
  33C:  		ExecWait  $Script_80222CD8
  348:  		Return
  350:  	EndCaseGroup
  358:  	Default
  360:  EndSwitch
  368:  Wait  2`
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  39C:  If  *Var0  &  00040000
  3AC:  	Set   *Var0  0000000C
  3CC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000008 00000000 *Var0 00000020 )  %Zap Tap immunity
  3F4:  Else
  3FC:  	Set   *Var0  00000008
  41C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000008 00000000 *Var0 00000020 )
  444:  EndIf
  284:  		Wait  18`
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00810023 )
  21C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
		Wait  2`
  39C:  If  *Var0  &  00040000
  3AC:  	Set   *Var0  0000000C
  3BC:  	Call  80269EAC  ( 0000000C )
  3CC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000008 ~DebuffType:Poison:6:100` *Var0 00000020 )
  3F4:  Else
  3FC:  	Set   *Var0  00000008
  40C:  	Call  80269EAC  ( 0000000C )
  41C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000008 ~DebuffType:Poison:3:100` *Var0 00000020 )
  444:  EndIf
  44C:  Call  UseBattleCamPreset    ( 00000002 )
  45C:  Call  MoveBattleCamOver     (  20` )
		Wait  8`
  46C:  Switch  *VarF
  478:  	CaseOR  ==  .HitResult:Hit % 0
  484:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  490:  	CaseOR  ==  0000000A % A
  49C:  		Wait  10`
  4A8:  		If  *VarF  ==  0000000A % A
  4B8:  			Return
  4C0:  		EndIf
  4C8:  		Call  UseBattleCamPreset    ( 00000002 )
  4D8:  		Call  MoveBattleCamOver     (  20` )
  4E8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[16.0] )
  4FC:  		Set   *Var1  00810003
  50C:  		ExecWait  $Script_80222CD8
  518:  	EndCaseGroup
  520:  EndSwitch
  528:  Return
  530:  End
}

@	$Script_DisableJump1
{
  [174]  Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  [1B8]  Wait  5`
  [1DC]  Wait  2`
  [31C]  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[7.0] )
  [3A8]  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[5.0] )
  [3E4]  		Wait  1`
  [408]  		Wait  12`
  [460]  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  [4E8]  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[7.0] )
  [50C]  Wait  1`
  [568]  	Set   *Var0  00000011
  [580]  	Set   *Var0  0000000B
  [7B0]  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[4.0] )
  [83C]  		Call  ShakeCam  ( .Cam:Battle 00000000  3` *Fixed[3.0] )
  [878]  	Wait  3`
  [8D8]  	Wait  6`
  [954]  	Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  [CAC]  	Wait  16`
  [CD0]  	Wait  16`
  [E64]  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[4.0] )
  [EA0]  	Wait  3`
  [EC4]  	Wait  10`
  [F08]  Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
}


@	$Script_Shockwave1
{
  [1B0]  Wait  2`
  [3B8]  Wait  15`
  [41C]  Wait  3`
  [5AC]  Wait  5`
  [678]  				Wait  10`
  [684]  				Return
  [68C] 			Default
  [694]  				Wait  2`
  [73C]  					Set   *Var1  00000008
  [74C]  				Else
  [754]  					Set   *Var1  00000008
  [764]  				EndIf
  [76C]  				Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic|IgnoreDefense 0000FFFF 00000000 *Var1 00000020 )
  [7D4]  				Wait  10`
  [8D0]  Wait  1`
  [8FC]  	Set   *Var1  00000002
  [914]  	Set   *Var1  00000002
  [92C]  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic|IgnoreDefense 0000FFFF 00000000 *Var1 00000020 )
  [9AC]  		Wait  5`
}

%Faster breath with higher attack power.
@	$Script_FireBreath1
{
  [178]  Wait  15`
  [1BC]  Wait  2`
  [448]  	Wait  64`
  [46C]  Wait  9`
  [4D0]  		Wait  8`
  [4F4]  		Wait  26`
  [518]  		Wait  12`
  [53C]  		Wait  25`
  [590]  		Wait  25`
  [5BC]  Wait  2`
  [600]  	Set   *Var0  00000012
  [618]  	Set   *Var0  0000000C
  [688]  		Wait  8`
  [6AC]  		Wait  25`
  [6D0]  		Wait  12`
  [6F4]  		Wait  25`
}




@	$Script_Init_80227770
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000004 00000003 )
   48:  Call  SetActorVar   ( .Actor:Self 00000005 00000003 )
   60:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   78:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
   90:  Call  SetActorVar   ( .Actor:Self 00000007 00000003 )
   A8:  Call  SetActorVar   ( .Actor:Self 0000000E 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
   D8:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   F0:  Call  SetActorScale ( .Actor:Self *Fixed[1.25] *Fixed[1.25] *Fixed[1.0] )
  10C:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
  134:  Exec  $Script_8022865C
  140:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000096 00000096 00000000 00000000 )
  168:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 0000000A )
  184:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_80228490 )
  198:  Call  BindIdle      ( .Actor:Self $Script_Idle_80227954 )
  1AC:  Call  BindHandleEvent       ( .Actor:Self $Script_HandleEvent_80227AD0 )
  1C0:  Call  SetBattleFlagBits2    ( 02000400 .True )
  1D4:  Return
  1DC:  End
}


@	$Bowser2
{
	[MaxHP]       200`b %Used to be 240, but I couldn't beat it with that much, so 200 seems safe.
	[PowerBounce]   3`b
	[Size]        133`b 129`b % width height
}


@	$Script_Init_80227770
{
   [F0]  Call  SetActorScale ( .Actor:Self *Fixed[1.58] *Fixed[1.58] *Fixed[1.0] )
}


@	$Script_HealSelf2
{
  [428]  Wait  14`
}

@	$Script_80229650
{
    0:  Call  AddActorVar   ( .Actor:Self 00000000 00000001 )
   18:  Call  AddActorVar   ( .Actor:Self 00000004 00000001 )
   30:  Call  AddActorVar   ( .Actor:Self 00000005 00000001 )
   48:  Call  AddActorVar   ( .Actor:Self 00000002 00000001 )
   60:  Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
   78:  Call  AddActorVar   ( .Actor:Self 00000006 00000001 )
   90:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   A8:  If  *Var0  ==  00000002
   B8:  	Call  GetStatusFlags    ( .Actor:Self *Var0 )
   CC:  	If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   DC:  		Call  UseBattleCamPreset    ( 00000013 )
   EC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  108:  		Sub   *Var0  0000000F
  118:  		Add   *Var1  0000005A
  128:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  140:  		Call  SetBattleCamZoom      (  420` )
  150:  		Call  SetBattleCamOffsetZ   (  0` )
  160:  		Call  MoveBattleCamOver     (  30` )
  170:  	Else
  178:  		Call  UseBattleCamPreset    ( 00000013 )
  188:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1A4:  		Sub   *Var0  00000006
  1B4:  		Add   *Var1  00000024
  1C4:  		Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  1DC:  		Call  SetBattleCamZoom      (  420` )
  1EC:  		Call  SetBattleCamOffsetZ   (  0` )
  1FC:  		Call  MoveBattleCamOver     (  30` )
  20C:  	EndIf
  214:  	Call  ActorSpeak    ( 00130084 .Actor:Self 00000001 00810007 00810007 ) % Gwuuh huh huh huh! Time to increase my power with  ...
					  Exec $ShowMessage6
  234:  	ExecWait  $Script_802284D4
  240:  	Return
  248:  EndIf
  250:  Call  GetActorHP    ( .Actor:Self *Var0 )
  264:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
  278:  Mul   *Var0  00000064
  288:  Div   *Var0  *Var1
  298:  Call  $Function_8021B08C    ( *Var2 )
  2A8:  Sub   *Var2  *Var0
  2B8:  If  *Var2  >  00000019
  2C8:  	Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  2E0:  	If  *Var0  !=  00000000
  2F0:  		Call  RandInt   ( 00000064 *Var0 )
  304:  		If  *Var0  <  0000004B
  314:  			Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  32C:  			If  *Var0  >  00000001
  33C:  				Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  354:  				ExecWait  $Script_HealSelf2
  360:  				Return
  368:  			Else
  370:  				Call  RandInt   ( 00000064 *Var0 )
  384:  				If  *Var0  <  00000000
  394:  					Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
  3AC:  					ExecWait  $Script_HealSelf2
  3B8:  					Return
  3C0:  				EndIf
  3C8:  			EndIf
  3D0:  		EndIf
  3D8:  	EndIf
  3E0:  EndIf
  3E8:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  400:  If  *Var0  >  00000001
  410:  	Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  428:  	If  *Var0  !&  00080000
  438:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  450:  		Switch  *Var0
  45C:  			Case  ==  00000001
  468:  				Set   *Var0  00000000
  478:  			Case  ==  00000002
  484:  				Set   *Var0  00000000
  494:  			Case  ==  00000003
  4A0:  				Set   *Var0  0000000F
  4B0:  			Default
  4B8:  				Set   *Var0  0000004B
  4C8:  		EndSwitch
  4D0:  		Call  RandInt   ( 00000064 *Var1 )
  4E4:  		If  *Var1  <  *Var0
  4F4:  			ExecWait  $Script_802284D4
  500:  			Return
  508:  		EndIf
  510:  	EndIf
  518:  EndIf
  520:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  538:  If  *Var0  <  00000003
  548:  	ExecWait  $Script_80229DC0
  554:  	Return
  55C:  EndIf
  564:  ExecWait  $Script_80229BD0
  570:  Return
  578:  End
}

@	$Script_80229BD0
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  <=  00000003
   28:  	ExecWait  $Script_80229DC0
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   5C:  If  *Var0  >=  00000006
   6C:  	Call  RandInt   ( 0000001E *Var0 )
   80:  	If  *Var0  <  00000014
   90:  		ExecWait  $Script_Shockwave2
   9C:  	Else
   A4:  		ExecWait  $Script_Thunderbolt2
   B0:  	EndIf
   B8:  	Return
   C0:  EndIf
   C8:  Call  RandInt   ( 00000064 *Var0 )
   DC:  If  *Var0  <  0000004B
   EC:  	Call  $Function_8021B02C    ( *Var0 *Var1 )
  100:  	If  *Var0  >  00000000
  110:  		ExecWait  $Script_Shockwave2
  11C:  		Return
  124:  	EndIf
  12C:  	If  *Var1  >  00000000
  13C:  		ExecWait  $Script_Shockwave2
  148:  		Return
  150:  	EndIf
  158:  EndIf
  160:  Call  RandInt   ( 0000006E *Var0 )
  174:  If  *Var0  <  0000001E
  184:  	If  *Var0  <  00000014
  194:  		ExecWait  $Script_Shockwave2
  1A0:  	Else
  1A8:  		ExecWait  $Script_Thunderbolt2
  1B4:  	EndIf
  1BC:  	Return
  1C4:  EndIf
  1CC:  ExecWait  $Script_80229DC0
  1D8:  Return
  1E0:  Return
  1E8:  End
}


@	$Script_80229DC0
{
    0:  Call  RandInt   ( 00000050 *Var0 )
   14:  If  *Var0  <  00000014
   24:  	Call  GetActorVar   ( .Actor:Self 00000005 *Var0 )
   3C:  	If  *Var0  >=  00000002
				Exec $ShowMessage5
   4C:  		ExecWait  $Script_DisableJump2
				Exec $ShowMessage3
				ExecWait  $Script_FireBreath2
   58:  		Return
   60:  	EndIf
   68:  EndIf
   70:  Call  RandInt   ( 0000003C *Var0 )
   84:  If  *Var0  <  00000014
   94:  	Call  GetActorVar   ( .Actor:Self 00000004 *Var0 )
   AC:  	If  *Var0  >=  00000002
				Exec $ShowMessage2
   BC:  		ExecWait  $Script_ClawSwipe2
				Exec $ShowMessage3
				ExecWait  $Script_FireBreath2
   C8:  		Return
   D0:  	EndIf
   D8:  EndIf
		Exec $ShowMessage3
   E0:  ExecWait  $Script_FireBreath2
		Exec $ShowMessage2
		ExecWait  $Script_ClawSwipe2
   EC:  Return
   F4:  End
}


@	$Script_DisableJump2
{
    0:  Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  300` )
   70:  	Call  SetBattleCamOffsetZ   (  54` )
   80:  	Call  BattleCamTargetActor  ( .Actor:Self )
   90:  	Call  MoveBattleCamOver     (  40` )
   A0:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   B8:  Else
   C0:  	Call  UseBattleCamPreset    ( 0000003F )
   D0:  	Call  SetBattleCamZoom      (  240` )
   E0:  	Call  SetBattleCamOffsetZ   (  21` )
   F0:  	Call  BattleCamTargetActor  ( .Actor:Self )
  100:  	Call  MoveBattleCamOver     (  40` )
  110:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  128:  EndIf
  130:  Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  148:  Call  SetGoalToTarget       ( .Actor:Self )
  158:  Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
  174:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  188:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1A0:  Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  1B8:  Wait  6`
  1C4:  Call  SetAnimation  ( .Actor:Self 00000001 00810011 )
  1DC:  Wait  2`
  1E8:  Call  SetAnimation  ( .Actor:Self 00000001 00810012 )
  200:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  214:  Call  EnemyTestTarget       ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  238:  Switch  *VarA
  244:  	CaseOR  ==  .HitResult:Miss % 6
  250:  	CaseOR  ==  .HitResult:Lucky % 5
  25C:  		Call  SetGoalToTarget   ( .Actor:Self )
  26C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  288:  		Sub   *Var0  0000001E
  298:  		Set   *Var1  00000000
  2A8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  2C4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E0:  		Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  300:  		Thread
  308:  			Call  $Function_8021A2C0    ( 00000050 0000000E )
  31C:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[5.0] )
  338:  		EndThread
  340:  		Sub   *Var0  00000023
  350:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  		Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  38C:  		Thread
  394:  			Call  $Function_8021A2C0    ( 00000050 0000000E )
  3A8:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[4.0] )
  3C4:  		EndThread
  3CC:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  3E4:  		Wait  2`
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  408:  		Wait  15`
  414:  		Call  UseBattleCamPreset    ( 00000002 )
  424:  		If  *VarA  ==  .HitResult:Lucky % 5
  434:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  458:  		EndIf
  460:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  474:  		Set   *Var1  00810003
  484:  		ExecWait  $Script_80228508
  490:  		Return
  498:  	EndCaseGroup
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call  SetGoalToTarget   ( .Actor:Self )
  4C0:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  4E0:  Thread
  4E8:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[5.0] )
  504:  EndThread
  50C:  Wait  2`
  518:  Call  SetGoalToTarget   ( .Actor:Self )
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00810013 )
  540:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var1 )
  558:  If  *Var1  &  00080000
  568:  	Set   *Var0  00000016
  578:  Else
  580:  	Set   *Var0  0000000E
  590:  EndIf
  598:  Call  GetStatusFlags    ( .Actor:Self *VarF )
  5AC:  If  *VarF  !&  ~Flags:StatusFlags:Shrink % 80000
  5BC:  	Call  80269EAC  ( 00000018 )
  5CC:  EndIf
  5D4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 *Var0 00000020 )
  5FC:  Set   *Var0  FFFFFFFF
  60C:  Call  GetBattleFlags    ( *Var1 )
  61C:  If  *Var1  !&  80000000
  62C:  	Call  GetStatusFlags    ( .Actor:Player *Var1 )
  640:  	If  *Var1  !&  ~Flags:StatusFlags:Stone|RightOn % 40100000
  650:  		Call  GetStatusFlags    ( .Actor:Self *Var1 )
  664:  		If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  674:  			Call  $Function_8021B570    ( *Var0 )
  684:  		EndIf
  68C:  	EndIf
  694:  EndIf
  69C:  If  *Var0  !=  FFFFFFFF
  6AC:  	Call  LandJump      ( .Actor:Self )
  6BC:  	Call  $Function_8021A2C0    ( 00000050 0000000E )
  6D0:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  6E4:  	Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
  6FC:  	Exec  $Script_80229EEC
  708:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  724:  	Add   *Var0  00000034
  734:  	Set   *Var1  00000000
  744:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  760:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  780:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  794:  	Thread
  79C:  		Call  $Function_8021A2C0    ( 00000050 0000000E )
  7B0:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[5.0] )
  7CC:  	EndThread
  7D4:  	Add   *Var0  0000001E
  7E4:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  800:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  820:  	Thread
  828:  		Call  $Function_8021A2C0    ( 00000050 0000000E )
  83C:  		Call  ShakeCam  ( .Cam:Battle 00000000  3` *Fixed[4.0] )
  858:  	EndThread
  860:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  878:  	Wait  2`
  884:  	Label  0
  890:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  8A8:  	If  *Var0  !=  00000000
  8B8:  		Wait  1`
  8C4:  		Goto  0
  8D0:  	EndIf
  8D8:  	Wait  4`
  8E4:  	Call  SetActorYaw   ( .Actor:Self  0` )
  8F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  910:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  928:  	Call  $Function_8021B314    ( *Var0 *Var1 *Var2 *Var3 )
  944:  	Add   *Var1  00000026
  954:  	Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  968:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  984:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  99C:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  9B4:  	Wait  6`
  9C0:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  9D8:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  9F0:  	Wait  2`
  9FC:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  A14:  	Call  $Function_8021B314    ( *Var0 *Var1 *Var2 *Var3 )
  A30:  	Call  SetActorVar   ( .Actor:Self 00000009 00000002 )
  A48:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A8C:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AD0:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  AE4:  	Wait  3`
  AF0:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  B08:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  B20:  	Wait  2`
  B2C:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B70:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BB4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  BC8:  	Wait  4`
  BD4:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  BEC:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  C04:  	Wait  2`
  C10:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C54:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C98:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  CAC:  	Wait  15`
  CB8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
  CD0:  	Wait  15`
  CDC:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  CF4:  Else
  CFC:  	Call  GetBattleFlags    ( *Var1 )
  D0C:  	If  *Var1  !&  80000000
  D1C:  		Call  GetStatusFlags    ( .Actor:Player *Var1 )
  D30:  		If  *Var1  !&  ~Flags:StatusFlags:Stone % 100000
  D40:  			Call  GetStatusFlags    ( .Actor:Self *Var1 )
  D54:  			If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  D64:  				Call  LandJump  ( .Actor:Self )
  D74:  			EndIf
  D7C:  		EndIf
  D84:  	EndIf
  D8C:  	Call  $Function_8021A2C0    ( 00000050 0000000E )
  DA0:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  DBC:  	Add   *Var0  00000028
  DCC:  	Set   *Var1  00000000
  DDC:  	Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  DF8:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  E14:  	Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  E34:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  E48:  	Thread
  E50:  		Call  $Function_8021A2C0    ( 00000050 0000000E )
  E64:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  E80:  	EndThread
  E88:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  EA0:  	Wait  3`
  EAC:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  EC4:  	Wait  20`
  ED0:  EndIf
  ED8:  If  *VarF  ==  0000000A
  EE8:  	Return
  EF0:  EndIf
  EF8:  Call  UseBattleCamPreset    ( 00000002 )
  F08:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  F1C:  Set   *Var1  00810003
  F2C:  ExecWait  $Script_80228508
  F38:  Return
  F40:  End
}



@	$Script_ClawSwipe2
{
    0:  Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  200` )
   70:  	Call  BattleCamTargetActor  ( .Actor:Self )
   80:  	Call  MoveBattleCamOver     (  40` )
   90:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:  	Call  UseBattleCamPreset    ( 0000003F )
   C0:  	Call  SetBattleCamZoom      (  160` )
   D0:  	Call  SetBattleCamOffsetZ   (  5` )
   E0:  	Call  BattleCamTargetActor  ( .Actor:Self )
   F0:  	Call  MoveBattleCamOver     (  40` )
  100:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
  138:  Call  SetGoalToTarget   ( .Actor:Self )
  148:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  15C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  16C:  	Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
  188:  Else
  190:  	Call  AddGoalPos    ( .Actor:Self  24`  0`  0` )
  1AC:  EndIf
  1B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  1C8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1E0:  Call  SetAnimation  ( .Actor:Self 00000001 00810009 )
  1F8:  Wait  12`
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00810015 )
  21C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  230:  Wait  3`
  23C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  260:  Switch  *VarA
  26C:  	CaseOR  ==  .HitResult:Miss % 6
  278:  	CaseOR  ==  .HitResult:Lucky % 5
  284:  		Wait  20`
  290:  		Call  UseBattleCamPreset    ( 00000002 )
  2A0:  		Call  MoveBattleCamOver     (  20` )
  2B0:  		ExecWait  $Script_8022B03C
  2BC:  		If  *VarA  ==  00000005
  2CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2F0:  			Wait  30`
  2FC:  		Else
  304:  			Wait  30`
  310:  		EndIf
  318:  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  32C:  		Set   *Var1  00810003
  33C:  		ExecWait  $Script_80228508
  348:  		Return
  350:  	EndCaseGroup
  358:  	Default
  360:  EndSwitch
  368:  Wait  4`
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  39C:  If  *Var0  &  00080000
  3AC:  	Set   *Var0  0000000F
  3CC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 *Var0 00000020 )
  3F4:  Else
  3FC:  	Set   *Var0  00000009
  41C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 *Var0 00000020 )
  444:  EndIf
  284:  		Wait  19`
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00810023 )
  21C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  39C:  If  *Var0  &  00080000
  3AC:  	Set   *Var0  00000010
  3BC:  	Call  80269EAC  ( 0000000C )
  3CC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:6:100` *Var0 00000020 )
  3F4:  Else
  3FC:  	Set   *Var0  00000008
  40C:  	Call  80269EAC  ( 0000000C )
  41C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` *Var0 00000020 )
  444:  EndIf
  44C:  Switch  *VarF
  458:  	CaseOR  ==  .HitResult:Hit % 0
  464:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  470:  	CaseOR  ==  0000000A % A
  47C:  		Wait  10`
  488:  		If  *VarF  ==  0000000A % A
  498:  			Return
  4A0:  		EndIf
  4A8:  		Call  UseBattleCamPreset    ( 00000002 )
  4B8:  		Call  MoveBattleCamOver     (  20` )
  4C8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  4DC:  		Set   *Var1  00810003
  4EC:  		ExecWait  $Script_80228508
  4F8:  	EndCaseGroup
  500:  EndSwitch
  508:  Return
  510:  End
}




@	$Script_Shockwave2
{
  [1B0]  Wait  2`
  [3B8]  Wait  15`
  [41C]  Wait  3`
  [5AC]  Wait  5`
  [678]  				Wait  10`
  [684]  				Return
  [68C] 			Default
  [694]  				Wait  2`
  [73C]  					Set   *Var1  00000009
  [74C]  				Else
  [754]  					Set   *Var1  00000009
  [764]  				EndIf
  [76C]  				Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic|IgnoreDefense 0000FFFF 00000000 *Var1 00000020 )
  [7D4]  				Wait  10`
  [8D0]  Wait  1`
  [8FC]  	Set   *Var1  00000004
  [914]  	Set   *Var1  00000004
  [92C]  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic|IgnoreDefense 0000FFFF 00000000 *Var1 00000020 )
  [9AC]  		Wait  5`
}


@	$Script_FireBreath2
{
  [178]  Wait  12`
  [1BC]  Wait  1`
  [4D0]  Wait  6`
  [534]  		Wait  8`
  [558]  		Wait  20`
  [57C]  		Wait  12`
  [5A0]  		Wait  20`
  [5F4]  		Wait  20`
  [620]  Wait  1`
  [664]  	Set   *Var0  00000018
  [67C]  	Set   *Var0  0000000F
  [6EC]  		Wait  8`
  [710]  		Wait  20`
  [734]  		Wait  12`
  [758]  		Wait  20`
}

%Ignore the Var0 call because it ultimately doesn't mean much.
@	$Script_Thunderbolt2
{
  [140]  	Wait  40`
  [2E8]  	Wait  40`
  [4BC]  		Wait  5`
  [4FC]  			Wait  10`
  [51C]  			Wait  10`
  [53C]  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  [58C]  Wait  3`
  [5D0]  	Set   *Var0  00000000
  [5E0]  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Electric|NoContact 0000FFFF 80010164 00000018 00000020 )
  [610]  	Set   *Var0  00000000
  [620]  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Electric|NoContact 0000FFFF 80010164 00000010 00000020 )
  [680]  		Wait  10`
  [6B8]  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
}

@	$Bowser3
{
	[MaxHP]       200`b
	[PowerBounce]   3`b
	[Size]        133`b 129`b % width height
}


#new:IdleAnimations $IdleAnimations_Angry
{
	.Status:Normal    00810027
	.Status:Stone     00810000
	.Status:Sleep     00810028
	.Status:Poison    00810028
	.Status:Stop      00810000
	.Status:Static    00810000
	.Status:Paralyze  00810000
	.Status:Paralyze  00810000
	.Status:Dizzy     00810028
	.Status:Dizzy     00810028
	.Status:End
}


@	$Script_Init_8022D6A0
{
    0:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   18:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   30:  Call  SetActorVar   ( .Actor:Self 00000004 00000003 )
   48:  Call  SetActorVar   ( .Actor:Self 00000005 00000003 )
   60:  Call  SetActorVar   ( .Actor:Self 00000009 00000000 )
   78:  Call  SetActorVar   ( .Actor:Self 0000000A 00000000 )
   90:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
   A8:  Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
   C0:  Call  SetActorVar   ( .Actor:Self 00000007 00000003 )
   D8:  Call  SetActorVar   ( .Actor:Self 0000000E 00000000 )
        Call  $ReadAddress ( 800DBD70 0 *Var0 18A .False ) % get value as unsigned, GameByte[18A](GB_FinalBowserHP)
        Call  SetEnemyHP    ( .Actor:Self *Var0 )
        If  *Var0  <  00000001 
  114:  	Call  SetEnemyHP    ( .Actor:Self 00000001 )
  128:  EndIf
		Call  SetActorScale     ( .Actor:Self *Fixed[1.58] *Fixed[1.58] *Fixed[1.0] )
  14C:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
  174:  Exec  $Script_8022F488
  180:  Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000096 00000096 00000000 00000000 )
  1A8:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 0000000A )
  1C4:  Call  SetPartEventBits  ( .Actor:Self 00000001 00080000 .True )
  1E0:  Call  AddActorDecoration    ( .Actor:Self 00000001 00000001 .Decoration:RadialStarEmitter )
  1FC:  Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022D4F0 )
  214:  Call  SetStatusTable    ( .Actor:Self $StatusTable_8022D5A8 )
  228:  Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_8022F2BC )
  23C:  Call  BindIdle  ( .Actor:Self $Script_Idle_8022D93C )
  250:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022DF74 )
  264:  Call  BindNextTurn      ( .Actor:Self $Script_NextTurn_8022DAB8 )
  278:  Call  SetBattleFlagBits2    ( 02000000 .True )
  28C:  Return
  294:  End
}

#new:Script $Script_Idle_Angry
{
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  GetAnimation  ( .Actor:Self 00000001 *Var3 )
   34:  Label  0
   40:  Call  ActorExists   ( .Actor:Self *VarB )
   54:  If  *VarB  ==  .False
   64:  	Return
   6C:  EndIf
   18:  Call  8026ED20      ( FFFFFF81 00000001 00000001 )
   30:  Call  8026EBF8      ( FFFFFF81 00000001 00000009 00000000 00000000 00000006 0000000C 00000006 00000000 00000000 )
   64:  Call  8026EA7C      ( FFFFFF81 00000001 0000000F )   
   74:  Call  GetStatusFlags    ( .Actor:Self *VarB )
   88:  If  *VarB  !&  ~Flags:StatusFlags:Shrink % 80000
   98:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 00000096 00000096 000000FF 00000000 )
   C0:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 00000096 00000000 00000000 00000000 )
   E8:  Else
   F0:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000000 0000003C 0000003C 000000FF 00000000 )
  118:  	Call  ModifyActorDecoration ( .Actor:Self 00000001 00000001 0000003C 00000000 00000000 00000000 )
  140:  EndIf
  148:  ExecWait  $Script_8022FDC8
  154:  Wait  1`
  160:  Goto  0
  16C:  Return
  174:  End
}

@	$Script_TakeTurn_8022F2BC
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  ExecWait  $Script_UseMove3
		If  *GB_EnemyDefense == 3`
	   90:  Call  GetActorHP    ( .Actor:Self *Var0 )
	   A4:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
	   B8:  Div  *Var1  2`
	   C8:  If   *Var0 < *Var1 
				ExecWait  $GetAngry
				Set *GB_EnemyDefense 4`
			EndIf
		EndIf
   20:  Call  UseIdleAnimation  ( .Actor:Self .True )
   34:  Return
   3C:  End
}


@	$Script_8022E93C
{
    0:  Call  SetPartEventBits      ( .Actor:Self 00000001 00080000 .False )
   1C:  Call  RemoveActorDecoration ( .Actor:Self 00000001 00000001 )
   34:  Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
   4C:  Wait  2`
   58:  Call  SetAnimation  ( .Actor:Self 00000001 0081000E )
   70:  Call  GetStatusFlags        ( .Actor:Self *Var3 )
   84:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   94:  	Call  UseBattleCamPreset    ( 00000013 )
   A4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   C0:  	Sub   *Var0  0000000F
   D0:  	Add   *Var1  00000043
   E0:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   F8:  	Call  SetBattleCamZoom      (  420` )
  108:  	Call  SetBattleCamOffsetZ   (  0` )
  118:  	Call  MoveBattleCamOver     (  15` )
  128:  Else
  130:  	Call  UseBattleCamPreset    ( 00000013 )
  140:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  15C:  	Sub   *Var0  00000006
  16C:  	Add   *Var1  0000001B
  17C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  194:  	Call  SetBattleCamZoom      (  420` )
  1A4:  	Call  SetBattleCamOffsetZ   (  0` )
  1B4:  	Call  MoveBattleCamOver     (  15` )
  1C4:  EndIf
  1CC:  Wait  30`
  1D8:  Call  PlaySoundAtActor  ( .Actor:Self 00002128 )
  1EC:  Call  SetAnimation      ( .Actor:Self 00000001 0081000D )
  204:  Thread
  20C:  	Call  MakeLerp  ( 00000000 00000050 00000008 .Easing:QuadraticOut )
  228:  	Set   *Var2  00000000
  238:  	Label  0
  244:  	Call  UpdateLerp ( )
  250:  	Label  1
  25C:  	If  *Var2  >=  *Var0
  26C:  		Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  288:  		Call  GetActorScale ( .Actor:Self *Var6 *Var6 *Var7 )
  2A4:  		Call  $Function_8021B9A8    ( *Var3 *Var4 *Var5 *Var6 )
  2C0:  		If  *Var1  ==  00000001
  2D0:  			Goto  0
  2DC:  		EndIf
  2E4:  	Else
  2EC:  		Wait  1`
  2F8:  		Add   *Var2  00000001
  308:  		Goto  1
  314:  	EndIf
  31C:  EndThread
  324:  Wait  10`
  330:  Thread
  338:  	Wait  20`
  344:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  360:  	Call  GetStatusFlags    ( .Actor:Self *VarA )
  374:  	If  *VarA  !&  ~Flags:StatusFlags:Shrink % 80000
  384:  		Add   *Var1  0000003C
  394:  	Else
  39C:  		Add   *Var1  00000018
  3AC:  	EndIf
  3B4:  	Call  PlayEffect    ( ~FX:ShimmerBurst:Pink *Var0 *Var1 *Var2 *Fixed[1.05] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3F8:  	Set   *Var1  00000032
  408:  	If  *Var1  >  00000000
  418:  		SetF  *Var0  *Fixed[1.5]
  428:  		Loop  *Var1
  434:  			SubF  *Var0  *Fixed[0.01]
  444:  			Call  SetActorScale ( .Actor:Self *Var0 *Var0 *Fixed[1.0] )
  460:  			Wait  1`
  46C:  		EndLoop
  474:  		Call  SetActorScale ( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  490:  	EndIf
  498:  EndThread
  4A0:  Call  EnableActorBlur   ( .Actor:Self 00000001 )
  4B4:  Call  MakeLerp  ( 00000000 00001950 00000064 .Easing:CosInOut )
  4D0:  Label  2
  4DC:  Call  UpdateLerp ( )
  4E8:  Mod   *Var0  00000168
  4F8:  Call  SetActorYaw       ( .Actor:Self *Var0 )
  50C:  Wait  1`
  518:  If  *Var1  ==  00000001
  528:  	Goto  2
  534:  EndIf
  53C:  Call  EnableActorBlur   ( .Actor:Self 00000000 )
  550:  Call  SetAnimation      ( .Actor:Self 00000001 0081000E )
  568:  Wait  5`
  574:  Call  PlaySoundAtActor  ( .Actor:Self 00002129 )
  588:  Call  SetAnimation      ( .Actor:Self 00000001 0081001C )
  5A0:  Thread
  5A8:  	Call  $Function_8021B950    ( 000000B4 00000010 )
  5BC:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  5D8:  EndThread
  5E0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5FC:  Call  PlayEffect    ( ~FX:Steam:LargeOutward *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  640:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.93] *Fixed[1.0] )
  660:  Wait  1`
  66C:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[0.85] *Fixed[1.0] )
  68C:  Wait  1`
  698:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.25] *Fixed[0.8] *Fixed[1.0] )
  6B8:  Wait  1`
  6C4:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.3] *Fixed[0.75] *Fixed[1.0] )
  6E4:  Wait  1`
  6F0:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.2] *Fixed[0.87] *Fixed[1.0] )
  710:  Wait  1`
  71C:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.1] *Fixed[0.92] *Fixed[1.0] )
  73C:  Wait  1`
  748:  Call  SetPartScale  ( .Actor:Self 00000001 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
  768:  Wait  20`
  774:  Call  SetActorSize  ( .Actor:Self  52`  115` )
  78C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  7A0:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  7B0:  	Call  UseBattleCamPreset    ( 00000013 )
  7C0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  7DC:  	Sub   *Var0  0000000F
  7EC:  	Add   *Var1  0000002D
  7FC:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  814:  	Call  SetBattleCamZoom      (  300` )
  824:  	Call  SetBattleCamOffsetZ   (  0` )
  834:  	Call  MoveBattleCamOver     (  40` )
  844:  Else
  84C:  	Call  UseBattleCamPreset    ( 00000013 )
  85C:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  878:  	Sub   *Var0  00000006
  888:  	Add   *Var1  00000012
  898:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  8B0:  	Call  SetBattleCamZoom      (  300` )
  8C0:  	Call  SetBattleCamOffsetZ   (  0` )
  8D0:  	Call  MoveBattleCamOver     (  40` )
  8E0:  EndIf
  8E8:  Call  ActorSpeak        ( 001300A9 .Actor:Self 00000001 0081001D 0081001C ) % Ohhhhhhh, NOOO!!!! Mario defeated me...again... He ...
  908:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  920:  Call  SetBattleFlagBits ( 00060000 .True )
  934:  Call  8026F60C  ( 00000014 )
  944:  Return
  94C:  End
}



#new:Script  $GetAngry
{
   48:  	Call  UseBattleCamPreset    ( 00000013 )
   58:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  	Sub   *Var0  0000001E
   84:  	Add   *Var1  00000051
   94:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   AC:  	Call  SetBattleCamZoom      (  400` )
   BC:  	Call  MoveBattleCamOver     (  40` )
			Wait  60`
			Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_Angry )
			Call  BindIdle  ( .Actor:Self $Script_Idle_Angry )
			Call  PlaySoundAtActor  ( .Actor:Self 00000367 )
  18:  Call  8026ED20      ( FFFFFF81 00000001 00000001 )
   30:  Call  8026EBF8      ( FFFFFF81 00000001 00000009 00000000 00000000 00000006 0000000C 00000006 00000000 00000000 )
   64:  Call  8026EA7C      ( FFFFFF81 00000001 0000000F )
			Return
			End
}


@	$Script_UseMove3
{
    0:  Call  AddActorVar   ( .Actor:Self 00000000 00000001 )
   18:  Call  AddActorVar   ( .Actor:Self 00000004 00000001 )
   30:  Call  AddActorVar   ( .Actor:Self 00000005 00000001 )
   48:  Call  AddActorVar   ( .Actor:Self 00000002 00000001 )
   60:  Call  AddActorVar   ( .Actor:Self 00000003 00000001 )
   78:  Call  AddActorVar   ( .Actor:Self 00000006 00000001 )
   90:  Call  GetActorHP    ( .Actor:Self *Var0 )
   A4:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
   B8:  Mul   *Var0  00000064
   C8:  Div   *Var0  *Var1
   D8:  Call  $Function_GetPlayerPercentHP  ( *Var2 )
   E8:  Sub   *Var2  *Var0
   F8:  If  *Var2  >  00000019
  108:  	Call  GetActorVar   ( .Actor:Self 00000007 *Var0 )
  120:  	If  *Var0  !=  00000000
  130:  		Call  RandInt   ( 00000064 *Var0 )
  144:  		If  *Var0  <  0000004B
  154:  			Call  GetActorVar   ( .Actor:Self 00000006 *Var0 )
  16C:  			If  *Var0  >  00000001
  17C:  				Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
						Exec $ShowMessage4
						ExecWait  $Script_Shockwave3
						Exec $ShowMessage7
  194:  				ExecWait  $Script_HealSelf3
  1A0:  				Return
  1A8:  			Else
  1B0:  				Call  RandInt   ( 00000064 *Var0 )
  1C4:  				If  *Var0  <  00000000
  1D4:  					Call  SetActorVar   ( .Actor:Self 00000006 00000000 )
							Exec $ShowMessage1
							ExecWait  $Script_Thunderbolt3
							Exec $ShowMessage7
  1EC:  					ExecWait  $Script_HealSelf3
							Exec $ShowMessage6
							ExecWait  $Script_8022F300
  1F8:  					Return
  200:  				EndIf
  208:  			EndIf
  210:  		EndIf
  218:  	EndIf
  220:  EndIf
  228:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  240:  If  *Var0  >  00000001
  250:  	Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  268:  	If  *Var0  !&  00080000
  278:  		Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
  290:  		Switch  *Var0
  29C:  			Case  ==  00000001
  2A8:  				Set   *Var0  00000000
  2B8:  			Case  ==  00000002
  2C4:  				Set   *Var0  00000000
  2D4:  			Case  ==  00000003
  2E0:  				Set   *Var0  0000000F
  2F0:  			Default
  2F8:  				Set   *Var0  0000004B
  308:  		EndSwitch
  310:  		Call  RandInt   ( 00000064 *Var1 )
  324:  		If  *Var1  <  *Var0
					Exec $ShowMessage6
  334:  			ExecWait  $Script_8022F300
					Exec $ShowMessage3
					ExecWait  $Script_FireBreath3
  340:  			Return
  348:  		EndIf
  350:  	EndIf
  358:  EndIf
  360:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
  378:  If  *Var0  <  00000003
  388:  	ExecWait  $Script_80230A2C %Move selector 1
  394:  	Return
  39C:  EndIf
  3A4:  ExecWait  $Script_8023083C %Move selector 2
  3B0:  Return
  3B8:  End
}


@	$Script_HealSelf3
{
    0:  Call  GetActorVar       ( .Actor:Self 00000007 *Var0 )
   18:  Sub   *Var0  00000001
   28:  Call  SetActorVar       ( .Actor:Self 00000007 *Var0 )
   40:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   54:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   64:  	Call  UseBattleCamPreset    ( 00000013 )
   74:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   90:  	Sub   *Var0  0000000F
   A0:  	Add   *Var1  00000061
   B0:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   C8:  	Call  SetBattleCamZoom      (  420` )
   D8:  	Call  SetBattleCamOffsetZ   (  0` )
   E8:  	Call  MoveBattleCamOver     (  40` )
   F8:  Else
  100:  	Call  UseBattleCamPreset    ( 00000013 )
  110:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  12C:  	Sub   *Var0  00000006
  13C:  	Add   *Var1  00000027
  14C:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  164:  	Call  SetBattleCamZoom      (  294` )
  174:  	Call  SetBattleCamOffsetZ   (  0` )
  184:  	Call  MoveBattleCamOver     (  40` )
  194:  EndIf
  19C:  Call  SetAnimation      ( .Actor:Self 00000001 0081000F )
  1B4:  Call  $Function_8021C004 ( )
  1C0:  Call  PlaySoundAtActor  ( .Actor:Self 00002126 )
  1D4:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
  1E8:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
  1F8:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  214:  	Add   *Var0  00000016
  224:  	Add   *Var1  00000087
  234:  	Sub   *Var2  00000003
  244:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[1.5] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  288:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  2A4:  	Add   *Var0  00000016
  2B4:  	Sub   *Var2  00000003
  2C4:  	Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 00000087 *Var2 *Fixed[0.45] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  308:  Else
  310:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  32C:  	Add   *Var0  00000009
  33C:  	Add   *Var1  00000036
  34C:  	Sub   *Var2  00000003
  35C:  	Call  PlayEffect    ( ~FX:EnergyIn:YellowPoints *Var0 *Var1 *Var2 *Fixed[0.6] 00000032 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  3A0:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  3BC:  	Add   *Var0  00000009
  3CC:  	Sub   *Var2  00000003
  3DC:  	Call  PlayEffect    ( ~FX:RadialFlowOut:YellowEnergy *Var0 00000036 *Var2 *Fixed[0.18] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  420:  EndIf
  428:  Wait  20`
  434:  Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  448:  Mul   *Var0  0000001F
  458:  Div   *Var0  00000064
  468:  Thread
  470:  	Wait  5`
  47C:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  490:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  4A4:  	Wait  30`
  4B0:  	Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
  4C4:  EndThread
  4CC:  Thread
  4D4:  	Call  8026BF48  ( 00000001 )
  4E4:  	Call  HealActor ( .Actor:Self *Var0 .False )
  4FC:  	Call  8026BF48  ( 00000000 )
  50C:  EndThread
  514:  Call  UseIdleAnimation  ( .Actor:Self .True )
		Add   *GB_EnemyDefense 1`
  528:  Return
  530:  End
}

%Bowser behaves strangely, so I'm just going
%to rescript how he selects moves.
%Have a high chance to use breath as first move.
%Then coin flip between claw swipe and disable jump.
%Move selector 1

@	$Script_80230A2C
{
    0:  Call  RandInt   ( 00000050 *Var0 )
   14:  If  *Var0  <  00000040
					Exec $ShowMessage3
			ExecWait  $Script_FireBreath3
		Else
			Call  RandInt   ( 00000001 *Var0 )
			If  *Var0  ==  00000000
				
				ExecWait  $Script_ClawSwipe3
			Else
				Exec $ShowMessage5
				ExecWait  $Script_DisableJump3
			EndIf
		EndIf
   70:  Call  RandInt   ( 00000001 *Var0 )
   84:  If  *Var0  ==  00000000
   BC:  	ExecWait  $Script_ClawSwipe3
   D0: 	Else
			Exec $ShowMessage5
			ExecWait  $Script_DisableJump3
   D8:  EndIf
   EC:  Return
   F4:  End
}


%Move selector 2

@	$Script_8023083C
{
    0:  Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   18:  If  *Var0  <=  00000003
   28:  	ExecWait  $Script_80230A2C
   34:  	Return
   3C:  EndIf
   44:  Call  GetActorVar   ( .Actor:Self 00000002 *Var0 )
   5C:  If  *Var0  >=  00000006
   6C:  	Call  RandInt   ( 0000001E *Var0 )
   80:  	If  *Var0  <  00000011
				Exec $ShowMessage4
   90:  		ExecWait  $Script_Shockwave3
				Exec $ShowMessage5
				ExecWait  $Script_DisableJump3
   9C:  	Else
				ExecWait  $Script_ClawSwipe3
				Exec $ShowMessage1
   A4:  		ExecWait  $Script_Thunderbolt3
				
   B0:  	EndIf
   B8:  	Return
   C0:  EndIf
   C8:  Call  RandInt   ( 00000064 *Var0 )
   DC:  If  *Var0  <  0000004B
   EC:  	Call  $Function_8021C974    ( *Var0 *Var1 )
  100:  	If  *Var0  >  00000000
				ExecWait  $Script_ClawSwipe3
				Exec $ShowMessage4
  110:  		ExecWait  $Script_Shockwave3
  11C:  		Return
  124:  	EndIf
  12C:  	If  *Var1  >  00000000
				Exec $ShowMessage3
				ExecWait  $Script_FireBreath3
				Exec $ShowMessage4
  13C:  		ExecWait  $Script_Shockwave3
  148:  		Return
  150:  	EndIf
  158:  EndIf
  160:  Call  RandInt   ( 0000006E *Var0 )
  174:  If  *Var0  <  0000001E
  184:  	If  *Var0  <  00000010
				Exec $ShowMessage4
  194:  		ExecWait  $Script_Shockwave3
				Exec $ShowMessage1
				ExecWait  $Script_Thunderbolt3
  1A0:  	Else
				Exec $ShowMessage1
  1A8:  		ExecWait  $Script_Thunderbolt3
				Exec $ShowMessage5
				ExecWait  $Script_DisableJump3
  1B4:  	EndIf
  1BC:  	Return
  1C4:  EndIf
  1CC:  ExecWait  $Script_80230A2C
  1D8:  Return
  1E0:  Return
  1E8:  End
}


@	$Script_FireBreath3
{
		Call  PlaySoundAtActor  ( .Actor:Player 00000367 )
    0:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   14:  Call  SetGoalToTarget   ( .Actor:Self )
   24:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   38:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   48:  	Call  UseBattleCamPreset    ( 00000013 )
   58:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   74:  	Sub   *Var0  0000001E
   84:  	Add   *Var1  00000051
   94:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
   AC:  	Call  SetBattleCamZoom      (  400` )
   BC:  	Call  MoveBattleCamOver     (  40` )
   CC:  Else
   D4:  	Call  UseBattleCamPreset    ( 00000013 )
   E4:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  100:  	Sub   *Var0  0000001E
  110:  	Add   *Var1  00000038
  120:  	Call  SetBattleCamTarget    ( *Var0 *Var1 *Var2 )
  138:  	Call  SetBattleCamZoom      (  350` )
  148:  	Call  MoveBattleCamOver     (  40` )
  158:  EndIf
  160:  Call  SetAnimation      ( .Actor:Self 00000001 00810016 )
  178:  Wait  12`
  184:  Call  SetAnimation      ( .Actor:Self 00000001 00810017 )
  19C:  Call  UseBattleCamPreset    ( 00000002 )
  1AC:  Call  MoveBattleCamOver (  55` )
  1BC:  Wait  2`
  1C8:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var3 )
  1E0:  Call  GetStatusFlags    ( .Actor:Self *Var4 )
  1F4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  210:  If  *Var3  &  00080000
  220:  	If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  230:  		Sub   *Var0  00000046
  240:  		Add   *Var1  00000023
  250:  	Else
  258:  		Sub   *Var0  0000001C
  268:  		Add   *Var1  0000000E
  278:  	EndIf
  280:  Else
  288:  	If  *Var4  !&  ~Flags:StatusFlags:Shrink % 80000
  298:  		Sub   *Var0  0000004B
  2A8:  		Add   *Var1  00000031
  2B8:  	Else
  2C0:  		Sub   *Var0  0000001E
  2D0:  		Add   *Var1  00000013
  2E0:  	EndIf
  2E8:  EndIf
  2F0:  Add   *Var2  0000000A
  300:  Call  SetGoalToTarget   ( .Actor:Self )
  310:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
  32C:  Sub   *Var3  00000028
  33C:  Set   *Var4  00000014
  34C:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var6 )
  364:  If  *Var6  &  00080000
  374:  	Call  PlayEffect    ( ~FX:FireBreath:Large *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  3B8:  Else
  3C0:  	Call  GetStatusFlags    ( .Actor:Self *Var7 )
  3D4:  	If  *Var7  !&  ~Flags:StatusFlags:Shrink % 80000
  3E4:  		Add   *Var0  0000000F
  3F4:  	Else
  3FC:  		Add   *Var0  00000006
  40C:  	EndIf
  414:  	Sub   *Var3  0000000A
  424:  	Call  PlayEffect    ( ~FX:FireBreath:Tiny *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 00000032 00000001 00000018 00000000 00000000 00000000 )
  468:  	Call  $Function_8021CF54    ( *VarF )
  478:  EndIf
  480:  Thread
  488:  	Call  $Function_8021B950    ( 00000032 00000094 )
  49C:  	Call  PlaySound ( 000003BD )
  4AC:  	Wait  70`
  4B8:  	Call  PlaySound ( 000007BD )
  4C8:  EndThread
  4D0:  Wait  6`
  4DC:  Call  SetGoalToTarget   ( .Actor:Self )
  4EC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  510:  Switch  *VarA
  51C:  	CaseOR  ==  .HitResult:Miss % 6
  528:  	CaseOR  ==  .HitResult:Lucky % 5
  534:  		Wait  7`
  540:  		Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
  558:  		Wait  20`
  564:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  57C:  		Wait  6`
  588:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  5A0:  		Wait  10`
  5AC:  		ExecWait  $Script_80231CA8
  5B8:  		If  *VarA  ==  00000005
  5C8:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  5EC:  		EndIf
  5F4:  		Wait  10`
  600:  		Return
  608:  	EndCaseGroup
  610:  	Default
  618:  EndSwitch
  620:  Wait  2`
  62C:  Call  SetGoalToTarget   ( .Actor:Self )
  63C:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  654:  If  *Var0  &  00080000
  664:  	Set   *Var0  00000019
  674:  Else
  67C:  	Set   *Var0  0000000F
  68C:  EndIf
		Call  80269EAC  ( 00000015 )
  694:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:Fire 0000FFFF 00000000 *Var0 00000020 )
  6BC:  Switch  *VarF
  6C8:  	CaseOR  ==  .HitResult:Hit % 0
  6D4:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  6E0:  	CaseOR  ==  0000000A % A
  6EC:  		Wait  7`
  6F8:  		Call  SetAnimation  ( .Actor:Self 00000001 00810018 )
  710:  		Wait  19`
  71C:  		Call  SetAnimation  ( .Actor:Self 00000001 00810019 )
  734:  		Wait  11`
  740:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  758:  		Wait  18`
  764:  		If  *VarF  ==  0000000A % A
  774:  			Return
  77C:  		EndIf
  784:  	EndCaseGroup
  78C:  EndSwitch
  794:  Return
  79C:  End
}



@	$Script_ClawSwipe3
{
		Exec $ShowMessage2
    0:  Call  SetActorVar       ( .Actor:Self 00000004 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  200` )
   70:  	Call  BattleCamTargetActor  ( .Actor:Self )
   80:  	Call  MoveBattleCamOver     (  40` )
   90:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   A8:  Else
   B0:  	Call  UseBattleCamPreset    ( 0000003F )
   C0:  	Call  SetBattleCamZoom      (  160` )
   D0:  	Call  SetBattleCamOffsetZ   (  5` )
   E0:  	Call  BattleCamTargetActor  ( .Actor:Self )
   F0:  	Call  MoveBattleCamOver     (  40` )
  100:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  118:  EndIf
  120:  Call  SetAnimation      ( .Actor:Self 00000001 00810003 )
  138:  Call  SetGoalToTarget   ( .Actor:Self )
  148:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  15C:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  16C:  	Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
  188:  Else
  190:  	Call  AddGoalPos    ( .Actor:Self  24`  0`  0` )
  1AC:  EndIf
  1B4:  Call  SetActorSpeed ( .Actor:Self *Fixed[9.0] )
  1C8:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1E0:  Call  SetAnimation  ( .Actor:Self 00000001 00810009 )
  1F8:  Wait  15`
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00810015 )
  21C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  230:  Wait  3`
  23C:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  260:  Switch  *VarA
  26C:  	CaseOR  ==  .HitResult:Miss % 6
  278:  	CaseOR  ==  .HitResult:Lucky % 5
  284:  		Wait  20`
  290:  		Call  UseBattleCamPreset    ( 00000002 )
  2A0:  		Call  MoveBattleCamOver     (  20` )
  2B0:  		ExecWait  $Script_80231CA8
  2BC:  		If  *VarA  ==  00000005
  2CC:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  2F0:  			Wait  30`
  2FC:  		Else
  304:  			Wait  30`
  310:  		EndIf
  318:  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  32C:  		Set   *Var1  00810003
  33C:  		ExecWait  $Script_8022F334
  348:  		Return
  350:  	EndCaseGroup
  358:  	Default
  360:  EndSwitch
  368:  Wait  4`
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
  39C:  If  *Var0  &  00080000
  3AC:  	Set   *Var0  0000000F
  3CC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000008 00000000 *Var0 00000020 )
  3F4:  Else
  3FC:  	Set   *Var0  00000009
  41C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000008 00000000 *Var0 00000020 )
  444:  EndIf
  284:  		Wait  15`
  204:  Call  SetAnimation  ( .Actor:Self 00000001 00810023 )
  21C:  Call  PlaySoundAtActor  ( .Actor:Self 0000035E )
  374:  Call  SetGoalToTarget   ( .Actor:Self )
  384:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var0 )
		Wait  6`
  39C:  If  *Var0  &  00080000
  3AC:  	Set   *Var0  00000010
  3BC:  	Call  80269EAC  ( 0000000C )
  3CC:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:6:100` *Var0 00000020 )
  3F4:  Else
  3FC:  	Set   *Var0  00000008
  40C:  	Call  80269EAC  ( 0000000C )
  41C:  	Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 ~DebuffType:Poison:3:100` *Var0 00000020 )
  444:  EndIf
  44C:  Switch  *VarF
  458:  	CaseOR  ==  .HitResult:Hit % 0
  464:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  470:  	CaseOR  ==  0000000A % A
  47C:  		Wait  10`
  488:  		If  *VarF  ==  0000000A % A
  498:  			Return
  4A0:  		EndIf
  4A8:  		Call  UseBattleCamPreset    ( 00000002 )
  4B8:  		Call  MoveBattleCamOver     (  20` )
  4C8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  4DC:  		Set   *Var1  00810003
  4EC:  		ExecWait  $Script_8022F334
  4F8:  	EndCaseGroup
  500:  EndSwitch
  508:  Return
  510:  End
}



@	$Script_DisableJump3
{
    0:  Call  SetActorVar       ( .Actor:Self 00000005 00000000 )
   18:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   2C:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   40:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   50:  	Call  UseBattleCamPreset    ( 0000003F )
   60:  	Call  SetBattleCamZoom      (  300` )
   70:  	Call  SetBattleCamOffsetZ   (  54` )
   80:  	Call  BattleCamTargetActor  ( .Actor:Self )
   90:  	Call  MoveBattleCamOver     (  40` )
   A0:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
   B8:  Else
   C0:  	Call  UseBattleCamPreset    ( 0000003F )
   D0:  	Call  SetBattleCamZoom      (  240` )
   E0:  	Call  SetBattleCamOffsetZ   (  21` )
   F0:  	Call  BattleCamTargetActor  ( .Actor:Self )
  100:  	Call  MoveBattleCamOver     (  40` )
  110:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  128:  EndIf
  130:  Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  148:  Call  SetGoalToTarget       ( .Actor:Self )
  158:  Call  AddGoalPos    ( .Actor:Self  60`  0`  0` )
  174:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  188:  Call  RunToGoal     ( .Actor:Self  0` .False )
  1A0:  Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  1B8:  Wait  6`
  1C4:  Call  SetAnimation  ( .Actor:Self 00000001 00810011 )
  1DC:  Wait  2`
  1E8:  Call  SetAnimation  ( .Actor:Self 00000001 00810012 )
  200:  Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.1] )
  214:  Call  EnemyTestTarget       ( .Actor:Self *VarA ~Flags:DamageType:0 00000000 00000001 00000010 )
  238:  Switch  *VarA
  244:  	CaseOR  ==  .HitResult:Miss % 6
  250:  	CaseOR  ==  .HitResult:Lucky % 5
  25C:  		Call  SetGoalToTarget   ( .Actor:Self )
  26C:  		Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  288:  		Sub   *Var0  0000001E
  298:  		Set   *Var1  00000000
  2A8:  		Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  2C4:  		Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  2E0:  		Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  300:  		Thread
  308:  			Call  $Function_8021B950    ( 00000050 0000000E )
  31C:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[5.0] )
  338:  		EndThread
  340:  		Sub   *Var0  00000023
  350:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  36C:  		Call  JumpToGoal    ( .Actor:Self  14` .False .True .False )
  38C:  		Thread
  394:  			Call  $Function_8021B950    ( 00000050 0000000E )
  3A8:  			Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[4.0] )
  3C4:  		EndThread
  3CC:  		Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  3E4:  		Wait  2`
  3F0:  		Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  408:  		Wait  15`
  414:  		Call  UseBattleCamPreset    ( 00000002 )
  424:  		If  *VarA  ==  .HitResult:Lucky % 5
  434:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  458:  		EndIf
  460:  		Call  SetActorSpeed ( .Actor:Self *Fixed[18.0] )
  474:  		Set   *Var1  00810003
  484:  		ExecWait  $Script_8022F334
  490:  		Return
  498:  	EndCaseGroup
  4A0:  	Default
  4A8:  EndSwitch
  4B0:  Call  SetGoalToTarget   ( .Actor:Self )
  4C0:  Call  JumpToGoal        ( .Actor:Self  15` .False .True .False )
  4E0:  Thread
  4E8:  	Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[5.0] )
  504:  EndThread
  50C:  Wait  2`
  518:  Call  SetGoalToTarget   ( .Actor:Self )
  528:  Call  SetAnimation      ( .Actor:Self 00000001 00810013 )
  540:  Call  GetPartEventFlags ( .Actor:Self 00000001 *Var1 )
  558:  If  *Var1  &  00080000
  568:  	Set   *Var0  00000016
  578:  Else
  580:  	Set   *Var0  0000000C
  590:  EndIf
  598:  Call  GetStatusFlags    ( .Actor:Self *VarF )
  5AC:  If  *VarF  !&  ~Flags:StatusFlags:Shrink % 80000
  5BC:  	Call  80269EAC  ( 00000018 )
  5CC:  EndIf
  5D4:  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:0 00000000 00000000 *Var0 00000020 )
  5FC:  Set   *Var0  FFFFFFFF
  60C:  Call  GetBattleFlags    ( *Var1 )
  61C:  If  *Var1  !&  80000000
  62C:  	Call  GetStatusFlags    ( .Actor:Player *Var1 )
  640:  	If  *Var1  !&  ~Flags:StatusFlags:Stone|RightOn % 40100000
  650:  		Call  GetStatusFlags    ( .Actor:Self *Var1 )
  664:  		If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  674:  			Call  $Function_8021B570    ( *Var0 )
  684:  		EndIf
  68C:  	EndIf
  694:  EndIf
  69C:  If  *Var0  !=  FFFFFFFF
  6AC:  	Call  LandJump      ( .Actor:Self )
  6BC:  	Call  $Function_8021B950    ( 00000050 0000000E )
  6D0:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  6E4:  	Call  SetActorVar   ( .Actor:Self 00000009 00000001 )
  6FC:  	Exec  $Script_80230B58
  708:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  724:  	Add   *Var0  00000034
  734:  	Set   *Var1  00000000
  744:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  760:  	Call  JumpToGoal    ( .Actor:Self  15` .False .True .False )
  780:  	Call  PlaySoundAtActor      ( .Actor:Self 000020EA )
  794:  	Thread
  79C:  		Call  $Function_8021B950    ( 00000050 0000000E )
  7B0:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[5.0] )
  7CC:  	EndThread
  7D4:  	Add   *Var0  0000001E
  7E4:  	Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  800:  	Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  820:  	Thread
  828:  		Call  $Function_8021B950    ( 00000050 0000000E )
  83C:  		Call  ShakeCam  ( .Cam:Battle 00000000  3` *Fixed[4.0] )
  858:  	EndThread
  860:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  878:  	Wait  2`
  884:  	Label  0
  890:  	Call  GetActorVar   ( .Actor:Self 00000009 *Var0 )
  8A8:  	If  *Var0  !=  00000000
  8B8:  		Wait  1`
  8C4:  		Goto  0
  8D0:  	EndIf
  8D8:  	Wait  4`
  8E4:  	Call  SetActorYaw   ( .Actor:Self  0` )
  8F8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810003 )
  910:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  928:  	Call  $Function_8021CC5C    ( *Var0 *Var1 *Var2 *Var3 )
  944:  	Add   *Var1  00000026
  954:  	Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
  968:  	Call  SetGoalPos    ( .Actor:Self *Var1 *Var2 *Var3 )
  984:  	Call  RunToGoal     ( .Actor:Self  0` .False )
  99C:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  9B4:  	Wait  6`
  9C0:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[2.0] )
  9D8:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  9F0:  	Wait  2`
  9FC:  	Call  GetActorVar   ( .Actor:Self 0000000A *Var0 )
  A14:  	Call  $Function_8021B314    ( *Var0 *Var1 *Var2 *Var3 )
  A30:  	Call  SetActorVar   ( .Actor:Self 00000009 00000002 )
  A48:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  A8C:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  AD0:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  AE4:  	Wait  3`
  AF0:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  B08:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  B20:  	Wait  2`
  B2C:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  B70:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  BB4:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  BC8:  	Wait  4`
  BD4:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  BEC:  	Call  SetAnimation  ( .Actor:Self 00000001 0081001A )
  C04:  	Wait  2`
  C10:  	Call  PlayEffect    ( ~FX:Firework:White *Var1 00000000 *Var3 *Fixed[0.75] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C54:  	Call  PlayEffect    ( ~FX:Steam:SmallOutward *Var1 00000000 *Var3 *Fixed[3.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  C98:  	Call  PlaySoundAtActor  ( .Actor:Self 000020F6 )
  CAC:  	Wait  15`
  CB8:  	Call  SetAnimation  ( .Actor:Self 00000001 00810007 )
  CD0:  	Wait  15`
  CDC:  	Call  SetAnimationRate  ( .Actor:Self 00000001 *Fixed[1.0] )
  CF4:  Else
  CFC:  	Call  GetBattleFlags    ( *Var1 )
  D0C:  	If  *Var1  !&  80000000
  D1C:  		Call  GetStatusFlags    ( .Actor:Player *Var1 )
  D30:  		If  *Var1  !&  ~Flags:StatusFlags:Stone % 100000
  D40:  			Call  GetStatusFlags    ( .Actor:Self *Var1 )
  D54:  			If  *Var1  !&  ~Flags:StatusFlags:Shrink % 80000
  D64:  				Call  LandJump  ( .Actor:Self )
  D74:  			EndIf
  D7C:  		EndIf
  D84:  	EndIf
  D8C:  	Call  $Function_8021A2C0    ( 00000050 0000000E )
  DA0:  	Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  DBC:  	Add   *Var0  00000028
  DCC:  	Set   *Var1  00000000
  DDC:  	Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 00000000 00000000 )
  DF8:  	Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
  E14:  	Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
  E34:  	Call  PlaySoundAtActor  ( .Actor:Self 000020EA )
  E48:  	Thread
  E50:  		Call  $Function_8021A2C0    ( 00000050 0000000E )
  E64:  		Call  ShakeCam  ( .Cam:Battle 00000000  4` *Fixed[3.0] )
  E80:  	EndThread
  E88:  	Call  SetAnimation  ( .Actor:Self 00000001 00810014 )
  EA0:  	Wait  3`
  EAC:  	Call  SetAnimation  ( .Actor:Self 00000001 00810002 )
  EC4:  	Wait  20`
  ED0:  EndIf
  ED8:  If  *VarF  ==  0000000A
  EE8:  	Return
  EF0:  EndIf
  EF8:  Call  UseBattleCamPreset    ( 00000002 )
  F08:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  F1C:  Set   *Var1  00810003
  F2C:  ExecWait  $Script_80228508
  F38:  Return
  F40:  End
}


@	$Script_Thunderbolt3
{
  [140]  	Wait  40`
  [2E8]  	Wait  40`
  [4BC]  		Wait  5`
  [4FC]  			Wait  10`
  [51C]  			Wait  10`
  [53C]  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
  [58C]  Wait  3`
  [5D0]  	Set   *Var0  00000000
  [5E0]  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Electric|NoContact 0000FFFF 80010264 00000018 00000020 )
  [610]  	Set   *Var0  00000000
  [620]  	Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:Electric|NoContact 0000FFFF 80010264 00000010 00000020 )
  [680]  		Wait  10`
  [6B8]  		Call  SetActorSpeed ( .Actor:Self *Fixed[15.0] )
}


@	$Script_Shockwave3
{
  [1B0]  Wait  2`
  [3B8]  Wait  15`
  [41C]  Wait  3`
  [5AC]  Wait  5`
  [678]  				Wait  10`
  [684]  				Return
  [68C] 			Default
  [694]  				Wait  2`
  [73C]  					Set   *Var1  00000009
  [74C]  				Else
  [754]  					Set   *Var1  00000009
  [764]  				EndIf
  [76C]  				Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic|IgnoreDefense 0000FFFF 00000000 *Var1 00000020 )
  [7D4]  				Wait  10`
  [8D0]  Wait  1`
  [8FC]  	Set   *Var1  00000004
  [914]  	Set   *Var1  00000004
  [92C]  Call  EnemyDamageTarget ( .Actor:Self *VarF ~Flags:DamageType:NoOtherDamagePopups|Magic|Cosmic|IgnoreDefense 0000FFFF 00000000 *Var1 00000020 )
  [9AC]  		Wait  5`
}


#new:Formation $Formation_05
{
	$Bowser1 00000002 0000000A 00000000 00000000 00000000 00000000
}


@	$FormationTable
{
	$SJIS_80234968 00000001 $Formation_00 $Stage_80234274 00000000
	$SJIS_80234950 00000001 $Formation_01 $Stage_802342E0 00000000
	$SJIS_80234938 00000001 $Formation_02 $Stage_802342E0 00000000
	$SJIS_80234920 00000001 $Formation_03 $Stage_802345E8 00000000
	$SJIS_80234908 00000001 $Formation_04 $Stage_802345E8 00000000
	00000000 	   00000001 $Formation_05 $Stage_802345E8 00000000
	00000000 00000000 00000000 00000000 00000000
}
