% Automatically dumped from section 02

%Jr Troopa has been moved from his section 
%to an import due to me running out of space.
%He has 120 HP and all of his tricks from
%his 6th battle.
%He will either heal or buff when he is
%low on HP. Roughly below 40.

#new:Actor $JrTroopa5 {
% stats
[Index]        8Cb 
[Level]        77`b 
[MaxHP]       120`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022A634_02 
% ai
[PartsCount]    2`s 
[PartsTable]  $PartsTable_8022A6E0_02 
[Script]      $Script_Init_8022ACE4_02 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   3`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -20`b  35`b % dx dy
[StatusIcon]   10`b  25`b % dx dy
}


#new:Function $Function_80218AD0_02 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218D28_02 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S4, 20 (SP)
    8:  COPY      S4, A0
    C:  SW        RA, 24 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S1, 14 (SP)
   1C:  SW        S0, 10 (SP)
   20:  LW        S2, C (S4)
   24:  LW        A1, 0 (S2)
   28:  JAL       ~Func:get_variable
   2C:  ADDIU     S2, S2, 4
   30:  LW        A1, 0 (S2)
   34:  ADDIU     S2, S2, 4
   38:  COPY      A0, S4
   3C:  JAL       ~Func:get_variable
   40:  COPY      S0, V0
   44:  LW        A1, 0 (S2)
   48:  ADDIU     S2, S2, 4
   4C:  COPY      A0, S4
   50:  JAL       ~Func:get_variable
   54:  COPY      S1, V0
   58:  COPY      S3, V0
   5C:  LW        A1, 0 (S2)
   60:  ADDIU     S2, S2, 4
   64:  COPY      A0, S4
   68:  JAL       ~Func:get_variable
   6C:  SUBU      S3, S3, S0
   70:  COPY      S0, V0
   74:  COPY      A0, S4
   78:  LW        A1, 0 (S2)
   7C:  JAL       ~Func:get_variable
   80:  SUBU      S0, S0, S1
   84:  BNE       S3, R0, .oA0
   88:  NOP
   8C:  BNE       S0, R0, .oA0
   90:  COPY      A0, S4
   94:  LW        A1, 0 (S2)
   98:  BEQ       R0, R0, .oC8
   9C:  COPY      A2, V0
        .oA0
   A0:  MTC1      S3, F12
   A4:  NOP
   A8:  CVT.S.W   F12, F12
   AC:  MTC1      S0, F14
   B0:  NOP
   B4:  JAL       $Function_80218B9C_02
   B8:  CVT.S.W   F14, F14
   BC:  COPY      A0, S4
   C0:  LW        A1, 0 (S2)
   C4:  ADDIU     A2, V0, FFA6
        .oC8
   C8:  JAL       ~Func:set_variable
   CC:  NOP
   D0:  LI        V0, 2
   D4:  LW        RA, 24 (SP)
   D8:  LW        S4, 20 (SP)
   DC:  LW        S3, 1C (SP)
   E0:  LW        S2, 18 (SP)
   E4:  LW        S1, 14 (SP)
   E8:  LW        S0, 10 (SP)
   EC:  JR        RA
   F0:  ADDIU     SP, SP, 28
}


#new:Function $Function_80218B9C_02 {
    0:  ADDIU     SP, SP, FFD8
    4:  SDC1      F22, 20 (SP)
    8:  MOV.S     F22, F12
    C:  SDC1      F20, 18 (SP)
   10:  SW        RA, 10 (SP)
   14:  JAL       ~Func:length2D
   18:  MOV.S     F20, F14
   1C:  TRUNC.W.S F6, F20
   20:  MFC1      V0, F6
   24:  NOP
   28:  BLTZL     V0, .o30
   2C:  SUBU      V0, R0, V0
        .o30
   30:  MTC1      V0, F2
   34:  NOP
   38:  CVT.S.W   F2, F2
   3C:  DIV.S     F4, F2, F0
   40:  CLEAR     A0
   44:  LI        A2, 5A
   48:  COPY      A1, A0
   %4C:  LA        A3, $FloatTable_8022FEC8_02
   54:  ANDI      V0, A2, FFFF
        .o58
   58:  ANDI      V1, A0, FFFF
   5C:  SUBU      V0, V0, V1
   60:  SRL       V1, V0, 1F
   64:  ADDU      V0, V0, V1
   68:  SRA       V0, V0, 1
   6C:  ADDU      V1, A0, V0
   70:  ANDI      V0, V1, FFFF
   74:  SLL       V0, V0, 2
   78:  ADDU      V0, V0, A3
   7C:  LWC1      F0, 0 (V0)
   80:  C.LT.S    F0, F4
   84:  NOP
   88:  BC1FL     .o94
   8C:  COPY      A2, V1
   90:  COPY      A0, V1
        .o94
   94:  ADDIU     A1, A1, 1
   98:  ANDI      V0, A1, FFFF
   9C:  SLTIU     V0, V0, 7
   A0:  BNE       V0, R0, .o58
   A4:  ANDI      V0, A2, FFFF
   A8:  ANDI      V0, A0, FFFF
   AC:  SLL       V0, V0, 2
   B0:  ANDI      V1, A2, FFFF
   %B4:  LTF       F2, V0 ($FloatTable_8022FEC8_02)
   C0:  SLL       V1, V1, 2
   C4:  SUB.S     F2, F2, F4
   %C8:  LTF       F0, V1 ($FloatTable_8022FEC8_02)
   D4:  SUB.S     F0, F0, F4
   D8:  ABS.S     F2, F2
   DC:  ABS.S     F0, F0
   E0:  C.LT.S    F2, F0
   E4:  NOP
   E8:  BC1F      .oF4
   EC:  COPY      V1, A2
   F0:  COPY      V1, A0
        .oF4
   F4:  MTC1      R0, F0
   F8:  NOP
   FC:  C.LT.S    F22, F0
  100:  NOP
  104:  BC1F      .o130
  108:  NOP
  10C:  C.LE.S    F0, F20
  110:  NOP
  114:  BC1F      .o128
  118:  LI        V0, B4
  11C:  SUBU      V1, V0, V1
  120:  MTC1      R0, F0
  124:  NOP
        .o128
  128:  C.LT.S    F22, F0
  12C:  NOP
        .o130
  130:  BC1F      .o148
  134:  NOP
  138:  C.LT.S    F20, F0
  13C:  NOP
  140:  BC1TL     .o148
  144:  ADDIU     V1, V1, B4
        .o148
  148:  MTC1      R0, F0
  14C:  NOP
  150:  C.LE.S    F0, F22
  154:  NOP
  158:  BC1F      .o174
  15C:  NOP
  160:  C.LT.S    F20, F0
  164:  NOP
  168:  BC1F      .o174
  16C:  LI        V0, 168
  170:  SUBU      V1, V0, V1
        .o174
  174:  LW        RA, 10 (SP)
  178:  LDC1      F22, 20 (SP)
  17C:  LDC1      F20, 18 (SP)
  180:  ANDI      V0, V1, FFFF
  184:  JR        RA
  188:  ADDIU     SP, SP, 28
}

#new:Function $Function_80218F60_02 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  JAL       ~Func:mdl_set_all_fog_mode
    C:  LI        A0, 1
   10:  CLEAR     A0
   14:  LI        V0, 1
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  LAW       V1, 801512F0
   28:  COPY      A3, A0
   2C:  JAL       ~Func:set_background_color_blend
   30:  SB        V0, 0 (V1)
   34:  LW        RA, 10 (SP)
   38:  LI        V0, 2
   3C:  JR        RA
   40:  ADDIU     SP, SP, 18
}

#new:Function $Function_80218FA4_02 {
    0:  ADDIU     SP, SP, FFE8
    4:  SW        RA, 10 (SP)
    8:  LW        V0, C (A0)
    C:  JAL       ~Func:get_variable
   10:  LW        A1, 0 (V0)
   14:  CLEAR     A0
   18:  COPY      A1, A0
   1C:  COPY      A2, A0
   20:  JAL       ~Func:set_background_color_blend
   24:  ANDI      A3, V0, FF
   28:  LW        RA, 10 (SP)
   2C:  LI        V0, 2
   30:  JR        RA
   34:  ADDIU     SP, SP, 18
}

#new:IdleAnimations $IdleAnimations_8022A550_02 {
.Status:Normal    00240002
.Status:Sleep     0024000C
.Status:Stone     00240000
.Status:Poison    00240000
.Status:Stop      00240000
.Status:Static    00240000
.Status:Paralyze  00240000
.Status:Dizzy     0024000D
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022A5D8_02 {
.Status:Normal    00210003
.Status:Sleep     0021001C
.Status:Stone     00210000
.Status:Poison    00210000
.Status:Stop      00210000
.Status:Static    00210000
.Status:Paralyze  00210000
.Status:Dizzy     0021001D
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022A61C_02 {
.Status:Normal    00210014
.Status:End
}

#new:DefenseTable $DefenseTable_8022A628_02 {
.Element:Normal 00000003
.Element:End
}

#new:StatusTable $StatusTable_8022A634_02 {
.Status:Normal    100`
.Status:Default   100`
.Status:Sleep      25`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      40`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   35`
.Status:Shrink     40`
.Status:Stop       40`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -3`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -3`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -3`
.Status:ShrinkTurnMod    -2`
.Status:StopTurnMod      -3`
.Status:End
}

#new:PartsTable $PartsTable_8022A6E0_02 {
00800001 01000000 001C00FF $IdleAnimations_8022A550_02 $DefenseTable_8022A628_02 00000000 00000000 FEF90000 00000000 
00020000 02000000 001E00FF $IdleAnimations_8022A5D8_02 $DefenseTable_8022A628_02 00000000 00000000 00000000 00000000 
}

#new:Script $Script_8022A750_02 {
    0:  Call  GetStatusFlags    ( .Actor:Self *Var2 )
   14:  If  *Var2  &  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   24:  	Return
   2C:  EndIf
   34:  Call  GetBattleFlags    ( *Var2 )
   44:  If  *Var2  &  00080000 
   54:  	Call  GetMenuSelection  ( *Var0 *Var1 *Var2 )
   6C:  	If  *Var2  ==  000000B7 
   7C:  		Call  SetActorVar   ( .Actor:Self 00000003 00000001 )
   94:  		Call  PlaySoundAtActor  ( .Actor:Self 00000263 )
   A8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   C4:  		Add   *Var1  0000001E 
   D4:  		Call  ShowEmote     ( 00000000 .Emote:Question  -45`  30` 00000002 *Var0 *Var1 *Var2  5` )
  104:  		Wait  8`
  110:  	EndIf
  118:  EndIf
  120:  Return
  128:  End
}

#new:Script $Script_8022A880_02 {
    0:  Call  PlaySoundAtActor  ( .Actor:Self 000020B9 )
   14:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
   30:  Call  GetStatusFlags    ( .Actor:Self *Var3 )
   44:  If  *Var3  !&  ~Flags:StatusFlags:Shrink % 80000
   54:  	Add   *Var1  00000010 
   64:  Else
   6C:  	Add   *Var1  00000006 
   7C:  EndIf
   84:  Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
   C8:  Call  PlayEffect    ( 00000013 00000001 *Var0 *Var1 *Var2 00000001 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  10C:  Thread
  114:  	Set   *Var0  00000000 
  124:  	Loop  00000020 
  130:  		Wait  1`
  13C:  		Add   *Var0  0000002D 
  14C:  		Call  SetActorRotation  ( .Actor:Self 00000000 *Var0 00000000 )
  168:  	EndLoop
  170:  EndThread
  178:  Wait  16`
  184:  Call  PlaySoundAtActor  ( .Actor:Self 00000300 )
  198:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  1B4:  Add   *Var1  0000000F 
  1C4:  Call  PlayEffect    ( ~FX:EnergyWaveOut:Grey *Var0 *Var1 *Var2 00000001 00000028 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  208:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  24C:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 FFFFFFFC 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  290:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2D4:  Call  PlayEffect    ( ~FX:Steam:TinyPuff *Var0 *Var1 *Var2 00000004 00000004 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  318:  Return
  320:  End
}

#new:Script $Script_8022ABA8_02 {
    0:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
   1C:  Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
   38:  Call  UseBattleCamPreset    ( 00000007 )
   48:  Call  BattleCamTargetActor  ( .Actor:Self )
   58:  Call  SetBattleCamOffsetZ   (  38` )
   68:  Call  SetBattleCamZoom      (  256` )
   78:  Call  MoveBattleCamOver     (  15` )
   88:  Return
   90:  End
}

#new:Script $Script_8022AC40_02 {
    0:  Call  802535B4  ( 00000001 )
   10:  Call  UseBattleCamPreset    ( 00000002 )
   20:  Call  MoveBattleCamOver     (  12` )
   30:  Return
   38:  End
}

#new:Script $Script_Init_8022ACE4_02 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_8022B4F0_02 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_8022ADA4_02 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_8022ADD8_02 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_8022BB44_02 )
   50:  Call  SetActorVar   ( .Actor:Self 00000000 00000000 )
   68:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   80:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   98:  Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
		Call  SetActorVar 	( .Actor:Self 00000004 00000000 )
   B0:  Return
   B8:  End
}

#new:Script $Script_Idle_8022ADA4_02 {
    0:  Label  0
    C:  Wait  1`
   18:  Goto  0
   24:  Return
   2C:  End
}

#new:Script $Script_HandleEvent_8022ADD8_02 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	Case  ==  .Event:HitCombo % 9
   54:  		SetConst  *Var0  00000001 
   64:  		SetConst  *Var1  00240009 
   74:  		ExecWait  DoNormalHit 
   80:  	Case  ==  .Event:Hit % A
   8C:  		SetConst  *Var0  00000001 
   9C:  		SetConst  *Var1  00240009 
   AC:  		ExecWait  DoNormalHit 
   B8:  		ExecWait  $Script_8022A750_02 
   C4:  		ExecWait  $Script_8022C2A4_02 
   D0:  	Case  ==  .Event:Death % 20
   DC:  		SetConst  *Var0  00000001 
   EC:  		SetConst  *Var1  00240009 
   FC:  		ExecWait  DoNormalHit 
  108:  		Wait  2`
  114:  		SetConst  *Var0  00000001 
  124:  		SetConst  *Var1  00240000 
  134:  		ExecWait  $Script_8022BF1C_02 
  140:  		Return
  148:  	Case  ==  .Event:BurnHit % E
  154:  		Set   *Var0  00000001 
  164:  		Set   *Var1  0024000A 
  174:  		Set   *Var2  0024000B 
  184:  		ExecWait  DoBurnHit 
  190:  	Case  ==  .Event:BurnDeath % 24
  19C:  		Set   *Var0  00000001 
  1AC:  		Set   *Var1  0024000A 
  1BC:  		Set   *Var2  0024000B 
  1CC:  		ExecWait  DoBurnHit 
  1D8:  		Wait  2`
  1E4:  		SetConst  *Var0  00000001 
  1F4:  		SetConst  *Var1  0024000B 
  204:  		ExecWait  $Script_8022BF1C_02 
  210:  		Return
  218:  	Case  ==  .Event:SpinSmashHit % B
  224:  		SetConst  *Var0  00000001 
  234:  		SetConst  *Var1  00240009 
  244:  		ExecWait  DoSpinSmashHit 
  250:  	Case  ==  .Event:SpinSmashDeath % 21
  25C:  		SetConst  *Var0  00000001 
  26C:  		SetConst  *Var1  00240009 
  27C:  		ExecWait  DoSpinSmashHit 
  288:  		SetConst  *Var0  00000001 
  298:  		SetConst  *Var1  00240009 
  2A8:  		ExecWait  $Script_8022BF1C_02 
  2B4:  		Return
  2BC:  	Case  ==  .Event:ShockHit % 2F
  2C8:  		SetConst  *Var0  00000001 
  2D8:  		SetConst  *Var1  00240009 
  2E8:  		ExecWait  DoShockHit 
  2F4:  		SetConst  *Var0  00000001 
  304:  		SetConst  *Var1  00240009 
  314:  		ExecWait  DoJumpBack 
  320:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  340:  		Call  ResetAllActorSounds   ( .Actor:Self )
  350:  		SetConst  *Var0  00000001 
  360:  		SetConst  *Var1  00240005 
  370:  		ExecWait  DoReturnHome 
  37C:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.6] )
  390:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  3B0:  	Case  ==  .Event:ShockDeath % 26
  3BC:  		SetConst  *Var0  00000001 
  3CC:  		SetConst  *Var1  00240009 
  3DC:  		ExecWait  DoShockHit 
  3E8:  		SetConst  *Var0  00000001 
  3F8:  		SetConst  *Var1  00240009 
  408:  		ExecWait  DoJumpBack 
  414:  		SetConst  *Var0  00000001 
  424:  		SetConst  *Var1  00240000 
  434:  		ExecWait  $Script_8022BF1C_02 
  440:  		Return
  448:  	CaseOR  ==  00000017 % 17
  454:  	CaseOR  ==  .Event:Immune % 19
  460:  		SetConst  *Var0  00000001 
  470:  		SetConst  *Var1  00240002 
  480:  		ExecWait  DoImmune 
  48C:  		ExecWait  $Script_8022A750_02 
  498:  		ExecWait  $Script_8022C2A4_02 
  4A4:  	EndCaseGroup
  4AC:  	Case  ==  .Event:BeginAirLift % 3A
  4B8:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4CC:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  4DC:  			Call  SetAnimation  ( .Actor:Self 00000001 0024000F )
  4F4:  			Wait  1000`
  500:  		EndIf
  508:  	Case  ==  .Event:AirLiftFailed % 1F
  514:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  528:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
  538:  			Call  SetAnimation  ( .Actor:Self 00000001 0024000F )
  550:  			Wait  8`
  55C:  			ExecWait  $Script_8022ABA8_02 
  568:  			Call  ActorSpeak    ( 001D019B .Actor:Self 00000001 0024000E 00240003 ) % Hey, Mario!! Don't even think of trying to beat me ...
  588:  			Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  5A0:  			ExecWait  $Script_8022AC40_02 
  5AC:  		EndIf
  5B4:  	Case  ==  .Event:SpikeContact % 2A
  5C0:  		Call  SetAnimation  ( .Actor:Self 00000001 00240009 )
  5D8:  		Wait  8`
  5E4:  		Call  SetAnimation  ( .Actor:Self 00000001 00240005 )
  5FC:  		Call  SetGoalToHome ( .Actor:Self )
  60C:  		Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
  620:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  638:  		Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  650:  	Case  ==  .Event:EndFirstStrike % 35
  65C:  		SetConst  *Var0  00000001 
  66C:  		SetConst  *Var1  00240002 
  67C:  		ExecWait  DoReturnHome 
  688:  		Call  HPBarToHome   ( .Actor:Self )
  698:  	Case  ==  .Event:RecoverStatus % 31
  6A4:  		SetConst  *Var0  00000001 
  6B4:  		SetConst  *Var1  00240002 
  6C4:  		ExecWait  DoRecover 
  6D0:  	Default
  6D8:  EndSwitch
  6E0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  6F4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  708:  Return
  710:  End
}

%Magic Blast uses the "Multibounce" flag from Dark Star Edition,
%which will reduce damage by a lot if blocked and punished if
%a block or superguard is failed.

#new:Script $Script_MagicBlast
{
		Exec  $ShowMessage5
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
		If	  *GB_JrTroopaBattle == 00000001
			Call  SetAnimation      ( .Actor:Self 00000003 00240006 )
		Else 
			Call  SetAnimation      ( .Actor:Self 00000001 00240006 )
		EndIf
   64:  Wait  4`
   70:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   84:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   98:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   A8:  	Set   *Var3  00000000 
   B8:  	Set   *Var4  00000024 
   C8:  	SetF  *Var5  *Fixed[1.0] 
   D8:  Else
   E0:  	Set   *Var3  00000000 
   F0:  	Set   *Var4  0000000E 
  100:  	SetF  *Var5  *Fixed[0.4] 
  110:  EndIf
  118:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  Add   *Var0  *Var3 
  144:  Add   *Var1  *Var4 
  154:  Call  PlayEffect        ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  198:  Wait  10`
		If	  *GB_JrTroopaBattle == 00000001
			Call  SetAnimation      ( .Actor:Self 00000003 00240007 )
		Else 
			Call  SetAnimation      ( .Actor:Self 00000001 00240007 )
		EndIf
  1BC:  Call  UseBattleCamPreset    ( 00000002 )
  1CC:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
  1F0:  Switch  *VarA 
  1FC:  	CaseOR  ==  .HitResult:Miss % 6
  208:  	CaseOR  ==  .HitResult:Lucky % 5
  214:  		Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  228:  		Call  GetActorPos       ( .Actor:Player *Var3 *Var4 *Var5 )
  244:  		Sub   *Var3  00000078 
  254:  		Add   *Var4  00000014 
  264:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  278:  		If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  288:  			Set   *Var6  FFFFFFF8 
  298:  			Set   *Var7  00000014 
  2A8:  			SetF  *Var8  *Fixed[1.0] 
  2B8:  		Else
  2C0:  			Set   *Var6  FFFFFFFD 
  2D0:  			Set   *Var7  00000008 
  2E0:  			SetF  *Var8  *Fixed[0.4] 
  2F0:  		EndIf
  2F8:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  314:  		Add   *Var0  *Var6 
  324:  		Add   *Var1  *Var7 
  334:  		Call  PlayEffect    ( ~FX:ShapeSpell:Projectile *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 )
  378:  		Wait  15`
  384:  		If  *VarA  ==  .HitResult:Lucky % 5
  394:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  3B8:  		EndIf
  3C0:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3D4:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  3E8:  		Return
  3F0:  	EndCaseGroup
  3F8:  EndSwitch
  400:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  414:  Call  GetActorPos       ( .Actor:Player *Var3 *Var4 *Var5 )
  430:  Add   *Var4  00000014 
  440:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  454:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  464:  	Set   *Var6  FFFFFFF8 
  474:  	Set   *Var7  00000014 
  484:  	SetF  *Var8  *Fixed[1.0] 
  494:  Else
  49C:  	Set   *Var6  FFFFFFFD 
  4AC:  	Set   *Var7  00000008 
  4BC:  	SetF  *Var8  *Fixed[0.4] 
  4CC:  EndIf
  4D4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4F0:  Add   *Var0  *Var6 
  500:  Add   *Var1  *Var7 
  510:  Call  PlayEffect        ( ~FX:ShapeSpell:Projectile *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 0000000F 00000000 00000000 00000000 00000000 00000000 )
  554:  Wait  12`
		If	  *GB_JrTroopaBattle == 00000001
			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic|MultiBounce 00000000 00000000 0000000A 00000020 )
			Wait  5`
		Else 
			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic|MultiBounce 00000000 00000000 00000008 00000020 )
			Wait  6`
		EndIf
  400:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  414:  Call  GetActorPos       ( .Actor:Player *Var3 *Var4 *Var5 )
  430:  Add   *Var4  00000014 
  440:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  454:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  464:  	Set   *Var6  FFFFFFF8 
  474:  	Set   *Var7  00000014 
  484:  	SetF  *Var8  *Fixed[1.1] 
  494:  Else
  49C:  	Set   *Var6  FFFFFFFD 
  4AC:  	Set   *Var7  00000008 
  4BC:  	SetF  *Var8  *Fixed[0.5] 
  4CC:  EndIf
  4D4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4F0:  Add   *Var0  *Var6 
  500:  Add   *Var1  *Var7 
  510:  Call  PlayEffect        ( ~FX:ShapeSpell:Projectile *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 0000000F 00000000 00000000 00000000 00000000 00000000 )
  554:  Wait  12`
		If	  *GB_JrTroopaBattle == 00000001
			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic|MultiBounce 00000000 00000000 0000000A 00000020 )
			Wait  2`
		Else 
			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic|MultiBounce 00000000 00000000 00000008 00000020 )
			Wait  3`
		EndIf
    400:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast2 )
  414:  Call  GetActorPos       ( .Actor:Player *Var3 *Var4 *Var5 )
  430:  Add   *Var4  00000014 
  440:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
  454:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
  464:  	Set   *Var6  FFFFFFF8 
  474:  	Set   *Var7  00000014 
  484:  	SetF  *Var8  *Fixed[1.4] 
  494:  Else
  49C:  	Set   *Var6  FFFFFFFD 
  4AC:  	Set   *Var7  00000008 
  4BC:  	SetF  *Var8  *Fixed[0.7] 
  4CC:  EndIf
  4D4:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  4F0:  Add   *Var0  *Var6 
  500:  Add   *Var1  *Var7 
  510:  Call  PlayEffect        ( ~FX:ShapeSpell:Projectile *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 0000000F 00000000 00000000 00000000 00000000 00000000 )
  554:  Wait  12`
		If	  *GB_JrTroopaBattle == 00000001
			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic|MultiBounce 00000000 00000000 0000000C 00000020 )
			Wait  4`
		Else 
			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic|MultiBounce 00000000 00000000 00000009 00000020 )
			Wait  5`
		EndIf
  588:  Switch  *Var0 
  594:  	Case  ==  .HitResult:Hit % 0
  5A0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  5B8:  		If  *Var0  ==  00000000 
  5C8:  			Call  GetLastDamage ( .Actor:Player *Var1 )
  5DC:  			If  *Var1  !=  00000000 
  5EC:  				Call  SetActorVar   ( .Actor:Self 00000001 00000001 )
  604:  			EndIf
  60C:  		EndIf
  614:  EndSwitch
  61C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  630:  Call  UseIdleAnimation  ( .Actor:Self .True )
  644:  Return
  64C:  End
}


#new:Script $Script_Lightning {
		Exec  $ShowMessage7
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
		If	  *GB_JrTroopaBattle == 00000001
			Call  SetAnimation      ( .Actor:Self 00000003 00240006 )
		Else 
   4C:  	Call  SetAnimation      ( .Actor:Self 00000001 00240006 )
		EndIf
   64:  Wait  4`
   70:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   84:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   98:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   A8:  	Set   *Var3  00000000 
   B8:  	Set   *Var4  00000024 
   C8:  	SetF  *Var5  *Fixed[1.0] 
   D8:  Else
   E0:  	Set   *Var3  00000000 
   F0:  	Set   *Var4  0000000E 
  100:  	SetF  *Var5  FA84329A 
  110:  EndIf
  118:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  134:  Add   *Var0  *Var3 
  144:  Add   *Var1  *Var4 
  154:  Call  PlayEffect        ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  198:  Call  UseBattleCamPreset    ( 00000002 )
  1A8:  Call  MoveBattleCamOver (  60` )
  1B8:  Wait  20`
  1C4:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:BigPowerUp )
		If	  *GB_JrTroopaBattle == 00000001
			Call  SetAnimation      ( .Actor:Self 00000003 00240007 )
		Else 
   4C:  	Call  SetAnimation      ( .Actor:Self 00000001 00240007 )
		EndIf
  1F0:  Call  $Function_80218F60_02 ( )
  1FC:  Call  MakeLerp  ( 00000000 000000C8 0000003C .Easing:CosInOut )
  218:  Label  0
  224:  Call  UpdateLerp ( )
  230:  Call  $Function_80218FA4_02 ( *Var0 )
  240:  Wait  1`
  24C:  If  *Var1  ==  00000001 
  25C:  	Goto  0
  268:  EndIf
  270:  Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  28C:  Call  RandInt   ( 00000028 *Var1 )
  2A0:  Add   *Var0  *Var1 
  2B0:  Add   *Var0  00000032 
  2C0:  Set   *Var1  000000C8 
  2D0:  Call  PlaySoundAtActor  ( .Actor:Self 00000366 )
  2E4:  Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:NoContact 00000000 00000001 00000010 )
  308:  Switch  *VarA 
  314:  	Case  ==  .HitResult:Miss % 6
  320:  		Call  SetGoalToTarget   ( .Actor:Self )
  330:  		Call  GetGoalPos        ( .Actor:Self *Var3 00000000 *Var5 )
  34C:  		Call  PlayEffect        ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *Fixed[1.0] 00000012 00000000 00000000 00000000 00000000 )
  390:  		Wait  10`
  39C:  		Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
  3B8:  		Label  2
  3C4:  		Call  UpdateLerp ( )
  3D0:  		Call  $Function_80218FA4_02 ( *Var0 )
  3E0:  		Wait  1`
  3EC:  		If  *Var1  ==  00000001 
  3FC:  			Goto  2
  408:  		EndIf
  410:  		Wait  10`
  41C:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  430:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  444:  		Return
  44C:  	Case  ==  .HitResult:Lucky % 5
  458:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  474:  		Call  RandInt       ( 00000028 *Var1 )
  488:  		Sub   *Var0  *Var1 
  498:  		Set   *Var1  000000C8 
  4A8:  		Call  GetActorPos   ( .Actor:Self *Var3 *Var4 *Var5 )
  4C4:  		Call  PlayEffect    ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 00000000 *Var5 *Fixed[1.0] 00000012 00000000 00000000 00000000 00000000 )
  508:  		Thread
  510:  			Wait  5`
  51C:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  538:  			Add   *Var1  0000000C 
  548:  			Call  PlayEffect    ( ~FX:FaintDustCloud *Var0 *Var1 *Var2 *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
					If	  *GB_JrTroopaBattle == 00000001
						Call  SetAnimation  ( .Actor:Self 00000003 00240008 )
					Else 
						Call  SetAnimation  ( .Actor:Self 00000001 00240008 )
					EndIf
  5A4:  			Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  5C0:  			Wait  20`
  5CC:  			Sub   *Var0  00000007 
  5DC:  			Add   *Var1  0000000E 
  5EC:  			Add   *Var2  00000004 
  5FC:  			Call  PlayEffect    ( ~FX:Steam:Ring *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  640:  			Wait  10`
					If	  *GB_JrTroopaBattle == 00000001
						Call  SetAnimation  ( .Actor:Self 00000003 00240002 )
					Else 
						Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
					EndIf
  664:  		EndThread
  66C:  		Wait  10`
  678:  		If  *VarA  ==  .HitResult:Lucky % 5
  688:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  6AC:  		EndIf
  6B4:  		Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
  6D0:  		Label  2
  6DC:  		Call  UpdateLerp ( )
  6E8:  		Call  $Function_80218FA4_02 ( *Var0 )
  6F8:  		Wait  1`
  704:  		If  *Var1  ==  00000001 
  714:  			Goto  2
  720:  		EndIf
  728:  		Wait  10`
  734:  		Call  EnableIdleScript  ( .Actor:Self 00000001 )
  748:  		Call  UseIdleAnimation  ( .Actor:Self .True )
  75C:  		Return
  764:  EndSwitch
  76C:  Call  SetGoalToTarget   ( .Actor:Self )
  77C:  Call  GetGoalPos        ( .Actor:Self *Var3 00000000 *Var5 )
  798:  Call  PlayEffect        ( ~FX:Lightning *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *Fixed[1.0] 00000012 00000000 00000000 00000000 00000000 )
  7DC:  Wait  8`
		If	  *GB_JrTroopaBattle == 00000001
			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic|Electric 00000000 80010164 00000010 00000020 )
		Else 
			Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Magic|Electric 00000000 80010164 0000000F 00000020 )
		EndIf
  810:  Call  UseBattleCamPreset    ( 00000002 )
  820:  Call  MakeLerp  ( 000000C8 00000000 0000003C .Easing:Linear )
  83C:  Label  2
  848:  Call  UpdateLerp ( )
  854:  Call  $Function_80218FA4_02 ( *Var0 )
  864:  Wait  1`
  870:  If  *Var1  ==  00000001 
  880:  	Goto  2
  88C:  EndIf
  894:  Wait  2`
  8A0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  8B4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  8C8:  Return
  8D0:  End
}


%50 chance to heal.
%50 chance to increase either pow or defense by 1.
%Both of those are also a 50% chance each.

#new:Script $Script_BufforHeal
{
	Call  UseIdleAnimation  ( .Actor:Self .False )
    Call  EnableIdleScript  ( .Actor:Self 00000000 )
	If	  *GB_JrTroopaBattle == 00000001
		Goto 69
	EndIf
	Call  GetActorVar (.Actor:Self 00000004 *Var[C])
	If *Var[C] !& 00000008
			Add	*Var[C] 00000008
			Call SetActorVar (.Actor:Self 00000004 *Var[C])
		    Call  UseBattleCamPreset    ( 0000000D )
    		Call  BattleCamTargetActor  ( .Actor:Self )
    		Call  MoveBattleCamOver     (  20` )
     		Wait  20`
     		Call  ActorSpeak    ( 00120170 .Actor:Self 00000001 0024000F 0024000F ) % Darn
 			Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
			Wait  5`
    EndIf
	Set		*Var[8]  *Var[0]
		Label 69
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  SetGoalToTarget   ( .Actor:Self )
   4C:  Call  UseBattleCamPreset    ( 0000000E )
   5C:  Call  BattleCamTargetActor  ( .Actor:Self )
   6C:  Call  MoveBattleCamOver (  30` )
   7C:  Wait  30`
		If	  *GB_JrTroopaBattle == 00000001
			Call  SetAnimation      ( .Actor:Self 00000003 00240006 )
		Else 
			Call  SetAnimation      ( .Actor:Self 00000001 00240006 )
		EndIf
   A0:  Wait  8`
   AC:  Call  PlaySoundAtActor  ( .Actor:Self .Sound:SpellCast1 )
   C0:  Call  GetStatusFlags    ( .Actor:Self *Var0 )
   D4:  If  *Var0  !&  ~Flags:StatusFlags:Shrink % 80000
   E4:  	Set   *Var3  00000000 
   F4:  	Set   *Var4  00000024 
  104:  	SetF  *Var5  *Fixed[1.0] 
  114:  Else
  11C:  	Set   *Var3  00000000 
  12C:  	Set   *Var4  0000000E 
  13C:  	SetF  *Var5  FA84329A 
  14C:  EndIf
  154:  Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  170:  Add   *Var0  *Var3 
  180:  Add   *Var1  *Var4 
  190:  Call  PlayEffect    ( ~FX:GatherEnergyPink *Var0 *Var1 *Var2 *Var5 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1D4:  Wait  20`
	Call  RandInt   ( 00000001 *Var0 )
    If  *Var0  ==  00000000
		Exec  $ShowMessage6
		1E0:  Call  PlaySoundAtActor  ( .Actor:Self 000002F8 )
  1F4:  Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  208:  Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  224:  Add   *Var2  00000032 
  234:  Call  PlayEffect    ( ~FX:Sparkles:Random *Var1 *Var2 *Var3 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  278:  Call  PlayEffect    ( ~FX:Recover:LittleHeart *Var1 *Var2 *Var3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  2BC:  Wait  30`
		If	  *GB_JrTroopaBattle == 00000001
			Call  SetAnimation      ( .Actor:Self 00000003 00240002 )
		Else 
			Call  SetAnimation      ( .Actor:Self 00000001 00240002 )
		EndIf
  2E0:  Wait  10`
  2EC:  Call  GetEnemyMaxHP ( .Actor:Self *Var0 )
  300:  Mul   *Var0  00000006 
  310:  Div   *Var0  00000072 
  320:  Thread
  328:  	Wait  5`
  334:  	Call  PlaySoundAtActor  ( .Actor:Self 0000206D )
  348:  	Call  PlaySoundAtActor  ( .Actor:Self 00000214 )
  35C:  	Wait  30`
  368:  	Call  PlaySoundAtActor  ( .Actor:Self 0000025C )
  37C:  EndThread
  384:  Thread
  38C:  	Call  8026BF48  ( 00000001 )
  39C:  	Call  HealActor ( .Actor:Self *Var0 .False )
  3B4:  	Call  8026BF48  ( 00000000 )
  3C4:  EndThread
  3CC:  Wait  30`
    Else
	Exec  $ShowMessage8
      Call	SetTargetActor	( .Actor:Self .Actor:Player )
	Call	GetActorPos		( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call	GetStatusFlags	( .Actor:Self *Var[A] )
	If  *Var[A]  &  00080000 
		Add		*Var[1] 0000000C 
		Sub		*Var[2] 00000002 
		Call	PlayEffect	( 00000033 00000005 *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Else
		Add		*Var[1] 0000001F 
		Sub		*Var[2] 00000002 
		Call	PlayEffect	( 00000033 00000005 *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndIf
	Wait	12` 
	Call    PlaySoundAtActor     ( *Var[8] 000002DD )
	Thread
		Call	8026BF48	( 00000001 )
		Call  RandInt   ( 00000001 *Var0 )
		If  *Var0  ==  00000000
			Call	BoostAttack 	( .Actor:Self 00000001 )
		Else
			Call	BoostDefense 	( .Actor:Self 00000001 )  
		EndIf
		Call	8026BF48	( 00000000 )
	EndThread
	Call    WaitForBuffDone ( )
    Call    UseBattleCamPreset    ( 00000002 )
    EndIf
	Wait 12`
    Return
    End
}

%Lightning is less likely, but it can still happen.

#new:Script $Script_TakeTurn_8022B4F0_02 
{
	Call  RandInt   ( 00000064 *Var0 )
    If  *Var0  >  00000028
		ExecWait $Script_MagicBlast
	Else
		ExecWait $Script_Lightning
    EndIf
	Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
	If  *Var0  ==  00000000 
        Call  GetActorHP    ( .Actor:Self *Var0 )
        If  *Var0  <=  00000028 
			ExecWait $Script_BufforHeal
        EndIf
    EndIf
	Return
	End
}

#new:Script $Script_NextTurn_8022BB44_02 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetBattlePhase    ( *Var0 )
   38:  Switch  *Var0 
   44:  	Case  ==  0000000C 
   50:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
   68:  		If  *Var0  ==  00000001 
   78:  			Call  GetStatusFlags    ( .Actor:Self *Var1 )
   8C:  			If  *Var1  !&  ~Flags:StatusFlags:Sleep|Frozen|Fear|Paralyze|Dizzy|Stone|Stop % 35D000
   9C:  				Call  SetActorVar   ( .Actor:Self 00000000 00000002 )
   B4:  				Call  GetActorVar   ( .Actor:Self 00000003 *Var0 )
   CC:  				If  *Var0  ==  00000000 
   DC:  					ExecWait  $Script_8022ABA8_02 
   E8:  					Wait  5`
   F4:  				EndIf
   FC:  				Call  ActorSpeak    ( 001200DD .Actor:Self 00000001 0024000E 00240003 ) % Mario! You like magic tricks? You won't like this  ...
  11C:  				Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  134:  				ExecWait  $Script_8022AC40_02 
  140:  				Wait  5`
  14C:  			EndIf
  154:  		Else
  15C:  			Wait  5`
  168:  		EndIf
  170:  		Call  SetActorVar   ( .Actor:Self 00000003 00000000 )
  188:  		Return
  190:  	Case  ==  0000000B 
  19C:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  1B4:  		If  *Var0  ==  00000001 
  1C4:  			Call  SetActorVar   ( .Actor:Self 00000001 00000002 )
  1DC:  			ExecWait  $Script_8022ABA8_02 
  1E8:  			Wait  5`
  1F4:  			Call  ActorSpeak    ( 001200DE .Actor:Self 00000001 0024000E 00240003 ) % Ha ha ha ha!! That felt fantastic! I just keep on  ...
  214:  			Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  22C:  			ExecWait  $Script_8022AC40_02 
  238:  			Wait  2`
  244:  		EndIf
  24C:  		Return
  254:  	Case  ==  0000000A 
  260:  		Call  GetActorVar   ( .Actor:Self 00000000 *Var0 )
  278:  		If  *Var0  ==  00000000 
  288:  			Call  SetActorVar   ( .Actor:Self 00000000 00000001 )
  2A0:  			Wait  5`
  2AC:  			ExecWait  $Script_8022ABA8_02 
  2B8:  			Wait  2`
  2C4:  			Call  ActorSpeak    ( 001200DB .Actor:Self 00000002 0021001A 0021001B ) % Oh, I've been busy, Mario! I learned cooool techni ...
  2E4:  			Wait  1`
  2F0:  			ExecWait  $Script_8022A880_02 
  2FC:  			Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .True )
  318:  			Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .False )
  334:  			Wait  5`
  340:  			Call  ActorSpeak    ( 001200DC .Actor:Self 00000001 0024000E 00240003 ) % Look at that piece of work! I've been taking a lit ...
  360:  			Call  SetAnimation  ( .Actor:Self 00000001 00240002 )
  378:  			Wait  2`
  384:  			ExecWait  $Script_8022AC40_02 
  390:  		EndIf
  398:  EndSwitch
  3A0:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  3B4:  Call  UseIdleAnimation  ( .Actor:Self .True )
  3C8:  Return
  3D0:  End
}

#new:Script $Script_8022BF1C_02 {
    0:  Call  8027D32C  ( FFFFFF81 )
   10:  Call  UseIdleAnimation  ( .Actor:Self .False )
   24:  Call  80269E80  ( *Var5 )
   34:  Switch  *Var5 
   40:  	CaseOR  ==  0000000A 
   4C:  	CaseOR  ==  0000000E 
   58:  	CaseOR  ==  0000000C 
   64:  	CaseOR  ==  00000010 
   70:  	CaseOR  ==  0000000B 
   7C:  	CaseOR  ==  0000000F 
   88:  	CaseOR  ==  0000000D 
   94:  	CaseOR  ==  00000011 
   A0:  	CaseOR  ==  00000002 
   AC:  	EndCaseGroup
   B4:  	Default
   BC:  		Set   *Var2  00000000 
   CC:  		Loop  00000018 
   D8:  			Call  SetActorYaw   ( .Actor:Self *Var2 )
   EC:  			Add   *Var2  0000001E 
   FC:  			Wait  1`
  108:  		EndLoop
  110:  		Call  SetActorYaw   ( .Actor:Self  0` )
  124:  EndSwitch
  12C:  Label  0
  138:  Thread
  140:  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  15C:  	Add   *Var1  0000000A 
  16C:  	Add   *Var2  0000000A 
  17C:  	Loop  00000003 
  188:  		Call  PlayEffect    ( ~FX:BigSmokePuff *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  1CC:  		Wait  1`
  1D8:  	EndLoop
  1E0:  EndThread
  1E8:  Call  SetPartFlagBits   ( .Actor:Self 00000001 00000001 .True )
  204:  Call  SetPartFlagBits   ( .Actor:Self 00000002 00000001 .False )
  220:  Call  SetAnimation      ( .Actor:Self 00000002 00210015 )
  238:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  254:  Sub   *Var0  00000005 
  264:  Call  SetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
  280:  Wait  5`
  28C:  Call  PlaySound ( 000003E5 )
  29C:  Call  DropStarPoints    ( .Actor:Self )
  2AC:  Call  SetActorYaw       ( .Actor:Self  0` )
  2C0:  Call  UseBattleCamPreset    ( 0000000E )
  2D0:  Call  SetBattleCamZoom  (  260` )
  2E0:  Call  SetBattleCamOffsetZ   (  15` )
  2F0:  Call  BattleCamTargetActor  ( .Actor:Self )
  300:  Call  MoveBattleCamOver (  30` )
  310:  Call  PlaySoundAtActor  ( .Actor:Self 000020E5 )
  324:  Call  SetAnimation      ( .Actor:Self 00000002 00210014 )
  33C:  Call  SetIdleAnimations ( .Actor:Self 00000002 $IdleAnimations_8022A61C_02 )
  354:  Wait  58`
  360:  Call  SetActorFlagBits  ( .Actor:Self 00400000 .True )
  378:  Return
  380:  End
}

#new:Script $Script_8022C2A4_02 {
   BC:  Return
   C4:  End
}

