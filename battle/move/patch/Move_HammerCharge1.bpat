% Change maximum charge to +6
@ $Function_802A10A4
{
    0:  SW        R0, 84 (A0)
    4:  LAB       V0, 800DC106
    C:  SLTI      V0, V0, 5		% was 63
   10:  BNE       V0, R0, .o1C
   14:  ADDIU     V0, R0, 1
   18:  SW        V0, 84 (A0)
        .o1C
   1C:  JR        RA
   20:  ADDIU     V0, R0, 2
}

%Make Hammer Charge viable. Gives +3 attack instead of +2.

@	$Function_802A10C8
{
   [C4]  ADDIU     V0, V1, 3
}


@ $Script_802A39C8 %normal hammer
{
  110:  Call  $Function_802A10A4 ( )
  11C:  If  *Var0  ==  00000000
    0:  Call  UseBattleCamPreset    ( 00000020 )
   10:  Wait  10`
   1C:  Thread
   24:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   38:  	Wait  8`
   44:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   58:  	Wait  8`
   64:  EndThread
   6C:  Call  SetAnimation  ( .Actor:Player 00000000 00050004 )
   84:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   A0:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
   BC:  Wait  3`
   C8:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
   E4:  Wait  30`
   F0:  Call  UseBattleCamPreset    ( 00000002 )
  100:  Call  MoveBattleCamOver     ( 00000005 )
  12C:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  148:  	Add   *Var0  0000000F
  158:  	Add   *Var1  00000023
  168:  	Call  $Function_802A10C8        ( *Var0 *Var1 *Var2 )
  180:  	Call  PlaySoundAtActor  ( .Actor:Player 0000208F )
  194:  	Wait  4`
  1A0:  	Call  PlaySoundAtActor  ( .Actor:Player 00000160 )
  1B4:  	Call  SetActorJumpGravity       ( .Actor:Player *Fixed[1.0] )
  1C8:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[1.0] )
  1DC:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  1F8:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00050005 00050005 00050005 )
  218:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  234:  	Call  80273444  ( 00000014 00000000 00000000 )
  24C:  	Call  SetAnimation      ( .Actor:Player 00000000 00010009 )
  264:  	Wait  4`
  270:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  288:  	Call  UseIdleAnimation  ( .Actor:Player .True )
  29C:  	Call  $Function_802A12FC ( )
  2A8:  	Call  ShowVariableMessageBox    ( *Var0 0000003C 00000003 )
  2C0:  Else
  			Call	 $FreeTurn ( )	%makes this a free action
  			Call	 $Function_refund_current_move_fp ( ) %refund player's FP
  			Thread
  				Call  PlaySound	( 0000021D ) %bzzt
  			EndThread
  2C8:  	Call  ShowMessageBox    ( 00000008 0000003C )
  2DC:  EndIf
  2E4:  Label  0
  2F0:  Wait  1`
  2FC:  Call  IsMessageBoxDisplayed ( *Var0 )
  30C:  If  *Var0  ==  .True
  31C:  	Goto  0
  328:  EndIf
  330:  Call  UseIdleAnimation  ( .Actor:Player .False )
  344:  Return
  34C:  End
}

@ $Script_802A3D1C %super hammer
{
  110:  Call  $Function_802A10A4 ( )
  11C:  If  *Var0  ==  00000000
    0:  Call  UseBattleCamPreset    ( 00000020 )
   10:  Wait  10`
   1C:  Thread
   24:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   38:  	Wait  8`
   44:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   58:  	Wait  8`
   64:  EndThread
   6C:  Call  SetAnimation  ( .Actor:Player 00000000 00050006 )
   84:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   A0:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
   BC:  Wait  3`
   C8:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
   E4:  Wait  30`
   F0:  Call  UseBattleCamPreset    ( 00000002 )
  100:  Call  MoveBattleCamOver     ( 00000005 )
  12C:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  148:  	Add   *Var0  0000000F
  158:  	Add   *Var1  00000023
  168:  	Call  $Function_802A10C8        ( *Var0 *Var1 *Var2 )
  180:  	Call  PlaySoundAtActor  ( .Actor:Player 0000208F )
  194:  	Wait  4`
  1A0:  	Call  PlaySoundAtActor  ( .Actor:Player 00000160 )
  1B4:  	Call  SetActorJumpGravity       ( .Actor:Player *Fixed[1.0] )
  1C8:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[1.0] )
  1DC:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  1F8:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00050007 00050007 00050007 )
  218:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  234:  	Call  80273444  ( 00000014 00000000 00000000 )
  24C:  	Call  SetAnimation      ( .Actor:Player 00000000 00010009 )
  264:  	Wait  4`
  270:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  288:  	Call  UseIdleAnimation  ( .Actor:Player .True )
  29C:  	Call  $Function_802A12FC ( )
  2A8:  	Call  ShowVariableMessageBox    ( *Var0 0000003C 00000003 )
  2C0:  Else
    		Call	 $FreeTurn ( )	%makes this a free action
  			Call	 $Function_refund_current_move_fp ( ) %refund player's FP
  			Thread
  				Call  PlaySound	( 0000021D ) %bzzt
  			EndThread
  2C8:  	Call  ShowMessageBox    ( 00000008 0000003C )
  2DC:  EndIf
  2E4:  Label  0
  2F0:  Wait  1`
  2FC:  Call  IsMessageBoxDisplayed ( *Var0 )
  30C:  If  *Var0  ==  .True
  31C:  	Goto  0
  328:  EndIf
  330:  Call  UseIdleAnimation  ( .Actor:Player .False )
  344:  Return
  34C:  End
}

@ $Script_802A4070 %ultra hammer
{
  110:  Call  $Function_802A10A4 ( )
  11C:  If  *Var0  ==  00000000
    0:  Call  UseBattleCamPreset    ( 00000020 )
   10:  Wait  10`
   1C:  Thread
   24:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   38:  	Wait  8`
   44:  	Call  PlaySoundAtActor  ( .Actor:Player 00000156 )
   58:  	Wait  8`
   64:  EndThread
   6C:  Call  SetAnimation  ( .Actor:Player 00000000 00050008 )
   84:  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
   A0:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[1.2] )
   BC:  Wait  3`
   C8:  Call  $Function_802A11E8    ( *Var0 *Var1 *Var2 *Fixed[0.8] )
   E4:  Wait  30`
   F0:  Call  UseBattleCamPreset    ( 00000002 )
  100:  Call  MoveBattleCamOver     ( 00000005 )
  12C:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  148:  	Add   *Var0  0000000F
  158:  	Add   *Var1  00000023
  168:  	Call  $Function_802A10C8        ( *Var0 *Var1 *Var2 )
  180:  	Call  PlaySoundAtActor  ( .Actor:Player 0000208F )
  194:  	Wait  4`
  1A0:  	Call  PlaySoundAtActor  ( .Actor:Player 00000160 )
  1B4:  	Call  SetActorJumpGravity       ( .Actor:Player *Fixed[1.0] )
  1C8:  	Call  SetActorSpeed     ( .Actor:Player *Fixed[1.0] )
  1DC:  	Call  GetActorPos       ( .Actor:Player *Var0 *Var1 *Var2 )
  1F8:  	Call  SetJumpAnimations ( .Actor:Player 00000000 00050009 00050009 00050009 )
  218:  	Call  SetGoalPos        ( .Actor:Player *Var0 *Var1 *Var2 )
  234:  	Call  80273444  ( 00000014 00000000 00000000 )
  24C:  	Call  SetAnimation      ( .Actor:Player 00000000 00010009 )
  264:  	Wait  4`
  270:  	Call  SetAnimation      ( .Actor:Player 00000000 00010002 )
  288:  	Call  UseIdleAnimation  ( .Actor:Player .True )
  29C:  	Call  $Function_802A12FC ( )
  2A8:  	Call  ShowVariableMessageBox    ( *Var0 0000003C 00000003 )
  2C0:  Else
    		Call	 $FreeTurn ( )	%makes this a free action
  			Call	 $Function_refund_current_move_fp ( ) %refund player's FP
  			Thread
  				Call  PlaySound	( 0000021D ) %bzzt
  			EndThread
  2C8:  	Call  ShowMessageBox    ( 00000008 0000003C )
  2DC:  EndIf
  2E4:  Label  0
  2F0:  Wait  1`
  2FC:  Call  IsMessageBoxDisplayed ( *Var0 )
  30C:  If  *Var0  ==  .True
  31C:  	Goto  0
  328:  EndIf
  330:  Call  UseIdleAnimation  ( .Actor:Player .False )
  344:  Return
  34C:  End
}
