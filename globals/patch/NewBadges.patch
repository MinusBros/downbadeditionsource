%The following badges have been included in DBE.

%Tornado Jump (See Move_SuperJump.bpat)
%Multi-Smash (See Move_SuperSmash.bpat)
%Recoil Throw (See Move_ShrinkSmash.bpat)
%Attack FX M (See NewAttackFX.patch)
%Jumpman
%Hammerman
%Pity Flower
%Perfect Stand
%Perfect Power (AKA Perfect Rush)
%First Attack from Dark Star Edition
%Star Gift (WIP)



%=======================
% Jumpman & Hammerman
%=======================

% Jumpman & Hammerman - Disable Commands
%
% From ~Func:btl_state_update_normal_start
@Hook 16FD08 % 80241428
{
    PUSH    RA, A0, V0
    %===========
    % Jumpman
    %===========
    JAL     $IsBadgeActivated_Stack
    ORI     A0, R0, 016D % .Item:Jumpman
    BEQ     V0, R0, .Hammerman
    NOP
    % Disable Boots command
    LABU    A0, 800DC0E1 % commands flags
    ANDI    A0, A0, FFFD % disable bit1 (Hammer command)
    SAB     A0, 800DC0E1
    %===========
    .Hammerman
    %===========
    JAL     $IsBadgeActivated_Stack
    ORI     A0, R0, 016E % .Item:Hammerman
    BEQ     V0, R0, .End
    NOP
    % Disable Hammer command
    LABU    A0, 800DC0E1 % commands flags
    ANDI    A0, A0, FFFE % disable bit0 (Boots command)
    SAB     A0, 800DC0E1
    .End
    POP     RA, A0, V0
    % restore vanilla code
    SW	    V0, 0074 (S4)
    J       80241430
    SB	    R0, 0088 (S4)
}

% Jumpman & Hammerman - Boost attack power
%
% From ~Func:calc_player_damage_enemy
@Hook:Battle 1A0924 % 80272044
{
    PUSH    RA, A0, V0
    % S0 = Damage to deal
    %===========
    % Jumpman
    %===========
    % Check if player is doing a Hammer first strike
    LHU     A0, 17C (S4) % selectedMoveID
    ORI     V0, R0, 6 % Hammer First Strike
    BEQ     A0, V0, .Hammerman
    NOP
    JAL     $IsBadgeActivated_Stack
    ORI     A0, R0, 016D % .Item:Jumpman
    ADDU    S0, S0, V0
    %===========
    % Hammerman
    %===========
    .Hammerman
    % Check if player is doing a jump first strike
    LHU     A0, 17C (S4) % selectedMoveID
    ORI     V0, R0, 1D % Boots First Strike
    BEQ     A0, V0, .End
    NOP
    JAL     $IsBadgeActivated_Stack
    ORI     A0, R0, 016E % .Item:Hammerman
    ADDU    S0, S0, V0
    .End
    POP     RA, A0, V0
    % restore vanilla code
    JAL     ~Func:player_team_is_ability_active
    ADDIU	A1, R0, 0015 % .Ability:Berserk
    J       8027204C
    NOP
}


%=====================

% Pity Flower
%
% From ~Func:calc_enemy_damage_target
@Hook:Battle 1A6A94 % 802781B4
{
PUSH    RA, A0, A1, A2, A3, V0, V1, S0, S1, S2, S3
% Check if target is Player
ADDI    S1, S1, -C
% S1 = attacker's actor data
LHU     A0, 428 (S1) % load targetID
BNE     A0, R0, .End
NOP
JAL     $IsBadgeActivated_Stack
ORI     A0, R0, 016F % .Item:PityFlower
BEQ     V0, R0, .End
NOP
% Player has Pity Flower equipped
% "roll the dice" by the amount of pity
% badges equipped.
COPY    S0, V0
CLEAR   S2
CLEAR   S3
.Loop
% S0 = Amount of pity badges equipped
% S1 = $actor
% S2 = Loop counter
% S3 = amount of fp to give
JAL     ~Func:rand_int
ORI     A0, R0, 100`
SLTIU   A0, V0, 33` % 33% to give 1fp per pity badge
ADDU    S3, S3, A0
ADDIU   S2, S2, 1
SLTU    A0, S2, S0
BNE     A0, R0, .Loop
NOP
% check if mario will get at least 1fp
BEQ     S3, R0, .End
NOP
% show flying flower
COPY    T0, S3
LAW     S1, 800DC148 % load player data pointer
JAL     $ShowFlyingStat
ORI     A0, R0, 1 % Flower
% play sfx
JAL     ~Func:sfx_play_sound
ORI     A0, R0, 2055 % heal
% give FP
JAL     ~Func:recover_fp
COPY    A0, S3
.End
POP     RA, A0, A1, A2, A3, V0, V1, S0, S1, S2, S3
% Use ~Func:show_damage_popup instead to enable multiple
% pop ups to appear, needed for attacks that hurt mario & partner at the same time
JAL	    ~Func:show_damage_popup
LW	    A2, 0014 (S1)
J       802781BC
NOP
}

#export:Function $ShowFlyingStat
{
    PUSH    R0, R0, R0, R0, R0, R0, R0, R0, RA, A0, A1, A2, A3, V0, V1, S1, T0, F0, F2, F4, F6
    MTC1	R0, F2
    LWC1	F4, 0144 (S1) % load x pos
    LWC1	F0, 014C (S1) % load z pos
    TRUNC.W.S	F6, F0
    MFC1	A3, F6
    NOP
    MTC1	A3, F6
    NOP
    CVT.S.W	F6, F6
    ADD.S	F4, F4, F2
    LWC1	F0, 0148 (S1) % load y pos
    LUI	    AT, 420C
    MTC1	AT, F2
    MFC1	A3, F6
    ADD.S	F0, F0, F2
    TRUNC.W.S F6, F4
    MFC1	V1, F6
    NOP
    MTC1	V1, F6
    NOP
    CVT.S.W	F6, F6
    MFC1	A1, F6
    TRUNC.W.S F6, F0
    MFC1	V0, F6
    NOP
    MTC1	V0, F6
    NOP
    CVT.S.W	F6, F6
    MFC1	A2, F6
    SW	    V1, 0028 (SP)
    SW	    V0, 002C (SP)
    JAL	    80071090 % show flying Heart
    SW	    T0, 0010 (SP)
    POP     R0, R0, R0, R0, R0, R0, R0, R0, RA, A0, A1, A2, A3, V0, V1, S1, T0, F0, F2, F4, F6
    JR      RA
    NOP
}

%Healthy Healthy -> Perfect Stand

%Remove healthy healthy effect
%80277D74
%Need this to fix stone cap stuff

%Overwrite 8027792C
%but wait! this is in IncreaseMaxHealth.patch!
%Code moved: last stand now occurs after damage (Makes it less ultra OP)
@Function 1A620C
{
	LHU		V1, 1B8 (S3)	%hooked over (Load mario HP)
	ORI		V1, R0, 0	%Reset V1 to 0 (Ignore last stand code)
}



%Perfect Power, which is a variant of Perfect Rush from DSE.
%It's less BP but only increases attack by 1 at max HP.

%Kaiden -> Perfect Power 
%Kaiden has no visible effect, so we don't need to hunt down and remove an effect

%Note that code hooked over is calculating Mario's attack power boost
%I've also put a bunch of other attack modifying code here just to reduce the number of hooks I need to use
@Hook 1A0968
{
LW		A0, 18 (SP) %we need to get a certain thing for A0
PUSH	RA, S1, S2, T0
DADDU	S1, A0, R0				%set S1
%Fix for power rush and mega rush: set 800DC109 to either 2 or 1 depending on rush state
%Fix 2: have to properly negate the values if they are illegal (power rush with higher than 5 hp)
%Fix 3: set flag 0800 0000 at 800DC074
%set A0 properly
DADDU	A0, S1, R0
JAL		802672AC	%weird ability checker code (The "real" ability checker function is 800E9D48)
ADDIU	A1, R0, 1E	%it requires a specific value in A0 or else it crashes the game
BEQ		V0, R0, .endpowerrush
NOP
LAB		V0, 8010F292
SLTI	V0, V0, 6
BEQ		V0, R0, .checkillegalpower
NOP
LI		V0, 2
SAB		V0, 800DC109
LUI		V0, 0800
LAW		A0, 800DC074
OR		A0, A0, V0
SAW		A0, 800DC074
BEQ		R0, R0, .endpowerrush
NOP
.checkillegalpower
LAB		V0, 800DC109
LI		A0, 2
BNE		V0, A0 .endpowerrush
NOP
SAB		R0, 800DC109
.endpowerrush
DADDU	A0, S1, R0
JAL		802672AC	%weird ability checker code (The "real" ability checker function is 800E9D48)
ADDIU	A1, R0, 14	%it requires a specific value in A0 or else it crashes the game
BEQ		V0, R0, .endmegarush
NOP
LAB		V0, 8010F292
SLTI	V0, V0, 2
BEQ		V0, R0, .checkillegalmega
NOP
LI		V0, 1
SAB		V0, 800DC109
LUI		V0, 0800
LAW		A0, 800DC074
OR		A0, A0, V0
SAW		A0, 800DC074
BEQ		R0, R0, .endmegarush
NOP
.checkillegalmega
LAB		V0, 800DC109
LI		A0, 1
BNE		V0, A0 .endmegarush
NOP
SAB		R0, 800DC109
.endmegarush
%Check Perfect Rush
DADDU	A0, S1, R0
JAL		802672AC	%weird ability checker code (The "real" ability checker function is 800E9D48)
ADDIU	A1, R0, 32	%it requires a specific value in A0 or else it crashes the game
BEQ		V0, R0, .end1
NOP
LIO		V0,	8010F290
LB		T0, 2 (V0)
LB		V0, 3 (V0)
BNE		V0, T0, .end1
NOP
ADDIU	S0, S0, 1 	%increase damage (originally 2)
.end1
DADDU	A0, S1, R0
LB		S2, 224 (A0) %Check chill dur
BEQ		S2, R0, .nochill
ORI		V0, R0, 0
LB		V0, 223 (A0) %Check chill str
.nochill
LB		S1, 221 (A0) %Attack power
SUB		V0, S1, V0	%Now V0 = attack power - chill
POP		RA, S1, S2, T0
LW		A0, 18 (SP) %hooked over
J		80272090
NOP
}
%LW		A0, 18 (SP) %hooked over
%LB		V0, 221 (A0) %hooked over	(Attack power boost)





%First Attack -> (increases first attack damage)
/%
@Function 1C938	%80041538
{
ORI	V0, R0, 0 %negate first attack instakilling
}
%/
%	^ inside function
% 0001C764 --> 80041364




%/

%Star Gift is now its own badge instead
%of replacing Pretty Lucky.

%Star Gift
%double SP regen

@Function 1A5C28
{
ORI	V0, R0, 0 %negate lucky day damage avoidance
}

@Hook 1726E8
{
PUSH 	RA, S0, S1, A0 %idk, but if we don't then things break
ADDIU	S0, V0, 0 %move V0 to S0 temporarily
JAL     $IsBadgeEquipped %~Func:is_ability_active %800E9D48
ORI		A0, R0, 170 %pretty lucky
SAB		R0, 8010EFAF %^ the normal ability checker function is too messy to use here (changes a lot of registers around and causes problems)
BEQ		A0, R0 .no
ADDIU	V0, S0, 0
ORI 	S1, R0, 1
SAB		S1, 8010EFAF
ADDIU	V0, V0, 20		
.no
ADDIU	V0, V0, 20		%normal SP gain (*each bar is 256 units, you get 32 units per turn, so you get one per 8 turns, or one per 4 turns if doubled)
POP		RA, S0, S1, A0
J		80243E10
SW		V1, 0 (S0) %hooked over
}

%/