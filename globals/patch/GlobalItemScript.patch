%World item usage script
%Gets dmaed at 802C05CC / 32579C

/%
0000004D 00000001 00000000 
00000043 00000002 802D0E28 00000001 
00000043 00000002 802D2B0C FE363C80 
0000000B 00000002 FE363C80 00000000 
	00000043 00000001 802D2B6C 
	00000008 00000001 00000014 
00000013 00000000 
00000043 00000001 802C02E4 
00000043 00000002 802C0358 FE363C8A 
00000046 00000001 802C0410 
0000000A 00000002 FE363C8D 00000000 
	00000046 00000001 802C04F4
00000012 00000000 
	00000046 00000001 802C0560 
00000013 00000000 
0000000A 00000002 FE363C8F 00000001 
	00000043 00000002 802D1084 0001001D 
00000013 00000000 
0000000D 00000002 FE363C8B 00000000 
	00000043 00000004 802D1DFC FE363C80 FE363C81 FE363C82 
	00000027 00000002 FE363C80 00000000 
	00000027 00000002 FE363C81 00000023 
	00000043 00000005 802C00AC FE363C80 FE363C81 FE363C82 FE363C8B 
00000013 00000000
0000000D 00000002 FE363C8C 00000000
	00000043 00000004 802D1DFC FE363C80 FE363C81 FE363C82 
	00000027 00000002 FE363C80 00000014 
	00000027 00000002 FE363C81 00000019 
	00000043 00000005 802C016C FE363C80 FE363C81 FE363C82 FE363C8C 
00000013 00000000 
00000043 00000004 802D1DFC FE363C80 FE363C81 FE363C82 
00000027 00000002 FE363C81 00000019 
00000043 00000005 802D7520 FE363C80 FE363C81 FE363C82 FE363C8B
0000000B 00000002 FE363C8B 00000000
	00000043 00000002 802C022C FE363C8B
00000013 00000000 
0000000B 00000002 FE363C8C 00000000 
	00000043 00000002 802C0288 FE363C8C 
00000013 00000000
0000000A 00000002 FE363C8F 00000000
	00000008 00000001 0000000A 
	00000043 00000002 802D1084 00010032 
	00000008 00000001 0000001E 
00000012 00000000
	00000008 00000001 0000001E 
00000013 00000000 
00000043 00000004 802D1DFC FE363C80 FE363C81 FE363C82 
00000043 00000005 802D75D8 FE363C80 FE363C81 FE363C82 FE363C8B 
00000043 00000002 802D1084 00010002 
00000008 00000001 00000014 
00000043 00000001 802C03E8
00000043 00000002 802D0E28 00000000
00000043 00000001 802C031C 
00000002 00000000 
00000001 00000000
%/

@Data 32579C
{
	00000046 00000001 $NewGlobalItemScript
	00000002 00000000
	00000001 00000000
}

%Map script?
%Var A is set very early on, maybe even before the first script command?
#new:Script:Map $NewGlobalItemScript
{
		Call 	$Function_SetArbitraryByte  ( 00000000 $IsRemovalItem )
    0:  SetGroup  00000000 
    C:  Call  DisablePlayerInput    ( .True )
   1C:  Call  GetCurrentPartner     ( *Var[0] )
   2C:  If  *Var[0]  !=  00000000 
   3C:  	Call  802D2B6C ( )						%sets 4 flag on 8010EFC8
   48:  	Wait  20`
   54:  EndIf
   5C:  Call  802C02E4 ( )
   68:  Call  802C0358  ( *Var[A] )			%get item as varA? (Also sets varB and varC to HP and FP heal) (sets VarD too as eat/drink boolean?)		(when is VarF set? looks like a "negative heal" thing)
		Set *Var9 *VarA
   78:  ExecWait  802C0410 					%item anim
		Set *VarA *Var9
		Switch *VarA									
			Case == .Item:StarCake
				If  *Var[D]  ==  00000000 
					ExecWait  802C04F4 				%eat anim and sounds
				Else
					ExecWait  802C0560 				%drink anim and sounds
				EndIf								%post animations
				If  *Var[F]  ==  00000001 
					Call  SetPlayerAnimation    ( .PlayerAnim:StickOutTongue )
				EndIf
				Call 	$Function_AddSP ( 00000400 )
				If  *Var[F]  ==  00000000 
					Wait  10`
					Call  SetPlayerAnimation    ( .PlayerAnim:ThumbsUp )
					Wait  30`
				Else
					Wait  30`
				EndIf
				Call  SetPlayerAnimation    ( 00010002 )
				Wait  20`
				Call  802C03E8 ( )
				Call  DisablePlayerInput    ( .False )
				Call  802C031C ( )
				Return
		EndSwitch
   84:  If  *Var[D]  ==  00000000 
   94:  	ExecWait  802C04F4 				%eat anim and sounds
   A0:  Else
   A8:  	ExecWait  802C0560 				%drink anim and sounds
   B4:  EndIf								%post animations
   BC:  If  *Var[F]  ==  00000001 
   CC:  	Call  SetPlayerAnimation    ( .PlayerAnim:StickOutTongue )
   DC:  EndIf
   E4:  If  *Var[B]  >  00000000 
   F4:  	Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
  10C:  	Add   *Var[0]  00000000 
  11C:  	Add   *Var[1]  00000023 
  12C:  	Call  802C00AC      ( *Var[0] *Var[1] *Var[2] *Var[B] )
  148:  EndIf
  150:  If  *Var[C]  >  00000000 
  160:  	Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
  178:  	Add   *Var[0]  00000014 
  188:  	Add   *Var[1]  00000019 
  198:  	Call  802C016C      ( *Var[0] *Var[1] *Var[2] *Var[C] )
  1B4:  EndIf
  1BC:  Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
  1D4:  Add   *Var[1]  00000019 
  1E4:  Call  802D7520      ( *Var[0] *Var[1] *Var[2] *Var[B] )
  200:  If  *Var[B]  !=  00000000 
  210:  	Call  802C022C  ( *Var[B] )			%HP heal
  220:  EndIf
  228:  If  *Var[C]  !=  00000000 
  238:  	Call  802C0288  ( *Var[C] )			%FP heal
  248:  EndIf
		Call  $Function_EnforceFPLimit ( )
  250:  If  *Var[F]  ==  00000000 
  260:  	Wait  10`
  26C:  	Call  SetPlayerAnimation    ( .PlayerAnim:ThumbsUp )
  27C:  	Wait  30`
  288:  Else
  290:  	Wait  30`
  29C:  EndIf
  2A4:  Call  GetPlayerPos  ( *Var[0] *Var[1] *Var[2] )
  2BC:  Call  802D75D8  ( *Var[0] *Var[1] *Var[2] *Var[B] )
  2D8:  Call  SetPlayerAnimation    ( 00010002 )
  2E8:  Wait  20`
  2F4:  Call  802C03E8 ( )
  300:  Call  DisablePlayerInput    ( .False )
  310:  Call  802C031C ( )
	Return
	End
}

#export:Data $IsRemovalItem
{
	00000000
}

#new:Function $Function_EnforceFPLimit
{
	LI		A0, 8010F290
	LB		A1, 5 (A0)
	LB		A2, 6 (A0)	
	BLT		A1, A2, .end
	NOP
	COPY	A1, A2
	SAB		A2, 8010F295
	.end
	JR		RA
	NOP
}



%Function 802C03E8
%	Removes the item (Removal happens after the script executes!) (3255B8)

#new:Data $ReplaceItem
{
	00000000
}

@Hook 3255D0
{
	PUSH	A0, A1, A2
	LAW		A0, $ReplaceItem
	BEQ		A0, R0, .nostore
	NOP
	%storing at 8010F444 is always safe because there must be at least 1 open slot since 1 item was removed
	SAB		A0, 8010F444
	.nostore
	POP		A0, A1, A2	
	ADDI	SP, SP, 18
	JR		RA				%overwrote a JR RA so no need for normal jump
	NOP
}

%Fully dmaed starting...
%3251D0
